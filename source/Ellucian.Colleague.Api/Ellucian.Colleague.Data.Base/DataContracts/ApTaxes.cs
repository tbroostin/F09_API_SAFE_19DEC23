//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 4/22/2019 9:00:32 AM by user bsf1
//
//     Type: ENTITY
//     Entity: AP.TAXES
//     Application: CORE
//     Environment: dvcoll-2019
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "ApTaxes")]
	[ColleagueDataContract(GeneratedDateTime = "4/22/2019 9:00:32 AM", User = "bsf1")]
	[EntityDataContract(EntityName = "AP.TAXES", EntityType = "PHYS")]
	public class ApTaxes : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: AP.TAX.DESC
		/// </summary>
		[DataMember(Order = 0, Name = "AP.TAX.DESC")]
		public string ApTaxDesc { get; set; }
		
		/// <summary>
		/// CDD Name: AP.TAX.PCT
		/// </summary>
		[DataMember(Order = 2, Name = "AP.TAX.PCT")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ApTaxPct { get; set; }
		
		/// <summary>
		/// CDD Name: AP.TAX.REBATE.PCT
		/// </summary>
		[DataMember(Order = 3, Name = "AP.TAX.REBATE.PCT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ApTaxRebatePct { get; set; }
		
		/// <summary>
		/// CDD Name: AP.TAX.COMPOUNDING.SEQ
		/// </summary>
		[DataMember(Order = 4, Name = "AP.TAX.COMPOUNDING.SEQ")]
		public List<int?> ApTaxCompoundingSeq { get; set; }
		
		/// <summary>
		/// CDD Name: AP.TAX.EFFECTIVE.DATE
		/// </summary>
		[DataMember(Order = 5, Name = "AP.TAX.EFFECTIVE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ApTaxEffectiveDate { get; set; }
		
		/// <summary>
		/// CDD Name: AP.TAX.EXEMPT.PCT
		/// </summary>
		[DataMember(Order = 6, Name = "AP.TAX.EXEMPT.PCT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ApTaxExemptPct { get; set; }
		
		/// <summary>
		/// CDD Name: AP.TAX.APPUR.ENTRY.FLAG
		/// </summary>
		[DataMember(Order = 7, Name = "AP.TAX.APPUR.ENTRY.FLAG")]
		public string ApTaxAppurEntryFlag { get; set; }
		
		/// <summary>
		/// CDD Name: AP.USE.TAX.FLAG
		/// </summary>
		[DataMember(Order = 15, Name = "AP.USE.TAX.FLAG")]
		public string ApUseTaxFlag { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ApTaxesTaxInfo> TaxInfoEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: TAX.INFO
			
			TaxInfoEntityAssociation = new List<ApTaxesTaxInfo>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ApTaxEffectiveDate != null)
			{
				int numTaxInfo = ApTaxEffectiveDate.Count;
				if (ApTaxPct !=null && ApTaxPct.Count > numTaxInfo) numTaxInfo = ApTaxPct.Count;
				if (ApTaxRebatePct !=null && ApTaxRebatePct.Count > numTaxInfo) numTaxInfo = ApTaxRebatePct.Count;
				if (ApTaxCompoundingSeq !=null && ApTaxCompoundingSeq.Count > numTaxInfo) numTaxInfo = ApTaxCompoundingSeq.Count;
				if (ApTaxExemptPct !=null && ApTaxExemptPct.Count > numTaxInfo) numTaxInfo = ApTaxExemptPct.Count;

				for (int i = 0; i < numTaxInfo; i++)
				{

					Decimal? value0 = null;
					if (ApTaxPct != null && i < ApTaxPct.Count)
					{
						value0 = ApTaxPct[i];
					}


					Decimal? value1 = null;
					if (ApTaxRebatePct != null && i < ApTaxRebatePct.Count)
					{
						value1 = ApTaxRebatePct[i];
					}


					int? value2 = null;
					if (ApTaxCompoundingSeq != null && i < ApTaxCompoundingSeq.Count)
					{
						value2 = ApTaxCompoundingSeq[i];
					}


					DateTime? value3 = null;
					if (ApTaxEffectiveDate != null && i < ApTaxEffectiveDate.Count)
					{
						value3 = ApTaxEffectiveDate[i];
					}


					Decimal? value4 = null;
					if (ApTaxExemptPct != null && i < ApTaxExemptPct.Count)
					{
						value4 = ApTaxExemptPct[i];
					}

					TaxInfoEntityAssociation.Add(new ApTaxesTaxInfo( value0, value1, value2, value3, value4));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class ApTaxesTaxInfo
	{
		public Decimal? ApTaxPctAssocMember;	
		public Decimal? ApTaxRebatePctAssocMember;	
		public int? ApTaxCompoundingSeqAssocMember;	
		public DateTime? ApTaxEffectiveDateAssocMember;	
		public Decimal? ApTaxExemptPctAssocMember;	
		public ApTaxesTaxInfo() {}
		public ApTaxesTaxInfo(
			Decimal? inApTaxPct,
			Decimal? inApTaxRebatePct,
			int? inApTaxCompoundingSeq,
			DateTime? inApTaxEffectiveDate,
			Decimal? inApTaxExemptPct)
		{
			ApTaxPctAssocMember = inApTaxPct;
			ApTaxRebatePctAssocMember = inApTaxRebatePct;
			ApTaxCompoundingSeqAssocMember = inApTaxCompoundingSeq;
			ApTaxEffectiveDateAssocMember = inApTaxEffectiveDate;
			ApTaxExemptPctAssocMember = inApTaxExemptPct;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 10:26:08 AM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: CALENDAR.SCHEDULES
//     Application: CORE
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "CalendarSchedules")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 10:26:08 AM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "CALENDAR.SCHEDULES", EntityType = "PHYS")]
	public class CalendarSchedules : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: CALS.DESCRIPTION
		/// </summary>
		[DataMember(Order = 0, Name = "CALS.DESCRIPTION")]
		public string CalsDescription { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.TYPE
		/// </summary>
		[DataMember(Order = 1, Name = "CALS.TYPE")]
		public string CalsType { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.LOCATION
		/// </summary>
		[DataMember(Order = 2, Name = "CALS.LOCATION")]
		public string CalsLocation { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.POINTER
		/// </summary>
		[DataMember(Order = 3, Name = "CALS.POINTER")]
		public string CalsPointer { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.DATE
		/// </summary>
		[DataMember(Order = 4, Name = "CALS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? CalsDate { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.START.TIME
		/// </summary>
		[DataMember(Order = 5, Name = "CALS.START.TIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? CalsStartTime { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.END.TIME
		/// </summary>
		[DataMember(Order = 6, Name = "CALS.END.TIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? CalsEndTime { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.PEOPLE
		/// </summary>
		[DataMember(Order = 7, Name = "CALS.PEOPLE")]
		public List<string> CalsPeople { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.BUILDINGS
		/// </summary>
		[DataMember(Order = 10, Name = "CALS.BUILDINGS")]
		public List<string> CalsBuildings { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.ROOMS
		/// </summary>
		[DataMember(Order = 11, Name = "CALS.ROOMS")]
		public List<string> CalsRooms { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.CAMPUS.CALENDAR
		/// </summary>
		[DataMember(Order = 12, Name = "CALS.CAMPUS.CALENDAR")]
		public string CalsCampusCalendar { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.BLDG.ROOM.IDX
		/// </summary>
		[DataMember(Order = 28, Name = "CALS.BLDG.ROOM.IDX")]
		public List<string> CalsBldgRoomIdx { get; set; }
		
		/// <summary>
		/// CDD Name: CALS.COURSE.SEC.MEETING
		/// </summary>
		[DataMember(Order = 31, Name = "CALS.COURSE.SEC.MEETING")]
		public string CalsCourseSecMeeting { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<CalendarSchedulesCalsBldgRoom> CalsBldgRoomEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: CALS.BLDG.ROOM
			
			CalsBldgRoomEntityAssociation = new List<CalendarSchedulesCalsBldgRoom>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(CalsBuildings != null)
			{
				int numCalsBldgRoom = CalsBuildings.Count;
				if (CalsRooms !=null && CalsRooms.Count > numCalsBldgRoom) numCalsBldgRoom = CalsRooms.Count;

				for (int i = 0; i < numCalsBldgRoom; i++)
				{

					string value0 = "";
					if (CalsBuildings != null && i < CalsBuildings.Count)
					{
						value0 = CalsBuildings[i];
					}


					string value1 = "";
					if (CalsRooms != null && i < CalsRooms.Count)
					{
						value1 = CalsRooms[i];
					}

					CalsBldgRoomEntityAssociation.Add(new CalendarSchedulesCalsBldgRoom( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class CalendarSchedulesCalsBldgRoom
	{
		public string CalsBuildingsAssocMember;	
		public string CalsRoomsAssocMember;	
		public CalendarSchedulesCalsBldgRoom() {}
		public CalendarSchedulesCalsBldgRoom(
			string inCalsBuildings,
			string inCalsRooms)
		{
			CalsBuildingsAssocMember = inCalsBuildings;
			CalsRoomsAssocMember = inCalsRooms;
		}
	}
}
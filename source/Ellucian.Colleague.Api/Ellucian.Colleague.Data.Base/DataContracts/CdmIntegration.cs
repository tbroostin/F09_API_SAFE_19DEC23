//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 8/8/2018 5:45:49 PM by user balvano
//
//     Type: ENTITY
//     Entity: CDM.INTEGRATION
//     Application: UT
//     Environment: dvetk
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "CdmIntegration")]
	[ColleagueDataContract(GeneratedDateTime = "8/8/2018 5:45:49 PM", User = "balvano")]
	[EntityDataContract(EntityName = "CDM.INTEGRATION", EntityType = "PHYS")]
	public class CdmIntegration : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: CINT.DESC
		/// </summary>
		[DataMember(Order = 0, Name = "CINT.DESC")]
		public string CintDesc { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.SERVER.BASE.URL
		/// </summary>
		[DataMember(Order = 1, Name = "CINT.SERVER.BASE.URL")]
		public string CintServerBaseUrl { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.SERVER.VIRT.HOST
		/// </summary>
		[DataMember(Order = 2, Name = "CINT.SERVER.VIRT.HOST")]
		public string CintServerVirtHost { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.SERVER.TIMEOUT
		/// </summary>
		[DataMember(Order = 3, Name = "CINT.SERVER.TIMEOUT")]
		public int? CintServerTimeout { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.SERVER.AUTORECOVER.FLAG
		/// </summary>
		[DataMember(Order = 4, Name = "CINT.SERVER.AUTORECOVER.FLAG")]
		public string CintServerAutorecoverFlag { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.SERVER.HEARTBEAT
		/// </summary>
		[DataMember(Order = 5, Name = "CINT.SERVER.HEARTBEAT")]
		public int? CintServerHeartbeat { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.SERVER.USERNAME
		/// </summary>
		[DataMember(Order = 6, Name = "CINT.SERVER.USERNAME")]
		public string CintServerUsername { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.SERVER.PASSWORD
		/// </summary>
		[DataMember(Order = 7, Name = "CINT.SERVER.PASSWORD")]
		public string CintServerPassword { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.BUS.EVENT.EXCHANGE
		/// </summary>
		[DataMember(Order = 8, Name = "CINT.BUS.EVENT.EXCHANGE")]
		public string CintBusEventExchange { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.BUS.EVENT.QUEUE
		/// </summary>
		[DataMember(Order = 9, Name = "CINT.BUS.EVENT.QUEUE")]
		public string CintBusEventQueue { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.BUS.EVENT.ROUTING.KEYS
		/// </summary>
		[DataMember(Order = 10, Name = "CINT.BUS.EVENT.ROUTING.KEYS")]
		public List<string> CintBusEventRoutingKeys { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.OUTBOUND.EXCHANGE
		/// </summary>
		[DataMember(Order = 11, Name = "CINT.OUTBOUND.EXCHANGE")]
		public string CintOutboundExchange { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.INBOUND.EXCHANGE
		/// </summary>
		[DataMember(Order = 12, Name = "CINT.INBOUND.EXCHANGE")]
		public string CintInboundExchange { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.INBOUND.QUEUE
		/// </summary>
		[DataMember(Order = 13, Name = "CINT.INBOUND.QUEUE")]
		public string CintInboundQueue { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.INBOUND.ROUTING.KEYS
		/// </summary>
		[DataMember(Order = 14, Name = "CINT.INBOUND.ROUTING.KEYS")]
		public List<string> CintInboundRoutingKeys { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.ERP
		/// </summary>
		[DataMember(Order = 15, Name = "CINT.API.ERP")]
		public string CintApiErp { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.USERNAME
		/// </summary>
		[DataMember(Order = 16, Name = "CINT.API.USERNAME")]
		public string CintApiUsername { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.PASSWORD
		/// </summary>
		[DataMember(Order = 17, Name = "CINT.API.PASSWORD")]
		public string CintApiPassword { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.RESOURCE
		/// </summary>
		[DataMember(Order = 18, Name = "CINT.API.RESOURCE")]
		public List<string> CintApiResource { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.RSRC.SCHEMA.VER
		/// </summary>
		[DataMember(Order = 19, Name = "CINT.API.RSRC.SCHEMA.VER")]
		public List<int?> CintApiRsrcSchemaVer { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.PATH
		/// </summary>
		[DataMember(Order = 20, Name = "CINT.API.PATH")]
		public List<string> CintApiPath { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.BUS.EVENTS
		/// </summary>
		[DataMember(Order = 21, Name = "CINT.API.BUS.EVENTS")]
		public List<string> CintApiBusEvents { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.DEBUG.LEVEL
		/// </summary>
		[DataMember(Order = 22, Name = "CINT.DEBUG.LEVEL")]
		public string CintDebugLevel { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.GUID.LIFESPAN
		/// </summary>
		[DataMember(Order = 23, Name = "CINT.GUID.LIFESPAN")]
		public int? CintGuidLifespan { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.USE.INTEGRATION.HUB
		/// </summary>
		[DataMember(Order = 24, Name = "CINT.USE.INTEGRATION.HUB")]
		public string CintUseIntegrationHub { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.HUB.API.KEY
		/// </summary>
		[DataMember(Order = 25, Name = "CINT.HUB.API.KEY")]
		public string CintHubApiKey { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.HUB.TOKEN.URL
		/// </summary>
		[DataMember(Order = 26, Name = "CINT.HUB.TOKEN.URL")]
		public string CintHubTokenUrl { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.HUB.PUBLISH.URL
		/// </summary>
		[DataMember(Order = 27, Name = "CINT.HUB.PUBLISH.URL")]
		public string CintHubPublishUrl { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.HUB.SUBSCRIBE.URL
		/// </summary>
		[DataMember(Order = 28, Name = "CINT.HUB.SUBSCRIBE.URL")]
		public string CintHubSubscribeUrl { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.HUB.MEDIA.TYPE
		/// </summary>
		[DataMember(Order = 29, Name = "CINT.HUB.MEDIA.TYPE")]
		public string CintHubMediaType { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.HUB.ERROR.URL
		/// </summary>
		[DataMember(Order = 30, Name = "CINT.HUB.ERROR.URL")]
		public string CintHubErrorUrl { get; set; }
		
		/// <summary>
		/// CDD Name: CINT.API.RSRC.SCHEMA.SEM.VER
		/// </summary>
		[DataMember(Order = 31, Name = "CINT.API.RSRC.SCHEMA.SEM.VER")]
		public List<string> CintApiRsrcSchemaSemVer { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<CdmIntegrationApiBusEventMap> ApiBusEventMapEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: API.BUS.EVENT.MAP
			
			ApiBusEventMapEntityAssociation = new List<CdmIntegrationApiBusEventMap>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(CintApiResource != null)
			{
				int numApiBusEventMap = CintApiResource.Count;
				if (CintApiRsrcSchemaVer !=null && CintApiRsrcSchemaVer.Count > numApiBusEventMap) numApiBusEventMap = CintApiRsrcSchemaVer.Count;
				if (CintApiPath !=null && CintApiPath.Count > numApiBusEventMap) numApiBusEventMap = CintApiPath.Count;
				if (CintApiBusEvents !=null && CintApiBusEvents.Count > numApiBusEventMap) numApiBusEventMap = CintApiBusEvents.Count;
				if (CintApiRsrcSchemaSemVer !=null && CintApiRsrcSchemaSemVer.Count > numApiBusEventMap) numApiBusEventMap = CintApiRsrcSchemaSemVer.Count;

				for (int i = 0; i < numApiBusEventMap; i++)
				{

					string value0 = "";
					if (CintApiResource != null && i < CintApiResource.Count)
					{
						value0 = CintApiResource[i];
					}


					int? value1 = null;
					if (CintApiRsrcSchemaVer != null && i < CintApiRsrcSchemaVer.Count)
					{
						value1 = CintApiRsrcSchemaVer[i];
					}


					string value2 = "";
					if (CintApiPath != null && i < CintApiPath.Count)
					{
						value2 = CintApiPath[i];
					}


					string value3 = "";
					if (CintApiBusEvents != null && i < CintApiBusEvents.Count)
					{
						value3 = CintApiBusEvents[i];
					}


					string value4 = "";
					if (CintApiRsrcSchemaSemVer != null && i < CintApiRsrcSchemaSemVer.Count)
					{
						value4 = CintApiRsrcSchemaSemVer[i];
					}

					ApiBusEventMapEntityAssociation.Add(new CdmIntegrationApiBusEventMap( value0, value1, value2, value3, value4));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class CdmIntegrationApiBusEventMap
	{
		public string CintApiResourceAssocMember;	
		public int? CintApiRsrcSchemaVerAssocMember;	
		public string CintApiPathAssocMember;	
		public string CintApiBusEventsAssocMember;	
		public string CintApiRsrcSchemaSemVerAssocMember;	
		public CdmIntegrationApiBusEventMap() {}
		public CdmIntegrationApiBusEventMap(
			string inCintApiResource,
			int? inCintApiRsrcSchemaVer,
			string inCintApiPath,
			string inCintApiBusEvents,
			string inCintApiRsrcSchemaSemVer)
		{
			CintApiResourceAssocMember = inCintApiResource;
			CintApiRsrcSchemaVerAssocMember = inCintApiRsrcSchemaVer;
			CintApiPathAssocMember = inCintApiPath;
			CintApiBusEventsAssocMember = inCintApiBusEvents;
			CintApiRsrcSchemaSemVerAssocMember = inCintApiRsrcSchemaSemVer;
		}
	}
}
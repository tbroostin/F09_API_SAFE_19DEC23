//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 7/3/2020 3:44:29 PM by user dvcoll-srm
//
//     Type: ENTITY
//     Entity: EDM.QUERIES
//     Application: CORE
//     Environment: dvcoll
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "EdmQueries")]
	[ColleagueDataContract(GeneratedDateTime = "7/3/2020 3:44:29 PM", User = "dvcoll-srm")]
	[EntityDataContract(EntityName = "EDM.QUERIES", EntityType = "PHYS")]
	public class EdmQueries : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: EDMQ.DESCRIPTION
		/// </summary>
		[DataMember(Order = 0, Name = "EDMQ.DESCRIPTION")]
		public string EdmqDescription { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.JSON.LABEL
		/// </summary>
		[DataMember(Order = 1, Name = "EDMQ.JSON.LABEL")]
		public string EdmqJsonLabel { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.JSON.PROPERTY.TYPE
		/// </summary>
		[DataMember(Order = 2, Name = "EDMQ.JSON.PROPERTY.TYPE")]
		public string EdmqJsonPropertyType { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.GUID.COLUMN.NAME
		/// </summary>
		[DataMember(Order = 3, Name = "EDMQ.GUID.COLUMN.NAME")]
		public string EdmqGuidColumnName { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.GUID.FILE.NAME
		/// </summary>
		[DataMember(Order = 4, Name = "EDMQ.GUID.FILE.NAME")]
		public string EdmqGuidFileName { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.TRANS.COLUMN.NAME
		/// </summary>
		[DataMember(Order = 5, Name = "EDMQ.TRANS.COLUMN.NAME")]
		public string EdmqTransColumnName { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.TRANS.FILE.NAME
		/// </summary>
		[DataMember(Order = 6, Name = "EDMQ.TRANS.FILE.NAME")]
		public string EdmqTransFileName { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.TRANS.TABLE.NAME
		/// </summary>
		[DataMember(Order = 7, Name = "EDMQ.TRANS.TABLE.NAME")]
		public string EdmqTransTableName { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.TRANS.ENUM.VALUE
		/// </summary>
		[DataMember(Order = 8, Name = "EDMQ.TRANS.ENUM.VALUE")]
		public List<string> EdmqTransEnumValue { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.TRANS.COLL.VALUE
		/// </summary>
		[DataMember(Order = 9, Name = "EDMQ.TRANS.COLL.VALUE")]
		public List<string> EdmqTransCollValue { get; set; }
		
		/// <summary>
		/// CDD Name: EDMQ.SELECT.CRITERIA
		/// </summary>
		[DataMember(Order = 10, Name = "EDMQ.SELECT.CRITERIA")]
		public string EdmqSelectCriteria { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<EdmQueriesEdmqTrans> EdmqTransEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: EDMQ.TRANS
			
			EdmqTransEntityAssociation = new List<EdmQueriesEdmqTrans>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(EdmqTransEnumValue != null)
			{
				int numEdmqTrans = EdmqTransEnumValue.Count;
				if (EdmqTransCollValue !=null && EdmqTransCollValue.Count > numEdmqTrans) numEdmqTrans = EdmqTransCollValue.Count;

				for (int i = 0; i < numEdmqTrans; i++)
				{

					string value0 = "";
					if (EdmqTransEnumValue != null && i < EdmqTransEnumValue.Count)
					{
						value0 = EdmqTransEnumValue[i];
					}


					string value1 = "";
					if (EdmqTransCollValue != null && i < EdmqTransCollValue.Count)
					{
						value1 = EdmqTransCollValue[i];
					}

					EdmqTransEntityAssociation.Add(new EdmQueriesEdmqTrans( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class EdmQueriesEdmqTrans
	{
		public string EdmqTransEnumValueAssocMember;	
		public string EdmqTransCollValueAssocMember;	
		public EdmQueriesEdmqTrans() {}
		public EdmQueriesEdmqTrans(
			string inEdmqTransEnumValue,
			string inEdmqTransCollValue)
		{
			EdmqTransEnumValueAssocMember = inEdmqTransEnumValue;
			EdmqTransCollValueAssocMember = inEdmqTransCollValue;
		}
	}
}
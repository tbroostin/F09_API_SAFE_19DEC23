//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 9/22/2020 1:49:05 PM by user dvcoll-srm
//
//     Type: ENTITY
//     Entity: EDM.SELECT.CRITERIA
//     Application: CORE
//     Environment: dvcoll
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "EdmSelectCriteria")]
	[ColleagueDataContract(GeneratedDateTime = "9/22/2020 1:49:05 PM", User = "dvcoll-srm")]
	[EntityDataContract(EntityName = "EDM.SELECT.CRITERIA", EntityType = "PHYS")]
	public class EdmSelectCriteria : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.FILE.NAME
		/// </summary>
		[DataMember(Order = 0, Name = "EDMS.SELECT.FILE.NAME")]
		public string EdmsSelectFileName { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.COLUMN.NAME
		/// </summary>
		[DataMember(Order = 1, Name = "EDMS.SELECT.COLUMN.NAME")]
		public string EdmsSelectColumnName { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.CONNECTOR
		/// </summary>
		[DataMember(Order = 2, Name = "EDMS.SELECT.CONNECTOR")]
		public List<string> EdmsSelectConnector { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.COLUMN
		/// </summary>
		[DataMember(Order = 3, Name = "EDMS.SELECT.COLUMN")]
		public List<string> EdmsSelectColumn { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.OPER
		/// </summary>
		[DataMember(Order = 4, Name = "EDMS.SELECT.OPER")]
		public List<string> EdmsSelectOper { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.VALUE
		/// </summary>
		[DataMember(Order = 5, Name = "EDMS.SELECT.VALUE")]
		public List<string> EdmsSelectValue { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.PARAGRAPH
		/// </summary>
		[DataMember(Order = 6, Name = "EDMS.SELECT.PARAGRAPH")]
		public List<string> EdmsSelectParagraph { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.RULES
		/// </summary>
		[DataMember(Order = 7, Name = "EDMS.SELECT.RULES")]
		public List<string> EdmsSelectRules { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SORT.COLUMNS
		/// </summary>
		[DataMember(Order = 8, Name = "EDMS.SORT.COLUMNS")]
		public List<string> EdmsSortColumns { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SORT.SEQUENCE
		/// </summary>
		[DataMember(Order = 9, Name = "EDMS.SORT.SEQUENCE")]
		public List<string> EdmsSortSequence { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SAVING.FIELD
		/// </summary>
		[DataMember(Order = 10, Name = "EDMS.SAVING.FIELD")]
		public string EdmsSavingField { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SAVING.OPTION
		/// </summary>
		[DataMember(Order = 11, Name = "EDMS.SAVING.OPTION")]
		public string EdmsSavingOption { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.SELECT.SUBROUTINE
		/// </summary>
		[DataMember(Order = 12, Name = "EDMS.SELECT.SUBROUTINE")]
		public string EdmsSelectSubroutine { get; set; }
		
		/// <summary>
		/// CDD Name: EDMS.ADVANCE.QUERY.OPERS
		/// </summary>
		[DataMember(Order = 13, Name = "EDMS.ADVANCE.QUERY.OPERS")]
		public List<string> EdmsAdvanceQueryOpers { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<EdmSelectCriteriaEdmsSelect> EdmsSelectEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<EdmSelectCriteriaEdmsSort> EdmsSortEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: EDMS.SELECT
			
			EdmsSelectEntityAssociation = new List<EdmSelectCriteriaEdmsSelect>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(EdmsSelectConnector != null)
			{
				int numEdmsSelect = EdmsSelectConnector.Count;
				if (EdmsSelectColumn !=null && EdmsSelectColumn.Count > numEdmsSelect) numEdmsSelect = EdmsSelectColumn.Count;
				if (EdmsSelectOper !=null && EdmsSelectOper.Count > numEdmsSelect) numEdmsSelect = EdmsSelectOper.Count;
				if (EdmsSelectValue !=null && EdmsSelectValue.Count > numEdmsSelect) numEdmsSelect = EdmsSelectValue.Count;

				for (int i = 0; i < numEdmsSelect; i++)
				{

					string value0 = "";
					if (EdmsSelectConnector != null && i < EdmsSelectConnector.Count)
					{
						value0 = EdmsSelectConnector[i];
					}


					string value1 = "";
					if (EdmsSelectColumn != null && i < EdmsSelectColumn.Count)
					{
						value1 = EdmsSelectColumn[i];
					}


					string value2 = "";
					if (EdmsSelectOper != null && i < EdmsSelectOper.Count)
					{
						value2 = EdmsSelectOper[i];
					}


					string value3 = "";
					if (EdmsSelectValue != null && i < EdmsSelectValue.Count)
					{
						value3 = EdmsSelectValue[i];
					}

					EdmsSelectEntityAssociation.Add(new EdmSelectCriteriaEdmsSelect( value0, value1, value2, value3));
				}
			}
			// EntityAssociation Name: EDMS.SORT
			
			EdmsSortEntityAssociation = new List<EdmSelectCriteriaEdmsSort>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(EdmsSortColumns != null)
			{
				int numEdmsSort = EdmsSortColumns.Count;
				if (EdmsSortSequence !=null && EdmsSortSequence.Count > numEdmsSort) numEdmsSort = EdmsSortSequence.Count;

				for (int i = 0; i < numEdmsSort; i++)
				{

					string value0 = "";
					if (EdmsSortColumns != null && i < EdmsSortColumns.Count)
					{
						value0 = EdmsSortColumns[i];
					}


					string value1 = "";
					if (EdmsSortSequence != null && i < EdmsSortSequence.Count)
					{
						value1 = EdmsSortSequence[i];
					}

					EdmsSortEntityAssociation.Add(new EdmSelectCriteriaEdmsSort( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class EdmSelectCriteriaEdmsSelect
	{
		public string EdmsSelectConnectorAssocMember;	
		public string EdmsSelectColumnAssocMember;	
		public string EdmsSelectOperAssocMember;	
		public string EdmsSelectValueAssocMember;	
		public EdmSelectCriteriaEdmsSelect() {}
		public EdmSelectCriteriaEdmsSelect(
			string inEdmsSelectConnector,
			string inEdmsSelectColumn,
			string inEdmsSelectOper,
			string inEdmsSelectValue)
		{
			EdmsSelectConnectorAssocMember = inEdmsSelectConnector;
			EdmsSelectColumnAssocMember = inEdmsSelectColumn;
			EdmsSelectOperAssocMember = inEdmsSelectOper;
			EdmsSelectValueAssocMember = inEdmsSelectValue;
		}
	}
	
	[Serializable]
	public class EdmSelectCriteriaEdmsSort
	{
		public string EdmsSortColumnsAssocMember;	
		public string EdmsSortSequenceAssocMember;	
		public EdmSelectCriteriaEdmsSort() {}
		public EdmSelectCriteriaEdmsSort(
			string inEdmsSortColumns,
			string inEdmsSortSequence)
		{
			EdmsSortColumnsAssocMember = inEdmsSortColumns;
			EdmsSortSequenceAssocMember = inEdmsSortSequence;
		}
	}
}
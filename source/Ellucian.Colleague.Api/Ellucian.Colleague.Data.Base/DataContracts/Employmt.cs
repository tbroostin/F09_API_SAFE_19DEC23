//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 10:32:33 AM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: EMPLOYMT
//     Application: CORE
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Employmt")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 10:32:33 AM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "EMPLOYMT", EntityType = "PHYS")]
	public class Employmt : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: EMP.TYPE
		/// </summary>
		[DataMember(Order = 0, Name = "EMP.TYPE")]
		public string EmpType { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.STATUS
		/// </summary>
		[DataMember(Order = 1, Name = "EMP.STATUS")]
		public string EmpStatus { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.START.DATE
		/// </summary>
		[DataMember(Order = 2, Name = "EMP.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? EmpStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.TITLE
		/// </summary>
		[DataMember(Order = 3, Name = "EMP.TITLE")]
		public string EmpTitle { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.POSITION
		/// </summary>
		[DataMember(Order = 4, Name = "EMP.POSITION")]
		public string EmpPosition { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.END.DATE
		/// </summary>
		[DataMember(Order = 5, Name = "EMP.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? EmpEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.POSITION.DATE
		/// </summary>
		[DataMember(Order = 12, Name = "EMP.POSITION.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? EmpPositionDate { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.EMPLOYEE
		/// </summary>
		[DataMember(Order = 23, Name = "EMP.EMPLOYEE")]
		public string EmpEmployee { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.EMPLOYER
		/// </summary>
		[DataMember(Order = 24, Name = "EMP.EMPLOYER")]
		public string EmpEmployer { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.ADDRESS
		/// </summary>
		[DataMember(Order = 25, Name = "EMP.ADDRESS")]
		public string EmpAddress { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.VOCATIONS
		/// </summary>
		[DataMember(Order = 27, Name = "EMP.VOCATIONS")]
		public List<string> EmpVocations { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.HOURS.PER.WEEK
		/// </summary>
		[DataMember(Order = 28, Name = "EMP.HOURS.PER.WEEK")]
		public int? EmpHoursPerWeek { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.COMMENTS
		/// </summary>
		[DataMember(Order = 29, Name = "EMP.COMMENTS")]
		public string EmpComments { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.PRINCIPAL.EMPLOYMT.IND
		/// </summary>
		[DataMember(Order = 37, Name = "EMP.PRINCIPAL.EMPLOYMT.IND")]
		public string EmpPrincipalEmploymtInd { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SELF.EMPLOYED.FLAG
		/// </summary>
		[DataMember(Order = 38, Name = "EMP.SELF.EMPLOYED.FLAG")]
		public string EmpSelfEmployedFlag { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.UNKNOWN.EMPLOYER.FLAG
		/// </summary>
		[DataMember(Order = 39, Name = "EMP.UNKNOWN.EMPLOYER.FLAG")]
		public string EmpUnknownEmployerFlag { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SPVSR.PHONE
		/// </summary>
		[DataMember(Order = 40, Name = "EMP.SPVSR.PHONE")]
		public List<string> EmpSpvsrPhone { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SPVSR.EMAIL
		/// </summary>
		[DataMember(Order = 41, Name = "EMP.SPVSR.EMAIL")]
		public List<string> EmpSpvsrEmail { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SPVSR.FIRST.NAME
		/// </summary>
		[DataMember(Order = 42, Name = "EMP.SPVSR.FIRST.NAME")]
		public List<string> EmpSpvsrFirstName { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SPVSR.LAST.NAME
		/// </summary>
		[DataMember(Order = 43, Name = "EMP.SPVSR.LAST.NAME")]
		public List<string> EmpSpvsrLastName { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<EmploymtEmpSpvsr> EmpSpvsrEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: EMP.SPVSR
			
			EmpSpvsrEntityAssociation = new List<EmploymtEmpSpvsr>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(EmpSpvsrPhone != null)
			{
				int numEmpSpvsr = EmpSpvsrPhone.Count;
				if (EmpSpvsrEmail !=null && EmpSpvsrEmail.Count > numEmpSpvsr) numEmpSpvsr = EmpSpvsrEmail.Count;
				if (EmpSpvsrFirstName !=null && EmpSpvsrFirstName.Count > numEmpSpvsr) numEmpSpvsr = EmpSpvsrFirstName.Count;
				if (EmpSpvsrLastName !=null && EmpSpvsrLastName.Count > numEmpSpvsr) numEmpSpvsr = EmpSpvsrLastName.Count;

				for (int i = 0; i < numEmpSpvsr; i++)
				{

					string value0 = "";
					if (EmpSpvsrPhone != null && i < EmpSpvsrPhone.Count)
					{
						value0 = EmpSpvsrPhone[i];
					}


					string value1 = "";
					if (EmpSpvsrEmail != null && i < EmpSpvsrEmail.Count)
					{
						value1 = EmpSpvsrEmail[i];
					}


					string value2 = "";
					if (EmpSpvsrFirstName != null && i < EmpSpvsrFirstName.Count)
					{
						value2 = EmpSpvsrFirstName[i];
					}


					string value3 = "";
					if (EmpSpvsrLastName != null && i < EmpSpvsrLastName.Count)
					{
						value3 = EmpSpvsrLastName[i];
					}

					EmpSpvsrEntityAssociation.Add(new EmploymtEmpSpvsr( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class EmploymtEmpSpvsr
	{
		public string EmpSpvsrPhoneAssocMember;	
		public string EmpSpvsrEmailAssocMember;	
		public string EmpSpvsrFirstNameAssocMember;	
		public string EmpSpvsrLastNameAssocMember;	
		public EmploymtEmpSpvsr() {}
		public EmploymtEmpSpvsr(
			string inEmpSpvsrPhone,
			string inEmpSpvsrEmail,
			string inEmpSpvsrFirstName,
			string inEmpSpvsrLastName)
		{
			EmpSpvsrPhoneAssocMember = inEmpSpvsrPhone;
			EmpSpvsrEmailAssocMember = inEmpSpvsrEmail;
			EmpSpvsrFirstNameAssocMember = inEmpSpvsrFirstName;
			EmpSpvsrLastNameAssocMember = inEmpSpvsrLastName;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 10:33:01 AM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: ETHOS.SECURITY
//     Application: CORE
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "EthosSecurity")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 10:33:01 AM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "ETHOS.SECURITY", EntityType = "PHYS")]
	public class EthosSecurity : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: ETHS.API.NAME
		/// </summary>
		[DataMember(Order = 0, Name = "ETHS.API.NAME")]
		public string EthsApiName { get; set; }
		
		/// <summary>
		/// CDD Name: ETHS.PROPERTIES
		/// </summary>
		[DataMember(Order = 1, Name = "ETHS.PROPERTIES")]
		public List<string> EthsProperties { get; set; }
		
		/// <summary>
		/// CDD Name: ETHS.USERS
		/// </summary>
		[DataMember(Order = 2, Name = "ETHS.USERS")]
		public List<string> EthsUsers { get; set; }
		
		/// <summary>
		/// CDD Name: ETHS.ROLES
		/// </summary>
		[DataMember(Order = 3, Name = "ETHS.ROLES")]
		public List<string> EthsRoles { get; set; }
		
		/// <summary>
		/// CDD Name: ETHS.PERMISSIONS
		/// </summary>
		[DataMember(Order = 4, Name = "ETHS.PERMISSIONS")]
		public List<string> EthsPermissions { get; set; }
		
		/// <summary>
		/// CDD Name: ETHS.SECURITY.LEVEL
		/// </summary>
		[DataMember(Order = 5, Name = "ETHS.SECURITY.LEVEL")]
		public List<string> EthsSecurityLevel { get; set; }
		
		/// <summary>
		/// CDD Name: ETHS.DESCRIPTION
		/// </summary>
		[DataMember(Order = 6, Name = "ETHS.DESCRIPTION")]
		public string EthsDescription { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<EthosSecurityEthsSecDef> EthsSecDefEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: ETHS.SEC.DEF
			
			EthsSecDefEntityAssociation = new List<EthosSecurityEthsSecDef>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(EthsProperties != null)
			{
				int numEthsSecDef = EthsProperties.Count;
				if (EthsUsers !=null && EthsUsers.Count > numEthsSecDef) numEthsSecDef = EthsUsers.Count;
				if (EthsRoles !=null && EthsRoles.Count > numEthsSecDef) numEthsSecDef = EthsRoles.Count;
				if (EthsPermissions !=null && EthsPermissions.Count > numEthsSecDef) numEthsSecDef = EthsPermissions.Count;
				if (EthsSecurityLevel !=null && EthsSecurityLevel.Count > numEthsSecDef) numEthsSecDef = EthsSecurityLevel.Count;

				for (int i = 0; i < numEthsSecDef; i++)
				{

					string value0 = "";
					if (EthsProperties != null && i < EthsProperties.Count)
					{
						value0 = EthsProperties[i];
					}


					string value1 = "";
					if (EthsUsers != null && i < EthsUsers.Count)
					{
						value1 = EthsUsers[i];
					}


					string value2 = "";
					if (EthsRoles != null && i < EthsRoles.Count)
					{
						value2 = EthsRoles[i];
					}


					string value3 = "";
					if (EthsPermissions != null && i < EthsPermissions.Count)
					{
						value3 = EthsPermissions[i];
					}


					string value4 = "";
					if (EthsSecurityLevel != null && i < EthsSecurityLevel.Count)
					{
						value4 = EthsSecurityLevel[i];
					}

					EthsSecDefEntityAssociation.Add(new EthosSecurityEthsSecDef( value0, value1, value2, value3, value4));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class EthosSecurityEthsSecDef
	{
		public string EthsPropertiesAssocMember;	
		public string EthsUsersAssocMember;	
		public string EthsRolesAssocMember;	
		public string EthsPermissionsAssocMember;	
		public string EthsSecurityLevelAssocMember;	
		public EthosSecurityEthsSecDef() {}
		public EthosSecurityEthsSecDef(
			string inEthsProperties,
			string inEthsUsers,
			string inEthsRoles,
			string inEthsPermissions,
			string inEthsSecurityLevel)
		{
			EthsPropertiesAssocMember = inEthsProperties;
			EthsUsersAssocMember = inEthsUsers;
			EthsRolesAssocMember = inEthsRoles;
			EthsPermissionsAssocMember = inEthsPermissions;
			EthsSecurityLevelAssocMember = inEthsSecurityLevel;
		}
	}
}
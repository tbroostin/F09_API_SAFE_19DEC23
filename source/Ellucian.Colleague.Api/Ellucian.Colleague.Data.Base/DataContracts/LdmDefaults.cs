//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 1/12/2018 5:44:58 PM by user sbhole1
//
//     Type: ENTITY
//     Entity: LDM.DEFAULTS
//     Application: CORE
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "LdmDefaults")]
	[ColleagueDataContract(GeneratedDateTime = "1/12/2018 5:44:58 PM", User = "sbhole1")]
	[EntityDataContract(EntityName = "LDM.DEFAULTS", EntityType = "PERM")]
	public class LdmDefaults : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: LDMD.PERSON.DUPL.CRITERIA
		/// </summary>
		[DataMember(Order = 0, Name = "LDMD.PERSON.DUPL.CRITERIA")]
		public string LdmdPersonDuplCriteria { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.ADDR.DUPL.CRITERIA
		/// </summary>
		[DataMember(Order = 1, Name = "LDMD.ADDR.DUPL.CRITERIA")]
		public string LdmdAddrDuplCriteria { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.ADDR.TYPE.MAPPING
		/// </summary>
		[DataMember(Order = 2, Name = "LDMD.ADDR.TYPE.MAPPING")]
		public string LdmdAddrTypeMapping { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.EMAIL.TYPE.MAPPING
		/// </summary>
		[DataMember(Order = 3, Name = "LDMD.EMAIL.TYPE.MAPPING")]
		public string LdmdEmailTypeMapping { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.LDM.PHONE.TYPE
		/// </summary>
		[DataMember(Order = 4, Name = "LDMD.LDM.PHONE.TYPE")]
		public List<string> LdmdLdmPhoneType { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.COLL.PHONE.TYPES
		/// </summary>
		[DataMember(Order = 5, Name = "LDMD.COLL.PHONE.TYPES")]
		public List<string> LdmdCollPhoneTypes { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.COLL.FIELD.NAME
		/// </summary>
		[DataMember(Order = 6, Name = "LDMD.COLL.FIELD.NAME")]
		public List<string> LdmdCollFieldName { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.COLL.DEFAULT.VALUE
		/// </summary>
		[DataMember(Order = 7, Name = "LDMD.COLL.DEFAULT.VALUE")]
		public List<string> LdmdCollDefaultValue { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.SUBJ.DEPT.MAPPING
		/// </summary>
		[DataMember(Order = 8, Name = "LDMD.SUBJ.DEPT.MAPPING")]
		public string LdmdSubjDeptMapping { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.COLL.FILE.NAME
		/// </summary>
		[DataMember(Order = 9, Name = "LDMD.COLL.FILE.NAME")]
		public List<string> LdmdCollFileName { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.COLL.FIELD.NUMBER
		/// </summary>
		[DataMember(Order = 10, Name = "LDMD.COLL.FIELD.NUMBER")]
		public List<int?> LdmdCollFieldNumber { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.COURSE.ACT.STATUS
		/// </summary>
		[DataMember(Order = 11, Name = "LDMD.COURSE.ACT.STATUS")]
		public string LdmdCourseActStatus { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.COURSE.INACT.STATUS
		/// </summary>
		[DataMember(Order = 12, Name = "LDMD.COURSE.INACT.STATUS")]
		public string LdmdCourseInactStatus { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.SECTION.ACT.STATUS
		/// </summary>
		[DataMember(Order = 13, Name = "LDMD.SECTION.ACT.STATUS")]
		public string LdmdSectionActStatus { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.SECTION.INACT.STATUS
		/// </summary>
		[DataMember(Order = 14, Name = "LDMD.SECTION.INACT.STATUS")]
		public string LdmdSectionInactStatus { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.REG.USERS.ID
		/// </summary>
		[DataMember(Order = 22, Name = "LDMD.REG.USERS.ID")]
		public string LdmdRegUsersId { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.GUARDIAN.REL.TYPES
		/// </summary>
		[DataMember(Order = 24, Name = "LDMD.GUARDIAN.REL.TYPES")]
		public List<string> LdmdGuardianRelTypes { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.DEFAULT.AR.TYPE
		/// </summary>
		[DataMember(Order = 25, Name = "LDMD.DEFAULT.AR.TYPE")]
		public string LdmdDefaultArType { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.CHARGE.TYPES
		/// </summary>
		[DataMember(Order = 26, Name = "LDMD.CHARGE.TYPES")]
		public List<string> LdmdChargeTypes { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.DEFAULT.AR.CODES
		/// </summary>
		[DataMember(Order = 27, Name = "LDMD.DEFAULT.AR.CODES")]
		public List<string> LdmdDefaultArCodes { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.EXCLUDE.BENEFITS
		/// </summary>
		[DataMember(Order = 28, Name = "LDMD.EXCLUDE.BENEFITS")]
		public List<string> LdmdExcludeBenefits { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.LEAVE.STATUS.CODES
		/// </summary>
		[DataMember(Order = 36, Name = "LDMD.LEAVE.STATUS.CODES")]
		public List<string> LdmdLeaveStatusCodes { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.DEFAULT.DISTR
		/// </summary>
		[DataMember(Order = 37, Name = "LDMD.DEFAULT.DISTR")]
		public string LdmdDefaultDistr { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.PAYMENT.METHOD
		/// </summary>
		[DataMember(Order = 42, Name = "LDMD.PAYMENT.METHOD")]
		public string LdmdPaymentMethod { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.DFLT.ADM.OFFICE.CODES
		/// </summary>
		[DataMember(Order = 45, Name = "LDMD.DFLT.ADM.OFFICE.CODES")]
		public List<string> LdmdDfltAdmOfficeCodes { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.SPONSOR.AR.CODE
		/// </summary>
		[DataMember(Order = 48, Name = "LDMD.SPONSOR.AR.CODE")]
		public string LdmdSponsorArCode { get; set; }
		
		/// <summary>
		/// CDD Name: LDMD.PRIN.INVESTIGATOR.ROLE
		/// </summary>
		[DataMember(Order = 51, Name = "LDMD.PRIN.INVESTIGATOR.ROLE")]
		public string LdmdPrinInvestigatorRole { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<LdmDefaultsLdmdPhoneTypeMapping> LdmdPhoneTypeMappingEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<LdmDefaultsLdmdCollDefaults> LdmdCollDefaultsEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<LdmDefaultsLdmdArDefaults> LdmdArDefaultsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: LDMD.PHONE.TYPE.MAPPING
			
			LdmdPhoneTypeMappingEntityAssociation = new List<LdmDefaultsLdmdPhoneTypeMapping>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(LdmdLdmPhoneType != null)
			{
				int numLdmdPhoneTypeMapping = LdmdLdmPhoneType.Count;
				if (LdmdCollPhoneTypes !=null && LdmdCollPhoneTypes.Count > numLdmdPhoneTypeMapping) numLdmdPhoneTypeMapping = LdmdCollPhoneTypes.Count;

				for (int i = 0; i < numLdmdPhoneTypeMapping; i++)
				{

					string value0 = "";
					if (LdmdLdmPhoneType != null && i < LdmdLdmPhoneType.Count)
					{
						value0 = LdmdLdmPhoneType[i];
					}


					string value1 = "";
					if (LdmdCollPhoneTypes != null && i < LdmdCollPhoneTypes.Count)
					{
						value1 = LdmdCollPhoneTypes[i];
					}

					LdmdPhoneTypeMappingEntityAssociation.Add(new LdmDefaultsLdmdPhoneTypeMapping( value0, value1));
				}
			}
			// EntityAssociation Name: LDMD.COLL.DEFAULTS
			
			LdmdCollDefaultsEntityAssociation = new List<LdmDefaultsLdmdCollDefaults>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(LdmdCollFieldName != null)
			{
				int numLdmdCollDefaults = LdmdCollFieldName.Count;
				if (LdmdCollDefaultValue !=null && LdmdCollDefaultValue.Count > numLdmdCollDefaults) numLdmdCollDefaults = LdmdCollDefaultValue.Count;
				if (LdmdCollFileName !=null && LdmdCollFileName.Count > numLdmdCollDefaults) numLdmdCollDefaults = LdmdCollFileName.Count;
				if (LdmdCollFieldNumber !=null && LdmdCollFieldNumber.Count > numLdmdCollDefaults) numLdmdCollDefaults = LdmdCollFieldNumber.Count;

				for (int i = 0; i < numLdmdCollDefaults; i++)
				{

					string value0 = "";
					if (LdmdCollFieldName != null && i < LdmdCollFieldName.Count)
					{
						value0 = LdmdCollFieldName[i];
					}


					string value1 = "";
					if (LdmdCollDefaultValue != null && i < LdmdCollDefaultValue.Count)
					{
						value1 = LdmdCollDefaultValue[i];
					}


					string value2 = "";
					if (LdmdCollFileName != null && i < LdmdCollFileName.Count)
					{
						value2 = LdmdCollFileName[i];
					}


					int? value3 = null;
					if (LdmdCollFieldNumber != null && i < LdmdCollFieldNumber.Count)
					{
						value3 = LdmdCollFieldNumber[i];
					}

					LdmdCollDefaultsEntityAssociation.Add(new LdmDefaultsLdmdCollDefaults( value0, value1, value2, value3));
				}
			}
			// EntityAssociation Name: LDMD.AR.DEFAULTS
			
			LdmdArDefaultsEntityAssociation = new List<LdmDefaultsLdmdArDefaults>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(LdmdChargeTypes != null)
			{
				int numLdmdArDefaults = LdmdChargeTypes.Count;
				if (LdmdDefaultArCodes !=null && LdmdDefaultArCodes.Count > numLdmdArDefaults) numLdmdArDefaults = LdmdDefaultArCodes.Count;

				for (int i = 0; i < numLdmdArDefaults; i++)
				{

					string value0 = "";
					if (LdmdChargeTypes != null && i < LdmdChargeTypes.Count)
					{
						value0 = LdmdChargeTypes[i];
					}


					string value1 = "";
					if (LdmdDefaultArCodes != null && i < LdmdDefaultArCodes.Count)
					{
						value1 = LdmdDefaultArCodes[i];
					}

					LdmdArDefaultsEntityAssociation.Add(new LdmDefaultsLdmdArDefaults( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class LdmDefaultsLdmdPhoneTypeMapping
	{
		public string LdmdLdmPhoneTypeAssocMember;	
		public string LdmdCollPhoneTypesAssocMember;	
		public LdmDefaultsLdmdPhoneTypeMapping() {}
		public LdmDefaultsLdmdPhoneTypeMapping(
			string inLdmdLdmPhoneType,
			string inLdmdCollPhoneTypes)
		{
			LdmdLdmPhoneTypeAssocMember = inLdmdLdmPhoneType;
			LdmdCollPhoneTypesAssocMember = inLdmdCollPhoneTypes;
		}
	}
	
	[Serializable]
	public class LdmDefaultsLdmdCollDefaults
	{
		public string LdmdCollFieldNameAssocMember;	
		public string LdmdCollDefaultValueAssocMember;	
		public string LdmdCollFileNameAssocMember;	
		public int? LdmdCollFieldNumberAssocMember;	
		public LdmDefaultsLdmdCollDefaults() {}
		public LdmDefaultsLdmdCollDefaults(
			string inLdmdCollFieldName,
			string inLdmdCollDefaultValue,
			string inLdmdCollFileName,
			int? inLdmdCollFieldNumber)
		{
			LdmdCollFieldNameAssocMember = inLdmdCollFieldName;
			LdmdCollDefaultValueAssocMember = inLdmdCollDefaultValue;
			LdmdCollFileNameAssocMember = inLdmdCollFileName;
			LdmdCollFieldNumberAssocMember = inLdmdCollFieldNumber;
		}
	}
	
	[Serializable]
	public class LdmDefaultsLdmdArDefaults
	{
		public string LdmdChargeTypesAssocMember;	
		public string LdmdDefaultArCodesAssocMember;	
		public LdmDefaultsLdmdArDefaults() {}
		public LdmDefaultsLdmdArDefaults(
			string inLdmdChargeTypes,
			string inLdmdDefaultArCodes)
		{
			LdmdChargeTypesAssocMember = inLdmdChargeTypes;
			LdmdDefaultArCodesAssocMember = inLdmdDefaultArCodes;
		}
	}
}
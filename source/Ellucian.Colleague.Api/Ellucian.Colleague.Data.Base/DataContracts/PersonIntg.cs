//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 10:43:42 AM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: PERSON.INTG
//     Application: CORE
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "PersonIntg")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 10:43:42 AM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "PERSON.INTG", EntityType = "PHYS")]
	public class PersonIntg : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: PER.INTG.LANGUAGE
		/// </summary>
		[DataMember(Order = 0, Name = "PER.INTG.LANGUAGE")]
		public List<string> PerIntgLanguage { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.LANGUAGE.PREF
		/// </summary>
		[DataMember(Order = 1, Name = "PER.INTG.LANGUAGE.PREF")]
		public List<string> PerIntgLanguagePref { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.BIRTH.COUNTRY
		/// </summary>
		[DataMember(Order = 2, Name = "PER.INTG.BIRTH.COUNTRY")]
		public string PerIntgBirthCountry { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ROLE
		/// </summary>
		[DataMember(Order = 3, Name = "PER.INTG.ROLE")]
		public List<string> PerIntgRole { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ROLE.START.DATE
		/// </summary>
		[DataMember(Order = 4, Name = "PER.INTG.ROLE.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerIntgRoleStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ROLE.END.DATE
		/// </summary>
		[DataMember(Order = 5, Name = "PER.INTG.ROLE.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerIntgRoleEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.DL.EXPIRE.DATE
		/// </summary>
		[DataMember(Order = 6, Name = "PER.INTG.DL.EXPIRE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PerIntgDlExpireDate { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ETHNIC
		/// </summary>
		[DataMember(Order = 7, Name = "PER.INTG.ETHNIC")]
		public string PerIntgEthnic { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.PHONE.NUMBER
		/// </summary>
		[DataMember(Order = 8, Name = "PER.INTG.PHONE.NUMBER")]
		public List<string> PerIntgPhoneNumber { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.PHONE.TYPE
		/// </summary>
		[DataMember(Order = 9, Name = "PER.INTG.PHONE.TYPE")]
		public List<string> PerIntgPhoneType { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.CTRY.CALLING.CODE
		/// </summary>
		[DataMember(Order = 10, Name = "PER.INTG.CTRY.CALLING.CODE")]
		public List<string> PerIntgCtryCallingCode { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.PHONE.EXTENSION
		/// </summary>
		[DataMember(Order = 11, Name = "PER.INTG.PHONE.EXTENSION")]
		public List<string> PerIntgPhoneExtension { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.PHONE.PREF
		/// </summary>
		[DataMember(Order = 12, Name = "PER.INTG.PHONE.PREF")]
		public List<string> PerIntgPhonePref { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.PREFERRED.NAME.TYPE
		/// </summary>
		[DataMember(Order = 13, Name = "PER.INTG.PREFERRED.NAME.TYPE")]
		public string PerIntgPreferredNameType { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.DECEASED.DATE
		/// </summary>
		[DataMember(Order = 14, Name = "PER.INTG.DECEASED.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PerIntgDeceasedDate { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ID.DOC.NO
		/// </summary>
		[DataMember(Order = 15, Name = "PER.INTG.ID.DOC.NO")]
		public List<string> PerIntgIdDocNo { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ID.DOC.COUNTRY
		/// </summary>
		[DataMember(Order = 16, Name = "PER.INTG.ID.DOC.COUNTRY")]
		public List<string> PerIntgIdDocCountry { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ID.DOC.REGION
		/// </summary>
		[DataMember(Order = 17, Name = "PER.INTG.ID.DOC.REGION")]
		public List<string> PerIntgIdDocRegion { get; set; }
		
		/// <summary>
		/// CDD Name: PER.INTG.ID.DOC.EXP.DATE
		/// </summary>
		[DataMember(Order = 18, Name = "PER.INTG.ID.DOC.EXP.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerIntgIdDocExpDate { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PersonIntgPerIntgLanguages> PerIntgLanguagesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PersonIntgPerIntgRoles> PerIntgRolesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PersonIntgPerIntgPhones> PerIntgPhonesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PersonIntgPerIntgIdentityDocs> PerIntgIdentityDocsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: PER.INTG.LANGUAGES
			
			PerIntgLanguagesEntityAssociation = new List<PersonIntgPerIntgLanguages>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerIntgLanguage != null)
			{
				int numPerIntgLanguages = PerIntgLanguage.Count;
				if (PerIntgLanguagePref !=null && PerIntgLanguagePref.Count > numPerIntgLanguages) numPerIntgLanguages = PerIntgLanguagePref.Count;

				for (int i = 0; i < numPerIntgLanguages; i++)
				{

					string value0 = "";
					if (PerIntgLanguage != null && i < PerIntgLanguage.Count)
					{
						value0 = PerIntgLanguage[i];
					}


					string value1 = "";
					if (PerIntgLanguagePref != null && i < PerIntgLanguagePref.Count)
					{
						value1 = PerIntgLanguagePref[i];
					}

					PerIntgLanguagesEntityAssociation.Add(new PersonIntgPerIntgLanguages( value0, value1));
				}
			}
			// EntityAssociation Name: PER.INTG.ROLES
			
			PerIntgRolesEntityAssociation = new List<PersonIntgPerIntgRoles>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerIntgRole != null)
			{
				int numPerIntgRoles = PerIntgRole.Count;
				if (PerIntgRoleStartDate !=null && PerIntgRoleStartDate.Count > numPerIntgRoles) numPerIntgRoles = PerIntgRoleStartDate.Count;
				if (PerIntgRoleEndDate !=null && PerIntgRoleEndDate.Count > numPerIntgRoles) numPerIntgRoles = PerIntgRoleEndDate.Count;

				for (int i = 0; i < numPerIntgRoles; i++)
				{

					string value0 = "";
					if (PerIntgRole != null && i < PerIntgRole.Count)
					{
						value0 = PerIntgRole[i];
					}


					DateTime? value1 = null;
					if (PerIntgRoleStartDate != null && i < PerIntgRoleStartDate.Count)
					{
						value1 = PerIntgRoleStartDate[i];
					}


					DateTime? value2 = null;
					if (PerIntgRoleEndDate != null && i < PerIntgRoleEndDate.Count)
					{
						value2 = PerIntgRoleEndDate[i];
					}

					PerIntgRolesEntityAssociation.Add(new PersonIntgPerIntgRoles( value0, value1, value2));
				}
			}
			// EntityAssociation Name: PER.INTG.PHONES
			
			PerIntgPhonesEntityAssociation = new List<PersonIntgPerIntgPhones>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerIntgPhoneNumber != null)
			{
				int numPerIntgPhones = PerIntgPhoneNumber.Count;
				if (PerIntgPhoneType !=null && PerIntgPhoneType.Count > numPerIntgPhones) numPerIntgPhones = PerIntgPhoneType.Count;
				if (PerIntgCtryCallingCode !=null && PerIntgCtryCallingCode.Count > numPerIntgPhones) numPerIntgPhones = PerIntgCtryCallingCode.Count;
				if (PerIntgPhoneExtension !=null && PerIntgPhoneExtension.Count > numPerIntgPhones) numPerIntgPhones = PerIntgPhoneExtension.Count;
				if (PerIntgPhonePref !=null && PerIntgPhonePref.Count > numPerIntgPhones) numPerIntgPhones = PerIntgPhonePref.Count;

				for (int i = 0; i < numPerIntgPhones; i++)
				{

					string value0 = "";
					if (PerIntgPhoneNumber != null && i < PerIntgPhoneNumber.Count)
					{
						value0 = PerIntgPhoneNumber[i];
					}


					string value1 = "";
					if (PerIntgPhoneType != null && i < PerIntgPhoneType.Count)
					{
						value1 = PerIntgPhoneType[i];
					}


					string value2 = "";
					if (PerIntgCtryCallingCode != null && i < PerIntgCtryCallingCode.Count)
					{
						value2 = PerIntgCtryCallingCode[i];
					}


					string value3 = "";
					if (PerIntgPhoneExtension != null && i < PerIntgPhoneExtension.Count)
					{
						value3 = PerIntgPhoneExtension[i];
					}


					string value4 = "";
					if (PerIntgPhonePref != null && i < PerIntgPhonePref.Count)
					{
						value4 = PerIntgPhonePref[i];
					}

					PerIntgPhonesEntityAssociation.Add(new PersonIntgPerIntgPhones( value0, value1, value2, value3, value4));
				}
			}
			// EntityAssociation Name: PER.INTG.IDENTITY.DOCS
			
			PerIntgIdentityDocsEntityAssociation = new List<PersonIntgPerIntgIdentityDocs>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerIntgIdDocNo != null)
			{
				int numPerIntgIdentityDocs = PerIntgIdDocNo.Count;
				if (PerIntgIdDocCountry !=null && PerIntgIdDocCountry.Count > numPerIntgIdentityDocs) numPerIntgIdentityDocs = PerIntgIdDocCountry.Count;
				if (PerIntgIdDocRegion !=null && PerIntgIdDocRegion.Count > numPerIntgIdentityDocs) numPerIntgIdentityDocs = PerIntgIdDocRegion.Count;
				if (PerIntgIdDocExpDate !=null && PerIntgIdDocExpDate.Count > numPerIntgIdentityDocs) numPerIntgIdentityDocs = PerIntgIdDocExpDate.Count;

				for (int i = 0; i < numPerIntgIdentityDocs; i++)
				{

					string value0 = "";
					if (PerIntgIdDocNo != null && i < PerIntgIdDocNo.Count)
					{
						value0 = PerIntgIdDocNo[i];
					}


					string value1 = "";
					if (PerIntgIdDocCountry != null && i < PerIntgIdDocCountry.Count)
					{
						value1 = PerIntgIdDocCountry[i];
					}


					string value2 = "";
					if (PerIntgIdDocRegion != null && i < PerIntgIdDocRegion.Count)
					{
						value2 = PerIntgIdDocRegion[i];
					}


					DateTime? value3 = null;
					if (PerIntgIdDocExpDate != null && i < PerIntgIdDocExpDate.Count)
					{
						value3 = PerIntgIdDocExpDate[i];
					}

					PerIntgIdentityDocsEntityAssociation.Add(new PersonIntgPerIntgIdentityDocs( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class PersonIntgPerIntgLanguages
	{
		public string PerIntgLanguageAssocMember;	
		public string PerIntgLanguagePrefAssocMember;	
		public PersonIntgPerIntgLanguages() {}
		public PersonIntgPerIntgLanguages(
			string inPerIntgLanguage,
			string inPerIntgLanguagePref)
		{
			PerIntgLanguageAssocMember = inPerIntgLanguage;
			PerIntgLanguagePrefAssocMember = inPerIntgLanguagePref;
		}
	}
	
	[Serializable]
	public class PersonIntgPerIntgRoles
	{
		public string PerIntgRoleAssocMember;	
		public DateTime? PerIntgRoleStartDateAssocMember;	
		public DateTime? PerIntgRoleEndDateAssocMember;	
		public PersonIntgPerIntgRoles() {}
		public PersonIntgPerIntgRoles(
			string inPerIntgRole,
			DateTime? inPerIntgRoleStartDate,
			DateTime? inPerIntgRoleEndDate)
		{
			PerIntgRoleAssocMember = inPerIntgRole;
			PerIntgRoleStartDateAssocMember = inPerIntgRoleStartDate;
			PerIntgRoleEndDateAssocMember = inPerIntgRoleEndDate;
		}
	}
	
	[Serializable]
	public class PersonIntgPerIntgPhones
	{
		public string PerIntgPhoneNumberAssocMember;	
		public string PerIntgPhoneTypeAssocMember;	
		public string PerIntgCtryCallingCodeAssocMember;	
		public string PerIntgPhoneExtensionAssocMember;	
		public string PerIntgPhonePrefAssocMember;	
		public PersonIntgPerIntgPhones() {}
		public PersonIntgPerIntgPhones(
			string inPerIntgPhoneNumber,
			string inPerIntgPhoneType,
			string inPerIntgCtryCallingCode,
			string inPerIntgPhoneExtension,
			string inPerIntgPhonePref)
		{
			PerIntgPhoneNumberAssocMember = inPerIntgPhoneNumber;
			PerIntgPhoneTypeAssocMember = inPerIntgPhoneType;
			PerIntgCtryCallingCodeAssocMember = inPerIntgCtryCallingCode;
			PerIntgPhoneExtensionAssocMember = inPerIntgPhoneExtension;
			PerIntgPhonePrefAssocMember = inPerIntgPhonePref;
		}
	}
	
	[Serializable]
	public class PersonIntgPerIntgIdentityDocs
	{
		public string PerIntgIdDocNoAssocMember;	
		public string PerIntgIdDocCountryAssocMember;	
		public string PerIntgIdDocRegionAssocMember;	
		public DateTime? PerIntgIdDocExpDateAssocMember;	
		public PersonIntgPerIntgIdentityDocs() {}
		public PersonIntgPerIntgIdentityDocs(
			string inPerIntgIdDocNo,
			string inPerIntgIdDocCountry,
			string inPerIntgIdDocRegion,
			DateTime? inPerIntgIdDocExpDate)
		{
			PerIntgIdDocNoAssocMember = inPerIntgIdDocNo;
			PerIntgIdDocCountryAssocMember = inPerIntgIdDocCountry;
			PerIntgIdDocRegionAssocMember = inPerIntgIdDocRegion;
			PerIntgIdDocExpDateAssocMember = inPerIntgIdDocExpDate;
		}
	}
}
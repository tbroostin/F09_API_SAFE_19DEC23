//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/11/2018 2:00:47 PM by user tylerchristiansen
//
//     Type: ENTITY
//     Entity: PROXY.DEFAULTS
//     Application: UT
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "ProxyDefaults")]
	[ColleagueDataContract(GeneratedDateTime = "10/11/2018 2:00:47 PM", User = "tylerchristiansen")]
	[EntityDataContract(EntityName = "PROXY.DEFAULTS", EntityType = "PERM")]
	public class ProxyDefaults : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: PRXD.DISCLOSURE.RELEASE.DOC
		/// </summary>
		[DataMember(Order = 0, Name = "PRXD.DISCLOSURE.RELEASE.DOC")]
		public string PrxdDisclosureReleaseDoc { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.PROXY.EMAIL.DOCUMENT
		/// </summary>
		[DataMember(Order = 1, Name = "PRXD.PROXY.EMAIL.DOCUMENT")]
		public string PrxdProxyEmailDocument { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.PROXY.ENABLED
		/// </summary>
		[DataMember(Order = 2, Name = "PRXD.PROXY.ENABLED")]
		public string PrxdProxyEnabled { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.LDAP.SYNC
		/// </summary>
		[DataMember(Order = 3, Name = "PRXD.LDAP.SYNC")]
		public string PrxdLdapSync { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.OPERS
		/// </summary>
		[DataMember(Order = 4, Name = "PRXD.OPERS")]
		public string PrxdOpers { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.REPLY.TO.EMAIL
		/// </summary>
		[DataMember(Order = 5, Name = "PRXD.REPLY.TO.EMAIL")]
		public string PrxdReplyToEmail { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.COPY.TO.EMAIL
		/// </summary>
		[DataMember(Order = 6, Name = "PRXD.COPY.TO.EMAIL")]
		public string PrxdCopyToEmail { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.DISCLOSURE.RELEASE.TEXT
		/// </summary>
		[DataMember(Order = 7, Name = "PRXD.DISCLOSURE.RELEASE.TEXT")]
		public string PrxdDisclosureReleaseText { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.RELATIONSHIPS
		/// </summary>
		[DataMember(Order = 9, Name = "PRXD.RELATIONSHIPS")]
		public List<string> PrxdRelationships { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.DEMO.ELEMENTS
		/// </summary>
		[DataMember(Order = 10, Name = "PRXD.DEMO.ELEMENTS")]
		public List<string> PrxdDemoElements { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.DEMO.DESCS
		/// </summary>
		[DataMember(Order = 11, Name = "PRXD.DEMO.DESCS")]
		public List<string> PrxdDemoDescs { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.DEMO.RQMT
		/// </summary>
		[DataMember(Order = 13, Name = "PRXD.DEMO.RQMT")]
		public List<string> PrxdDemoRqmt { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.DEMO.MANDATORY
		/// </summary>
		[DataMember(Order = 14, Name = "PRXD.DEMO.MANDATORY")]
		public List<string> PrxdDemoMandatory { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.ADD.NEW.PROXY.ALLOWED
		/// </summary>
		[DataMember(Order = 15, Name = "PRXD.ADD.NEW.PROXY.ALLOWED")]
		public string PrxdAddNewProxyAllowed { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.GRANT.ACCESS.TEXT
		/// </summary>
		[DataMember(Order = 20, Name = "PRXD.GRANT.ACCESS.TEXT")]
		public string PrxdGrantAccessText { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.HEADER.TEXT
		/// </summary>
		[DataMember(Order = 21, Name = "PRXD.HEADER.TEXT")]
		public string PrxdHeaderText { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.REAUTHORIZATION.TEXT
		/// </summary>
		[DataMember(Order = 22, Name = "PRXD.REAUTHORIZATION.TEXT")]
		public string PrxdReauthorizationText { get; set; }
		
		/// <summary>
		/// CDD Name: PRXD.EMAIL.HIERARCHY
		/// </summary>
		[DataMember(Order = 23, Name = "PRXD.EMAIL.HIERARCHY")]
		public string PrxdEmailHierarchy { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ProxyDefaultsPrxdDemographics> PrxdDemographicsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: PRXD.DEMOGRAPHICS
			
			PrxdDemographicsEntityAssociation = new List<ProxyDefaultsPrxdDemographics>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PrxdDemoElements != null)
			{
				int numPrxdDemographics = PrxdDemoElements.Count;
				if (PrxdDemoDescs !=null && PrxdDemoDescs.Count > numPrxdDemographics) numPrxdDemographics = PrxdDemoDescs.Count;
				if (PrxdDemoRqmt !=null && PrxdDemoRqmt.Count > numPrxdDemographics) numPrxdDemographics = PrxdDemoRqmt.Count;
				if (PrxdDemoMandatory !=null && PrxdDemoMandatory.Count > numPrxdDemographics) numPrxdDemographics = PrxdDemoMandatory.Count;

				for (int i = 0; i < numPrxdDemographics; i++)
				{

					string value0 = "";
					if (PrxdDemoElements != null && i < PrxdDemoElements.Count)
					{
						value0 = PrxdDemoElements[i];
					}


					string value1 = "";
					if (PrxdDemoDescs != null && i < PrxdDemoDescs.Count)
					{
						value1 = PrxdDemoDescs[i];
					}


					string value2 = "";
					if (PrxdDemoRqmt != null && i < PrxdDemoRqmt.Count)
					{
						value2 = PrxdDemoRqmt[i];
					}


					string value3 = "";
					if (PrxdDemoMandatory != null && i < PrxdDemoMandatory.Count)
					{
						value3 = PrxdDemoMandatory[i];
					}

					PrxdDemographicsEntityAssociation.Add(new ProxyDefaultsPrxdDemographics( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class ProxyDefaultsPrxdDemographics
	{
		public string PrxdDemoElementsAssocMember;	
		public string PrxdDemoDescsAssocMember;	
		public string PrxdDemoRqmtAssocMember;	
		public string PrxdDemoMandatoryAssocMember;	
		public ProxyDefaultsPrxdDemographics() {}
		public ProxyDefaultsPrxdDemographics(
			string inPrxdDemoElements,
			string inPrxdDemoDescs,
			string inPrxdDemoRqmt,
			string inPrxdDemoMandatory)
		{
			PrxdDemoElementsAssocMember = inPrxdDemoElements;
			PrxdDemoDescsAssocMember = inPrxdDemoDescs;
			PrxdDemoRqmtAssocMember = inPrxdDemoRqmt;
			PrxdDemoMandatoryAssocMember = inPrxdDemoMandatory;
		}
	}
}
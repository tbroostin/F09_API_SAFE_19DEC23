//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/30/2017 10:49:27 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: QTD.YTD.PARAMETER
//     Application: HR
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "QtdYtdParameterT4")]
	[ColleagueDataContract(GeneratedDateTime = "10/30/2017 10:49:27 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "QTD.YTD.PARAMETER", EntityType = "PERM")]
	public class QtdYtdParameterT4 : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: QYP.WEB.T4.YEARS
		/// </summary>
		[DataMember(Order = 26, Name = "QYP.WEB.T4.YEARS")]
		public List<string> QypWebT4Years { get; set; }
		
		/// <summary>
		/// CDD Name: QYP.WEB.T4.AVAILABLE.DATES
		/// </summary>
		[DataMember(Order = 27, Name = "QYP.WEB.T4.AVAILABLE.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> QypWebT4AvailableDates { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<QtdYtdParameterT4WebT4Parameter> WebT4ParameterEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: WEB.T4.PARAMETER
			
			WebT4ParameterEntityAssociation = new List<QtdYtdParameterT4WebT4Parameter>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(QypWebT4Years != null)
			{
				int numWebT4Parameter = QypWebT4Years.Count;
				if (QypWebT4AvailableDates !=null && QypWebT4AvailableDates.Count > numWebT4Parameter) numWebT4Parameter = QypWebT4AvailableDates.Count;

				for (int i = 0; i < numWebT4Parameter; i++)
				{

					string value0 = "";
					if (QypWebT4Years != null && i < QypWebT4Years.Count)
					{
						value0 = QypWebT4Years[i];
					}


					DateTime? value1 = null;
					if (QypWebT4AvailableDates != null && i < QypWebT4AvailableDates.Count)
					{
						value1 = QypWebT4AvailableDates[i];
					}

					WebT4ParameterEntityAssociation.Add(new QtdYtdParameterT4WebT4Parameter( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class QtdYtdParameterT4WebT4Parameter
	{
		public string QypWebT4YearsAssocMember;	
		public DateTime? QypWebT4AvailableDatesAssocMember;	
		public QtdYtdParameterT4WebT4Parameter() {}
		public QtdYtdParameterT4WebT4Parameter(
			string inQypWebT4Years,
			DateTime? inQypWebT4AvailableDates)
		{
			QypWebT4YearsAssocMember = inQypWebT4Years;
			QypWebT4AvailableDatesAssocMember = inQypWebT4AvailableDates;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/30/2017 10:50:28 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: TAX.FORM.T4A.YEARS
//     Application: CF
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "TaxFormT4aYears")]
	[ColleagueDataContract(GeneratedDateTime = "10/30/2017 10:50:28 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "TAX.FORM.T4A.YEARS", EntityType = "PHYS")]
	public class TaxFormT4aYears : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: TFTY.TAX.YEAR
		/// </summary>
		[DataMember(Order = 0, Name = "TFTY.TAX.YEAR")]
		public int? TftyTaxYear { get; set; }
		
		/// <summary>
		/// CDD Name: TFTY.WEB.ENABLED
		/// </summary>
		[DataMember(Order = 3, Name = "TFTY.WEB.ENABLED")]
		public string TftyWebEnabled { get; set; }
		
		/// <summary>
		/// CDD Name: TFTY.SUBMIT.TITLES
		/// </summary>
		[DataMember(Order = 6, Name = "TFTY.SUBMIT.TITLES")]
		public List<string> TftySubmitTitles { get; set; }
		
		/// <summary>
		/// CDD Name: TFTY.SUBMIT.DATES
		/// </summary>
		[DataMember(Order = 7, Name = "TFTY.SUBMIT.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> TftySubmitDates { get; set; }
		
		/// <summary>
		/// CDD Name: TFTY.SUBMIT.SEQ.NOS
		/// </summary>
		[DataMember(Order = 8, Name = "TFTY.SUBMIT.SEQ.NOS")]
		public List<string> TftySubmitSeqNos { get; set; }
		
		/// <summary>
		/// CDD Name: TFTY.SUBMIT.TIMES
		/// </summary>
		[DataMember(Order = 9, Name = "TFTY.SUBMIT.TIMES")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> TftySubmitTimes { get; set; }
		
		/// <summary>
		/// CDD Name: TFTY.SUBMIT.OPERS
		/// </summary>
		[DataMember(Order = 10, Name = "TFTY.SUBMIT.OPERS")]
		public List<string> TftySubmitOpers { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<TaxFormT4aYearsTftySubmitted> TftySubmittedEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: TFTY.SUBMITTED
			
			TftySubmittedEntityAssociation = new List<TaxFormT4aYearsTftySubmitted>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(TftySubmitTitles != null)
			{
				int numTftySubmitted = TftySubmitTitles.Count;
				if (TftySubmitDates !=null && TftySubmitDates.Count > numTftySubmitted) numTftySubmitted = TftySubmitDates.Count;
				if (TftySubmitSeqNos !=null && TftySubmitSeqNos.Count > numTftySubmitted) numTftySubmitted = TftySubmitSeqNos.Count;
				if (TftySubmitTimes !=null && TftySubmitTimes.Count > numTftySubmitted) numTftySubmitted = TftySubmitTimes.Count;
				if (TftySubmitOpers !=null && TftySubmitOpers.Count > numTftySubmitted) numTftySubmitted = TftySubmitOpers.Count;

				for (int i = 0; i < numTftySubmitted; i++)
				{

					string value0 = "";
					if (TftySubmitTitles != null && i < TftySubmitTitles.Count)
					{
						value0 = TftySubmitTitles[i];
					}


					DateTime? value1 = null;
					if (TftySubmitDates != null && i < TftySubmitDates.Count)
					{
						value1 = TftySubmitDates[i];
					}


					string value2 = "";
					if (TftySubmitSeqNos != null && i < TftySubmitSeqNos.Count)
					{
						value2 = TftySubmitSeqNos[i];
					}


					DateTime? value3 = null;
					if (TftySubmitTimes != null && i < TftySubmitTimes.Count)
					{
						value3 = TftySubmitTimes[i];
					}


					string value4 = "";
					if (TftySubmitOpers != null && i < TftySubmitOpers.Count)
					{
						value4 = TftySubmitOpers[i];
					}

					TftySubmittedEntityAssociation.Add(new TaxFormT4aYearsTftySubmitted( value0, value1, value2, value3, value4));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class TaxFormT4aYearsTftySubmitted
	{
		public string TftySubmitTitlesAssocMember;	
		public DateTime? TftySubmitDatesAssocMember;	
		public string TftySubmitSeqNosAssocMember;	
		public DateTime? TftySubmitTimesAssocMember;	
		public string TftySubmitOpersAssocMember;	
		public TaxFormT4aYearsTftySubmitted() {}
		public TaxFormT4aYearsTftySubmitted(
			string inTftySubmitTitles,
			DateTime? inTftySubmitDates,
			string inTftySubmitSeqNos,
			DateTime? inTftySubmitTimes,
			string inTftySubmitOpers)
		{
			TftySubmitTitlesAssocMember = inTftySubmitTitles;
			TftySubmitDatesAssocMember = inTftySubmitDates;
			TftySubmitSeqNosAssocMember = inTftySubmitSeqNos;
			TftySubmitTimesAssocMember = inTftySubmitTimes;
			TftySubmitOpersAssocMember = inTftySubmitOpers;
		}
	}
}
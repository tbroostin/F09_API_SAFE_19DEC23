//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 3/5/2019 11:42:16 AM by user dvcoll-srm
//
//     Type: ENTITY
//     Entity: BPO
//     Application: CF
//     Environment: dvcoll
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Bpo")]
	[ColleagueDataContract(GeneratedDateTime = "3/5/2019 11:42:16 AM", User = "dvcoll-srm")]
	[EntityDataContract(EntityName = "BPO", EntityType = "PHYS")]
	public class Bpo : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: BPO.AP.TYPE
		/// </summary>
		[DataMember(Order = 0, Name = "BPO.AP.TYPE")]
		public string BpoApType { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VENDOR
		/// </summary>
		[DataMember(Order = 1, Name = "BPO.VENDOR")]
		public string BpoVendor { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VEN.NAME
		/// </summary>
		[DataMember(Order = 2, Name = "BPO.VEN.NAME")]
		public List<string> BpoVenName { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VEN.ADDRESS
		/// </summary>
		[DataMember(Order = 3, Name = "BPO.VEN.ADDRESS")]
		public List<string> BpoVenAddress { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.STATUS.DATE
		/// </summary>
		[DataMember(Order = 4, Name = "BPO.STATUS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> BpoStatusDate { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VEN.CITY
		/// </summary>
		[DataMember(Order = 5, Name = "BPO.VEN.CITY")]
		public string BpoVenCity { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VEN.STATE
		/// </summary>
		[DataMember(Order = 6, Name = "BPO.VEN.STATE")]
		public string BpoVenState { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VEN.ZIP
		/// </summary>
		[DataMember(Order = 7, Name = "BPO.VEN.ZIP")]
		public string BpoVenZip { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VEN.COUNTRY
		/// </summary>
		[DataMember(Order = 8, Name = "BPO.VEN.COUNTRY")]
		public string BpoVenCountry { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.DESC
		/// </summary>
		[DataMember(Order = 10, Name = "BPO.DESC")]
		public string BpoDesc { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.GL.NO
		/// </summary>
		[DataMember(Order = 12, Name = "BPO.GL.NO")]
		public List<string> BpoGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.GL.AMT
		/// </summary>
		[DataMember(Order = 13, Name = "BPO.GL.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> BpoGlAmt { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.GL.FOREIGN.AMT
		/// </summary>
		[DataMember(Order = 14, Name = "BPO.GL.FOREIGN.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> BpoGlForeignAmt { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.GL.PCT
		/// </summary>
		[DataMember(Order = 16, Name = "BPO.GL.PCT")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> BpoGlPct { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.DATE
		/// </summary>
		[DataMember(Order = 17, Name = "BPO.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? BpoDate { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.AUTHORIZATIONS
		/// </summary>
		[DataMember(Order = 18, Name = "BPO.AUTHORIZATIONS")]
		public List<string> BpoAuthorizations { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.STATUS
		/// </summary>
		[DataMember(Order = 19, Name = "BPO.STATUS")]
		public List<string> BpoStatus { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.AUTHORIZATION.DATES
		/// </summary>
		[DataMember(Order = 31, Name = "BPO.AUTHORIZATION.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> BpoAuthorizationDates { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VOU.IDS
		/// </summary>
		[DataMember(Order = 32, Name = "BPO.VOU.IDS")]
		public List<string> BpoVouIds { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.NEXT.APPROVAL.IDS
		/// </summary>
		[DataMember(Order = 33, Name = "BPO.NEXT.APPROVAL.IDS")]
		public List<string> BpoNextApprovalIds { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.COMMENTS
		/// </summary>
		[DataMember(Order = 34, Name = "BPO.COMMENTS")]
		public string BpoComments { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.PRINTED.COMMENTS
		/// </summary>
		[DataMember(Order = 35, Name = "BPO.PRINTED.COMMENTS")]
		public string BpoPrintedComments { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.TOTAL.AMT
		/// </summary>
		[DataMember(Order = 40, Name = "BPO.TOTAL.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? BpoTotalAmt { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.MAINT.GL.TRAN.DATE
		/// </summary>
		[DataMember(Order = 43, Name = "BPO.MAINT.GL.TRAN.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? BpoMaintGlTranDate { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VOID.GL.TRAN.DATE
		/// </summary>
		[DataMember(Order = 44, Name = "BPO.VOID.GL.TRAN.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? BpoVoidGlTranDate { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.VENDOR.TERMS
		/// </summary>
		[DataMember(Order = 45, Name = "BPO.VENDOR.TERMS")]
		public string BpoVendorTerms { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.CURRENCY.CODE
		/// </summary>
		[DataMember(Order = 47, Name = "BPO.CURRENCY.CODE")]
		public string BpoCurrencyCode { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.GL.BALANCE
		/// </summary>
		[DataMember(Order = 50, Name = "BPO.GL.BALANCE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> BpoGlBalance { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.SHIP.TO
		/// </summary>
		[DataMember(Order = 51, Name = "BPO.SHIP.TO")]
		public string BpoShipTo { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.SHIP.VIA
		/// </summary>
		[DataMember(Order = 52, Name = "BPO.SHIP.VIA")]
		public string BpoShipVia { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.FOB
		/// </summary>
		[DataMember(Order = 53, Name = "BPO.FOB")]
		public string BpoFob { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.BUYER
		/// </summary>
		[DataMember(Order = 54, Name = "BPO.BUYER")]
		public string BpoBuyer { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.REFERENCE.NO
		/// </summary>
		[DataMember(Order = 55, Name = "BPO.REFERENCE.NO")]
		public List<string> BpoReferenceNo { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.EXPIRE.DATE
		/// </summary>
		[DataMember(Order = 56, Name = "BPO.EXPIRE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? BpoExpireDate { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.INITIATOR
		/// </summary>
		[DataMember(Order = 57, Name = "BPO.INITIATOR")]
		public string BpoInitiator { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.REQ.IDS
		/// </summary>
		[DataMember(Order = 58, Name = "BPO.REQ.IDS")]
		public List<string> BpoReqIds { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ITEMS.ID
		/// </summary>
		[DataMember(Order = 59, Name = "BPO.ITEMS.ID")]
		public List<string> BpoItemsId { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.FLAG
		/// </summary>
		[DataMember(Order = 60, Name = "BPO.ALT.FLAG")]
		public string BpoAltFlag { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.SHIP.NAME
		/// </summary>
		[DataMember(Order = 61, Name = "BPO.ALT.SHIP.NAME")]
		public string BpoAltShipName { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.SHIP.ADDRESS
		/// </summary>
		[DataMember(Order = 62, Name = "BPO.ALT.SHIP.ADDRESS")]
		public List<string> BpoAltShipAddress { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.SHIP.CITY
		/// </summary>
		[DataMember(Order = 63, Name = "BPO.ALT.SHIP.CITY")]
		public string BpoAltShipCity { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.SHIP.STATE
		/// </summary>
		[DataMember(Order = 64, Name = "BPO.ALT.SHIP.STATE")]
		public string BpoAltShipState { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.SHIP.ZIP
		/// </summary>
		[DataMember(Order = 65, Name = "BPO.ALT.SHIP.ZIP")]
		public string BpoAltShipZip { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.CONTRACT.DATE
		/// </summary>
		[DataMember(Order = 68, Name = "BPO.CONTRACT.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? BpoContractDate { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.DEFAULT.COMMODITY
		/// </summary>
		[DataMember(Order = 69, Name = "BPO.DEFAULT.COMMODITY")]
		public string BpoDefaultCommodity { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.NO
		/// </summary>
		[DataMember(Order = 70, Name = "BPO.NO")]
		public string BpoNo { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.SHIP.PHONE
		/// </summary>
		[DataMember(Order = 73, Name = "BPO.ALT.SHIP.PHONE")]
		public string BpoAltShipPhone { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.ALT.SHIP.EXT
		/// </summary>
		[DataMember(Order = 74, Name = "BPO.ALT.SHIP.EXT")]
		public string BpoAltShipExt { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.APPROVAL.LEVELS
		/// </summary>
		[DataMember(Order = 76, Name = "BPO.APPROVAL.LEVELS")]
		public List<string> BpoApprovalLevels { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.AUTHORIZATION.LEVELS
		/// </summary>
		[DataMember(Order = 77, Name = "BPO.AUTHORIZATION.LEVELS")]
		public List<string> BpoAuthorizationLevels { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.PROJECT.CF.ID
		/// </summary>
		[DataMember(Order = 78, Name = "BPO.PROJECT.CF.ID")]
		public List<string> BpoProjectCfId { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 79, Name = "BPO.PRJ.ITEM.IDS")]
		public List<string> BpoPrjItemIds { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.INTG.ADDRESS.ID
		/// </summary>
		[DataMember(Order = 84, Name = "BPO.INTG.ADDRESS.ID")]
		public string BpoIntgAddressId { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.INTG.ALT.SHIP.COUNTRY
		/// </summary>
		[DataMember(Order = 85, Name = "BPO.INTG.ALT.SHIP.COUNTRY")]
		public string BpoIntgAltShipCountry { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.INTG.CORP.PERSON.IND
		/// </summary>
		[DataMember(Order = 86, Name = "BPO.INTG.CORP.PERSON.IND")]
		public string BpoIntgCorpPersonInd { get; set; }
		
		/// <summary>
		/// CDD Name: BPO.INTG.SUBMITTED.BY
		/// </summary>
		[DataMember(Order = 87, Name = "BPO.INTG.SUBMITTED.BY")]
		public string BpoIntgSubmittedBy { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<BpoBpoStat> BpoStatEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<BpoBpoGl> BpoGlEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<BpoBpoAuth> BpoAuthEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<BpoBpoAppr> BpoApprEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: BPO.STAT
			
			BpoStatEntityAssociation = new List<BpoBpoStat>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(BpoStatus != null)
			{
				int numBpoStat = BpoStatus.Count;
				if (BpoStatusDate !=null && BpoStatusDate.Count > numBpoStat) numBpoStat = BpoStatusDate.Count;

				for (int i = 0; i < numBpoStat; i++)
				{

					DateTime? value0 = null;
					if (BpoStatusDate != null && i < BpoStatusDate.Count)
					{
						value0 = BpoStatusDate[i];
					}


					string value1 = "";
					if (BpoStatus != null && i < BpoStatus.Count)
					{
						value1 = BpoStatus[i];
					}

					BpoStatEntityAssociation.Add(new BpoBpoStat( value0, value1));
				}
			}
			// EntityAssociation Name: BPO.GL
			
			BpoGlEntityAssociation = new List<BpoBpoGl>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(BpoGlNo != null)
			{
				int numBpoGl = BpoGlNo.Count;
				if (BpoGlAmt !=null && BpoGlAmt.Count > numBpoGl) numBpoGl = BpoGlAmt.Count;
				if (BpoGlForeignAmt !=null && BpoGlForeignAmt.Count > numBpoGl) numBpoGl = BpoGlForeignAmt.Count;
				if (BpoGlPct !=null && BpoGlPct.Count > numBpoGl) numBpoGl = BpoGlPct.Count;
				if (BpoGlBalance !=null && BpoGlBalance.Count > numBpoGl) numBpoGl = BpoGlBalance.Count;
				if (BpoProjectCfId !=null && BpoProjectCfId.Count > numBpoGl) numBpoGl = BpoProjectCfId.Count;
				if (BpoPrjItemIds !=null && BpoPrjItemIds.Count > numBpoGl) numBpoGl = BpoPrjItemIds.Count;

				for (int i = 0; i < numBpoGl; i++)
				{

					string value0 = "";
					if (BpoGlNo != null && i < BpoGlNo.Count)
					{
						value0 = BpoGlNo[i];
					}


					Decimal? value1 = null;
					if (BpoGlAmt != null && i < BpoGlAmt.Count)
					{
						value1 = BpoGlAmt[i];
					}


					Decimal? value2 = null;
					if (BpoGlForeignAmt != null && i < BpoGlForeignAmt.Count)
					{
						value2 = BpoGlForeignAmt[i];
					}


					Decimal? value3 = null;
					if (BpoGlPct != null && i < BpoGlPct.Count)
					{
						value3 = BpoGlPct[i];
					}


					Decimal? value4 = null;
					if (BpoGlBalance != null && i < BpoGlBalance.Count)
					{
						value4 = BpoGlBalance[i];
					}


					string value5 = "";
					if (BpoProjectCfId != null && i < BpoProjectCfId.Count)
					{
						value5 = BpoProjectCfId[i];
					}


					string value6 = "";
					if (BpoPrjItemIds != null && i < BpoPrjItemIds.Count)
					{
						value6 = BpoPrjItemIds[i];
					}

					BpoGlEntityAssociation.Add(new BpoBpoGl( value0, value1, value2, value3, value4, value5, value6));
				}
			}
			// EntityAssociation Name: BPO.AUTH
			
			BpoAuthEntityAssociation = new List<BpoBpoAuth>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(BpoAuthorizations != null)
			{
				int numBpoAuth = BpoAuthorizations.Count;
				if (BpoAuthorizationDates !=null && BpoAuthorizationDates.Count > numBpoAuth) numBpoAuth = BpoAuthorizationDates.Count;
				if (BpoAuthorizationLevels !=null && BpoAuthorizationLevels.Count > numBpoAuth) numBpoAuth = BpoAuthorizationLevels.Count;

				for (int i = 0; i < numBpoAuth; i++)
				{

					string value0 = "";
					if (BpoAuthorizations != null && i < BpoAuthorizations.Count)
					{
						value0 = BpoAuthorizations[i];
					}


					DateTime? value1 = null;
					if (BpoAuthorizationDates != null && i < BpoAuthorizationDates.Count)
					{
						value1 = BpoAuthorizationDates[i];
					}


					string value2 = "";
					if (BpoAuthorizationLevels != null && i < BpoAuthorizationLevels.Count)
					{
						value2 = BpoAuthorizationLevels[i];
					}

					BpoAuthEntityAssociation.Add(new BpoBpoAuth( value0, value1, value2));
				}
			}
			// EntityAssociation Name: BPO.APPR
			
			BpoApprEntityAssociation = new List<BpoBpoAppr>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(BpoNextApprovalIds != null)
			{
				int numBpoAppr = BpoNextApprovalIds.Count;
				if (BpoApprovalLevels !=null && BpoApprovalLevels.Count > numBpoAppr) numBpoAppr = BpoApprovalLevels.Count;

				for (int i = 0; i < numBpoAppr; i++)
				{

					string value0 = "";
					if (BpoNextApprovalIds != null && i < BpoNextApprovalIds.Count)
					{
						value0 = BpoNextApprovalIds[i];
					}


					string value1 = "";
					if (BpoApprovalLevels != null && i < BpoApprovalLevels.Count)
					{
						value1 = BpoApprovalLevels[i];
					}

					BpoApprEntityAssociation.Add(new BpoBpoAppr( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class BpoBpoStat
	{
		public DateTime? BpoStatusDateAssocMember;	
		public string BpoStatusAssocMember;	
		public BpoBpoStat() {}
		public BpoBpoStat(
			DateTime? inBpoStatusDate,
			string inBpoStatus)
		{
			BpoStatusDateAssocMember = inBpoStatusDate;
			BpoStatusAssocMember = inBpoStatus;
		}
	}
	
	[Serializable]
	public class BpoBpoGl
	{
		public string BpoGlNoAssocMember;	
		public Decimal? BpoGlAmtAssocMember;	
		public Decimal? BpoGlForeignAmtAssocMember;	
		public Decimal? BpoGlPctAssocMember;	
		public Decimal? BpoGlBalanceAssocMember;	
		public string BpoProjectCfIdAssocMember;	
		public string BpoPrjItemIdsAssocMember;	
		public BpoBpoGl() {}
		public BpoBpoGl(
			string inBpoGlNo,
			Decimal? inBpoGlAmt,
			Decimal? inBpoGlForeignAmt,
			Decimal? inBpoGlPct,
			Decimal? inBpoGlBalance,
			string inBpoProjectCfId,
			string inBpoPrjItemIds)
		{
			BpoGlNoAssocMember = inBpoGlNo;
			BpoGlAmtAssocMember = inBpoGlAmt;
			BpoGlForeignAmtAssocMember = inBpoGlForeignAmt;
			BpoGlPctAssocMember = inBpoGlPct;
			BpoGlBalanceAssocMember = inBpoGlBalance;
			BpoProjectCfIdAssocMember = inBpoProjectCfId;
			BpoPrjItemIdsAssocMember = inBpoPrjItemIds;
		}
	}
	
	[Serializable]
	public class BpoBpoAuth
	{
		public string BpoAuthorizationsAssocMember;	
		public DateTime? BpoAuthorizationDatesAssocMember;	
		public string BpoAuthorizationLevelsAssocMember;	
		public BpoBpoAuth() {}
		public BpoBpoAuth(
			string inBpoAuthorizations,
			DateTime? inBpoAuthorizationDates,
			string inBpoAuthorizationLevels)
		{
			BpoAuthorizationsAssocMember = inBpoAuthorizations;
			BpoAuthorizationDatesAssocMember = inBpoAuthorizationDates;
			BpoAuthorizationLevelsAssocMember = inBpoAuthorizationLevels;
		}
	}
	
	[Serializable]
	public class BpoBpoAppr
	{
		public string BpoNextApprovalIdsAssocMember;	
		public string BpoApprovalLevelsAssocMember;	
		public BpoBpoAppr() {}
		public BpoBpoAppr(
			string inBpoNextApprovalIds,
			string inBpoApprovalLevels)
		{
			BpoNextApprovalIdsAssocMember = inBpoNextApprovalIds;
			BpoApprovalLevelsAssocMember = inBpoApprovalLevels;
		}
	}
}
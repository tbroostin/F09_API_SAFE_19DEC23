//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 7/9/2018 1:56:55 PM by user tglsql
//
//     Type: ENTITY
//     Entity: GLSTRUCT
//     Application: CF
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Glstruct")]
	[ColleagueDataContract(GeneratedDateTime = "7/9/2018 1:56:55 PM", User = "tglsql")]
	[EntityDataContract(EntityName = "GLSTRUCT", EntityType = "PERM")]
	public class Glstruct : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: ACCT.SIZE
		/// </summary>
		[DataMember(Order = 0, Name = "ACCT.SIZE")]
		public List<string> AcctSize { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.SUB.START
		/// </summary>
		[DataMember(Order = 1, Name = "ACCT.SUB.START")]
		public List<string> AcctSubStart { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.SUB.LGTH
		/// </summary>
		[DataMember(Order = 2, Name = "ACCT.SUB.LGTH")]
		public List<string> AcctSubLgth { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.SUB.NAME
		/// </summary>
		[DataMember(Order = 3, Name = "ACCT.SUB.NAME")]
		public List<string> AcctSubName { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.NAMES
		/// </summary>
		[DataMember(Order = 4, Name = "ACCT.NAMES")]
		public List<string> AcctNames { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.START
		/// </summary>
		[DataMember(Order = 5, Name = "ACCT.START")]
		public List<string> AcctStart { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.LENGTH
		/// </summary>
		[DataMember(Order = 6, Name = "ACCT.LENGTH")]
		public List<int?> AcctLength { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.DLM
		/// </summary>
		[DataMember(Order = 12, Name = "ACCT.DLM")]
		public string AcctDlm { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.COMPONENT.TYPE
		/// </summary>
		[DataMember(Order = 16, Name = "ACCT.COMPONENT.TYPE")]
		public List<string> AcctComponentType { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.OVERRIDE.TOKENS
		/// </summary>
		[DataMember(Order = 21, Name = "ACCT.OVERRIDE.TOKENS")]
		public List<string> AcctOverrideTokens { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.CHECK.AVAIL.FUNDS
		/// </summary>
		[DataMember(Order = 23, Name = "ACCT.CHECK.AVAIL.FUNDS")]
		public string AcctCheckAvailFunds { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.FUTURE.PERIODS
		/// </summary>
		[DataMember(Order = 24, Name = "ACCT.FUTURE.PERIODS")]
		public string AcctFuturePeriods { get; set; }
		
		/// <summary>
		/// CDD Name: ACCT.FDATE.OVRD.FYEAR
		/// </summary>
		[DataMember(Order = 25, Name = "ACCT.FDATE.OVRD.FYEAR")]
		public string AcctFdateOvrdFyear { get; set; }
		
		/// <summary>
		/// CDD Name: GL.FULL.ACCESS.ROLE
		/// </summary>
		[DataMember(Order = 32, Name = "GL.FULL.ACCESS.ROLE")]
		public string GlFullAccessRole { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<GlstructGlmajor> GlmajorEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: GLMAJOR
			
			GlmajorEntityAssociation = new List<GlstructGlmajor>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(AcctNames != null)
			{
				int numGlmajor = AcctNames.Count;
				if (AcctStart !=null && AcctStart.Count > numGlmajor) numGlmajor = AcctStart.Count;
				if (AcctLength !=null && AcctLength.Count > numGlmajor) numGlmajor = AcctLength.Count;
				if (AcctComponentType !=null && AcctComponentType.Count > numGlmajor) numGlmajor = AcctComponentType.Count;

				for (int i = 0; i < numGlmajor; i++)
				{

					string value0 = "";
					if (AcctNames != null && i < AcctNames.Count)
					{
						value0 = AcctNames[i];
					}


					string value1 = "";
					if (AcctStart != null && i < AcctStart.Count)
					{
						value1 = AcctStart[i];
					}


					int? value2 = null;
					if (AcctLength != null && i < AcctLength.Count)
					{
						value2 = AcctLength[i];
					}


					string value3 = "";
					if (AcctComponentType != null && i < AcctComponentType.Count)
					{
						value3 = AcctComponentType[i];
					}

					GlmajorEntityAssociation.Add(new GlstructGlmajor( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class GlstructGlmajor
	{
		public string AcctNamesAssocMember;	
		public string AcctStartAssocMember;	
		public int? AcctLengthAssocMember;	
		public string AcctComponentTypeAssocMember;	
		public GlstructGlmajor() {}
		public GlstructGlmajor(
			string inAcctNames,
			string inAcctStart,
			int? inAcctLength,
			string inAcctComponentType)
		{
			AcctNamesAssocMember = inAcctNames;
			AcctStartAssocMember = inAcctStart;
			AcctLengthAssocMember = inAcctLength;
			AcctComponentTypeAssocMember = inAcctComponentType;
		}
	}
}
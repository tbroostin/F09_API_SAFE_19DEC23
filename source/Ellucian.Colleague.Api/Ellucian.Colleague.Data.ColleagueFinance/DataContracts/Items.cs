//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 1:20:19 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: ITEMS
//     Application: CF
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Items")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 1:20:19 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "ITEMS", EntityType = "PHYS")]
	public class Items : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: ITM.DESC
		/// </summary>
		[DataMember(Order = 0, Name = "ITM.DESC")]
		public List<string> ItmDesc { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VENDOR.PART
		/// </summary>
		[DataMember(Order = 5, Name = "ITM.VENDOR.PART")]
		public string ItmVendorPart { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.TAX.FORM
		/// </summary>
		[DataMember(Order = 7, Name = "ITM.TAX.FORM")]
		public string ItmTaxForm { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.COMMENTS
		/// </summary>
		[DataMember(Order = 10, Name = "ITM.COMMENTS")]
		public string ItmComments { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.ID
		/// </summary>
		[DataMember(Order = 16, Name = "ITM.REQ.ID")]
		public string ItmReqId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.QTY
		/// </summary>
		[DataMember(Order = 17, Name = "ITM.REQ.QTY")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmReqQty { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.ISSUE
		/// </summary>
		[DataMember(Order = 18, Name = "ITM.REQ.ISSUE")]
		public string ItmReqIssue { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.PRICE
		/// </summary>
		[DataMember(Order = 19, Name = "ITM.REQ.PRICE")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmReqPrice { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.TRADE.DISC.AMT
		/// </summary>
		[DataMember(Order = 20, Name = "ITM.REQ.TRADE.DISC.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmReqTradeDiscAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.TRADE.DISC.PCT
		/// </summary>
		[DataMember(Order = 21, Name = "ITM.REQ.TRADE.DISC.PCT")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmReqTradeDiscPct { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.TAX.FORM.CODE
		/// </summary>
		[DataMember(Order = 22, Name = "ITM.TAX.FORM.CODE")]
		public string ItmTaxFormCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.EXT.PRICE
		/// </summary>
		[DataMember(Order = 23, Name = "ITM.REQ.EXT.PRICE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmReqExtPrice { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.FOREIGN.AMT
		/// </summary>
		[DataMember(Order = 24, Name = "ITM.REQ.GL.FOREIGN.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlForeignAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.NO
		/// </summary>
		[DataMember(Order = 25, Name = "ITM.REQ.GL.NO")]
		public List<string> ItmReqGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.QTY
		/// </summary>
		[DataMember(Order = 26, Name = "ITM.REQ.GL.QTY")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlQty { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.AMT
		/// </summary>
		[DataMember(Order = 27, Name = "ITM.REQ.GL.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.PCT
		/// </summary>
		[DataMember(Order = 28, Name = "ITM.REQ.GL.PCT")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlPct { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.ID
		/// </summary>
		[DataMember(Order = 29, Name = "ITM.PO.ID")]
		public string ItmPoId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.QTY
		/// </summary>
		[DataMember(Order = 30, Name = "ITM.PO.QTY")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmPoQty { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.ISSUE
		/// </summary>
		[DataMember(Order = 31, Name = "ITM.PO.ISSUE")]
		public string ItmPoIssue { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.PRICE
		/// </summary>
		[DataMember(Order = 32, Name = "ITM.PO.PRICE")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmPoPrice { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.TRADE.DISC.AMT
		/// </summary>
		[DataMember(Order = 33, Name = "ITM.PO.TRADE.DISC.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmPoTradeDiscAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.TRADE.DISC.PCT
		/// </summary>
		[DataMember(Order = 34, Name = "ITM.PO.TRADE.DISC.PCT")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmPoTradeDiscPct { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.EXT.PRICE
		/// </summary>
		[DataMember(Order = 35, Name = "ITM.PO.EXT.PRICE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmPoExtPrice { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.QTY
		/// </summary>
		[DataMember(Order = 36, Name = "ITM.PO.GL.QTY")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlQty { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.FOREIGN.AMT
		/// </summary>
		[DataMember(Order = 37, Name = "ITM.PO.GL.FOREIGN.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlForeignAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.NO
		/// </summary>
		[DataMember(Order = 38, Name = "ITM.PO.GL.NO")]
		public List<string> ItmPoGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.AMT
		/// </summary>
		[DataMember(Order = 39, Name = "ITM.PO.GL.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.PCT
		/// </summary>
		[DataMember(Order = 40, Name = "ITM.PO.GL.PCT")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlPct { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.STATUS
		/// </summary>
		[DataMember(Order = 42, Name = "ITM.PO.STATUS")]
		public List<string> ItmPoStatus { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.STATUS.DATE
		/// </summary>
		[DataMember(Order = 43, Name = "ITM.PO.STATUS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ItmPoStatusDate { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.QTY
		/// </summary>
		[DataMember(Order = 50, Name = "ITM.VOU.QTY")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmVouQty { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.ISSUE
		/// </summary>
		[DataMember(Order = 51, Name = "ITM.VOU.ISSUE")]
		public string ItmVouIssue { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.PRICE
		/// </summary>
		[DataMember(Order = 52, Name = "ITM.VOU.PRICE")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmVouPrice { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.TRADE.DISC.AMT
		/// </summary>
		[DataMember(Order = 53, Name = "ITM.VOU.TRADE.DISC.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmVouTradeDiscAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.TRADE.DISC.PCT
		/// </summary>
		[DataMember(Order = 54, Name = "ITM.VOU.TRADE.DISC.PCT")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmVouTradeDiscPct { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.CASH.DISC.AMT
		/// </summary>
		[DataMember(Order = 55, Name = "ITM.VOU.CASH.DISC.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmVouCashDiscAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.EXT.PRICE
		/// </summary>
		[DataMember(Order = 56, Name = "ITM.VOU.EXT.PRICE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? ItmVouExtPrice { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.BPO.ID
		/// </summary>
		[DataMember(Order = 57, Name = "ITM.BPO.ID")]
		public string ItmBpoId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.NO
		/// </summary>
		[DataMember(Order = 58, Name = "ITM.VOU.GL.NO")]
		public List<string> ItmVouGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.AMT
		/// </summary>
		[DataMember(Order = 59, Name = "ITM.VOU.GL.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.PCT
		/// </summary>
		[DataMember(Order = 60, Name = "ITM.VOU.GL.PCT")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlPct { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.INVOICE.NO
		/// </summary>
		[DataMember(Order = 61, Name = "ITM.INVOICE.NO")]
		public string ItmInvoiceNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.COMMODITY.CODE
		/// </summary>
		[DataMember(Order = 63, Name = "ITM.COMMODITY.CODE")]
		public string ItmCommodityCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.LINE.GL.NO
		/// </summary>
		[DataMember(Order = 65, Name = "ITM.VOU.LINE.GL.NO")]
		public List<string> ItmVouLineGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.TAX.GL.NO
		/// </summary>
		[DataMember(Order = 66, Name = "ITM.VOU.TAX.GL.NO")]
		public List<string> ItmVouTaxGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.TAX.CODE
		/// </summary>
		[DataMember(Order = 67, Name = "ITM.VOU.GL.TAX.CODE")]
		public List<string> ItmVouGlTaxCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.TAX.AMT
		/// </summary>
		[DataMember(Order = 68, Name = "ITM.VOU.GL.TAX.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlTaxAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.TAX.CALC.FLAG
		/// </summary>
		[DataMember(Order = 69, Name = "ITM.VOU.GL.TAX.CALC.FLAG")]
		public List<string> ItmVouGlTaxCalcFlag { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.REBATE.AMT
		/// </summary>
		[DataMember(Order = 70, Name = "ITM.VOU.GL.REBATE.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlRebateAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.REFUND.AMT
		/// </summary>
		[DataMember(Order = 71, Name = "ITM.VOU.GL.REFUND.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlRefundAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.FOREIGN.AMT
		/// </summary>
		[DataMember(Order = 82, Name = "ITM.VOU.GL.FOREIGN.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlForeignAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.ACCT.TAX.CODE
		/// </summary>
		[DataMember(Order = 83, Name = "ITM.VOU.GL.ACCT.TAX.CODE")]
		public List<string> ItmVouGlAcctTaxCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.QTY
		/// </summary>
		[DataMember(Order = 84, Name = "ITM.VOU.GL.QTY")]
		[DisplayFormat(DataFormatString = "{0:N3}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlQty { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.EXPECTED.DELIVERY.DATE
		/// </summary>
		[DataMember(Order = 85, Name = "ITM.EXPECTED.DELIVERY.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ItmExpectedDeliveryDate { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.LINE.GL.NO
		/// </summary>
		[DataMember(Order = 90, Name = "ITM.PO.LINE.GL.NO")]
		public List<string> ItmPoLineGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.TAX.GL.NO
		/// </summary>
		[DataMember(Order = 91, Name = "ITM.PO.TAX.GL.NO")]
		public List<string> ItmPoTaxGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.TAX.CODE
		/// </summary>
		[DataMember(Order = 92, Name = "ITM.PO.GL.TAX.CODE")]
		public List<string> ItmPoGlTaxCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.TAX.AMT
		/// </summary>
		[DataMember(Order = 93, Name = "ITM.PO.GL.TAX.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlTaxAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.ACCT.TAX.CODE
		/// </summary>
		[DataMember(Order = 94, Name = "ITM.PO.GL.ACCT.TAX.CODE")]
		public List<string> ItmPoGlAcctTaxCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.TAX.AMT.TYPE
		/// </summary>
		[DataMember(Order = 95, Name = "ITM.VOU.TAX.AMT.TYPE")]
		public List<string> ItmVouTaxAmtType { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.TAX.CALC.FLAG
		/// </summary>
		[DataMember(Order = 96, Name = "ITM.PO.GL.TAX.CALC.FLAG")]
		public List<string> ItmPoGlTaxCalcFlag { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.TAX.AMT.TYPE
		/// </summary>
		[DataMember(Order = 97, Name = "ITM.PO.TAX.AMT.TYPE")]
		public List<string> ItmPoTaxAmtType { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.REBATE.AMT
		/// </summary>
		[DataMember(Order = 99, Name = "ITM.PO.GL.REBATE.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlRebateAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.REFUND.AMT
		/// </summary>
		[DataMember(Order = 100, Name = "ITM.PO.GL.REFUND.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlRefundAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.GL.FOREIGN.TAX.AMT
		/// </summary>
		[DataMember(Order = 112, Name = "ITM.VOU.GL.FOREIGN.TAX.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmVouGlForeignTaxAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.GL.FOREIGN.TAX.AMT
		/// </summary>
		[DataMember(Order = 113, Name = "ITM.PO.GL.FOREIGN.TAX.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmPoGlForeignTaxAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.DESIRED.DELIVERY.DATE
		/// </summary>
		[DataMember(Order = 119, Name = "ITM.DESIRED.DELIVERY.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ItmDesiredDeliveryDate { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.LINE.GL.NO
		/// </summary>
		[DataMember(Order = 123, Name = "ITM.REQ.LINE.GL.NO")]
		public List<string> ItmReqLineGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.TAX.GL.NO
		/// </summary>
		[DataMember(Order = 124, Name = "ITM.REQ.TAX.GL.NO")]
		public List<string> ItmReqTaxGlNo { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.TAX.CODE
		/// </summary>
		[DataMember(Order = 125, Name = "ITM.REQ.GL.TAX.CODE")]
		public List<string> ItmReqGlTaxCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.TAX.AMT
		/// </summary>
		[DataMember(Order = 126, Name = "ITM.REQ.GL.TAX.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlTaxAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.ACCT.TAX.CODE
		/// </summary>
		[DataMember(Order = 127, Name = "ITM.REQ.GL.ACCT.TAX.CODE")]
		public List<string> ItmReqGlAcctTaxCode { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.TAX.CALC.FLAG
		/// </summary>
		[DataMember(Order = 128, Name = "ITM.REQ.GL.TAX.CALC.FLAG")]
		public List<string> ItmReqGlTaxCalcFlag { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.TAX.AMT.TYPE
		/// </summary>
		[DataMember(Order = 129, Name = "ITM.REQ.TAX.AMT.TYPE")]
		public List<string> ItmReqTaxAmtType { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.REBATE.AMT
		/// </summary>
		[DataMember(Order = 130, Name = "ITM.REQ.GL.REBATE.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlRebateAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.REFUND.AMT
		/// </summary>
		[DataMember(Order = 131, Name = "ITM.REQ.GL.REFUND.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlRefundAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.GL.FOREIGN.TAX.AMT
		/// </summary>
		[DataMember(Order = 132, Name = "ITM.REQ.GL.FOREIGN.TAX.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ItmReqGlForeignTaxAmt { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.TAX.FORM.LOC
		/// </summary>
		[DataMember(Order = 133, Name = "ITM.TAX.FORM.LOC")]
		public string ItmTaxFormLoc { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.PROJECT.CF.ID
		/// </summary>
		[DataMember(Order = 137, Name = "ITM.VOU.PROJECT.CF.ID")]
		public List<string> ItmVouProjectCfId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.PROJECT.CF.ID
		/// </summary>
		[DataMember(Order = 138, Name = "ITM.REQ.PROJECT.CF.ID")]
		public List<string> ItmReqProjectCfId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.PROJECT.CF.ID
		/// </summary>
		[DataMember(Order = 139, Name = "ITM.PO.PROJECT.CF.ID")]
		public List<string> ItmPoProjectCfId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 140, Name = "ITM.VOU.PRJ.ITEM.IDS")]
		public List<string> ItmVouPrjItemIds { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 141, Name = "ITM.REQ.PRJ.ITEM.IDS")]
		public List<string> ItmReqPrjItemIds { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 142, Name = "ITM.PO.PRJ.ITEM.IDS")]
		public List<string> ItmPoPrjItemIds { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.TAX.PROJECT.CF.ID
		/// </summary>
		[DataMember(Order = 143, Name = "ITM.VOU.TAX.PROJECT.CF.ID")]
		public List<string> ItmVouTaxProjectCfId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.VOU.TAX.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 144, Name = "ITM.VOU.TAX.PRJ.ITEM.IDS")]
		public List<string> ItmVouTaxPrjItemIds { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.TAX.PROJECT.CF.ID
		/// </summary>
		[DataMember(Order = 145, Name = "ITM.REQ.TAX.PROJECT.CF.ID")]
		public List<string> ItmReqTaxProjectCfId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.REQ.TAX.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 146, Name = "ITM.REQ.TAX.PRJ.ITEM.IDS")]
		public List<string> ItmReqTaxPrjItemIds { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.TAX.PROJECT.CF.ID
		/// </summary>
		[DataMember(Order = 147, Name = "ITM.PO.TAX.PROJECT.CF.ID")]
		public List<string> ItmPoTaxProjectCfId { get; set; }
		
		/// <summary>
		/// CDD Name: ITM.PO.TAX.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 148, Name = "ITM.PO.TAX.PRJ.ITEM.IDS")]
		public List<string> ItmPoTaxPrjItemIds { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ItemsItemReq> ItemReqEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ItemsItemPo> ItemPoEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ItemsItemPoStatus> ItemPoStatusEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ItemsVouchGl> VouchGlEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ItemsVouGlTaxes> VouGlTaxesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ItemsPoGlTaxes> PoGlTaxesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ItemsReqGlTaxes> ReqGlTaxesEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: ITEM.REQ
			
			ItemReqEntityAssociation = new List<ItemsItemReq>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ItmReqGlNo != null)
			{
				int numItemReq = ItmReqGlNo.Count;
				if (ItmReqGlForeignAmt !=null && ItmReqGlForeignAmt.Count > numItemReq) numItemReq = ItmReqGlForeignAmt.Count;
				if (ItmReqGlQty !=null && ItmReqGlQty.Count > numItemReq) numItemReq = ItmReqGlQty.Count;
				if (ItmReqGlAmt !=null && ItmReqGlAmt.Count > numItemReq) numItemReq = ItmReqGlAmt.Count;
				if (ItmReqGlPct !=null && ItmReqGlPct.Count > numItemReq) numItemReq = ItmReqGlPct.Count;
				if (ItmReqGlTaxCalcFlag !=null && ItmReqGlTaxCalcFlag.Count > numItemReq) numItemReq = ItmReqGlTaxCalcFlag.Count;
				if (ItmReqGlRebateAmt !=null && ItmReqGlRebateAmt.Count > numItemReq) numItemReq = ItmReqGlRebateAmt.Count;
				if (ItmReqGlRefundAmt !=null && ItmReqGlRefundAmt.Count > numItemReq) numItemReq = ItmReqGlRefundAmt.Count;
				if (ItmReqProjectCfId !=null && ItmReqProjectCfId.Count > numItemReq) numItemReq = ItmReqProjectCfId.Count;
				if (ItmReqPrjItemIds !=null && ItmReqPrjItemIds.Count > numItemReq) numItemReq = ItmReqPrjItemIds.Count;

				for (int i = 0; i < numItemReq; i++)
				{

					Decimal? value0 = null;
					if (ItmReqGlForeignAmt != null && i < ItmReqGlForeignAmt.Count)
					{
						value0 = ItmReqGlForeignAmt[i];
					}


					string value1 = "";
					if (ItmReqGlNo != null && i < ItmReqGlNo.Count)
					{
						value1 = ItmReqGlNo[i];
					}


					Decimal? value2 = null;
					if (ItmReqGlQty != null && i < ItmReqGlQty.Count)
					{
						value2 = ItmReqGlQty[i];
					}


					Decimal? value3 = null;
					if (ItmReqGlAmt != null && i < ItmReqGlAmt.Count)
					{
						value3 = ItmReqGlAmt[i];
					}


					Decimal? value4 = null;
					if (ItmReqGlPct != null && i < ItmReqGlPct.Count)
					{
						value4 = ItmReqGlPct[i];
					}


					string value5 = "";
					if (ItmReqGlTaxCalcFlag != null && i < ItmReqGlTaxCalcFlag.Count)
					{
						value5 = ItmReqGlTaxCalcFlag[i];
					}


					Decimal? value6 = null;
					if (ItmReqGlRebateAmt != null && i < ItmReqGlRebateAmt.Count)
					{
						value6 = ItmReqGlRebateAmt[i];
					}


					Decimal? value7 = null;
					if (ItmReqGlRefundAmt != null && i < ItmReqGlRefundAmt.Count)
					{
						value7 = ItmReqGlRefundAmt[i];
					}


					string value8 = "";
					if (ItmReqProjectCfId != null && i < ItmReqProjectCfId.Count)
					{
						value8 = ItmReqProjectCfId[i];
					}


					string value9 = "";
					if (ItmReqPrjItemIds != null && i < ItmReqPrjItemIds.Count)
					{
						value9 = ItmReqPrjItemIds[i];
					}

					ItemReqEntityAssociation.Add(new ItemsItemReq( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9));
				}
			}
			// EntityAssociation Name: ITEM.PO
			
			ItemPoEntityAssociation = new List<ItemsItemPo>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ItmPoGlNo != null)
			{
				int numItemPo = ItmPoGlNo.Count;
				if (ItmPoGlQty !=null && ItmPoGlQty.Count > numItemPo) numItemPo = ItmPoGlQty.Count;
				if (ItmPoGlForeignAmt !=null && ItmPoGlForeignAmt.Count > numItemPo) numItemPo = ItmPoGlForeignAmt.Count;
				if (ItmPoGlAmt !=null && ItmPoGlAmt.Count > numItemPo) numItemPo = ItmPoGlAmt.Count;
				if (ItmPoGlPct !=null && ItmPoGlPct.Count > numItemPo) numItemPo = ItmPoGlPct.Count;
				if (ItmPoGlTaxCalcFlag !=null && ItmPoGlTaxCalcFlag.Count > numItemPo) numItemPo = ItmPoGlTaxCalcFlag.Count;
				if (ItmPoGlRebateAmt !=null && ItmPoGlRebateAmt.Count > numItemPo) numItemPo = ItmPoGlRebateAmt.Count;
				if (ItmPoGlRefundAmt !=null && ItmPoGlRefundAmt.Count > numItemPo) numItemPo = ItmPoGlRefundAmt.Count;
				if (ItmPoProjectCfId !=null && ItmPoProjectCfId.Count > numItemPo) numItemPo = ItmPoProjectCfId.Count;
				if (ItmPoPrjItemIds !=null && ItmPoPrjItemIds.Count > numItemPo) numItemPo = ItmPoPrjItemIds.Count;

				for (int i = 0; i < numItemPo; i++)
				{

					Decimal? value0 = null;
					if (ItmPoGlQty != null && i < ItmPoGlQty.Count)
					{
						value0 = ItmPoGlQty[i];
					}


					Decimal? value1 = null;
					if (ItmPoGlForeignAmt != null && i < ItmPoGlForeignAmt.Count)
					{
						value1 = ItmPoGlForeignAmt[i];
					}


					string value2 = "";
					if (ItmPoGlNo != null && i < ItmPoGlNo.Count)
					{
						value2 = ItmPoGlNo[i];
					}


					Decimal? value3 = null;
					if (ItmPoGlAmt != null && i < ItmPoGlAmt.Count)
					{
						value3 = ItmPoGlAmt[i];
					}


					Decimal? value4 = null;
					if (ItmPoGlPct != null && i < ItmPoGlPct.Count)
					{
						value4 = ItmPoGlPct[i];
					}


					string value5 = "";
					if (ItmPoGlTaxCalcFlag != null && i < ItmPoGlTaxCalcFlag.Count)
					{
						value5 = ItmPoGlTaxCalcFlag[i];
					}


					Decimal? value6 = null;
					if (ItmPoGlRebateAmt != null && i < ItmPoGlRebateAmt.Count)
					{
						value6 = ItmPoGlRebateAmt[i];
					}


					Decimal? value7 = null;
					if (ItmPoGlRefundAmt != null && i < ItmPoGlRefundAmt.Count)
					{
						value7 = ItmPoGlRefundAmt[i];
					}


					string value8 = "";
					if (ItmPoProjectCfId != null && i < ItmPoProjectCfId.Count)
					{
						value8 = ItmPoProjectCfId[i];
					}


					string value9 = "";
					if (ItmPoPrjItemIds != null && i < ItmPoPrjItemIds.Count)
					{
						value9 = ItmPoPrjItemIds[i];
					}

					ItemPoEntityAssociation.Add(new ItemsItemPo( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9));
				}
			}
			// EntityAssociation Name: ITEM.PO.STATUS
			
			ItemPoStatusEntityAssociation = new List<ItemsItemPoStatus>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ItmPoStatus != null)
			{
				int numItemPoStatus = ItmPoStatus.Count;
				if (ItmPoStatusDate !=null && ItmPoStatusDate.Count > numItemPoStatus) numItemPoStatus = ItmPoStatusDate.Count;

				for (int i = 0; i < numItemPoStatus; i++)
				{

					string value0 = "";
					if (ItmPoStatus != null && i < ItmPoStatus.Count)
					{
						value0 = ItmPoStatus[i];
					}


					DateTime? value1 = null;
					if (ItmPoStatusDate != null && i < ItmPoStatusDate.Count)
					{
						value1 = ItmPoStatusDate[i];
					}

					ItemPoStatusEntityAssociation.Add(new ItemsItemPoStatus( value0, value1));
				}
			}
			// EntityAssociation Name: VOUCH.GL
			
			VouchGlEntityAssociation = new List<ItemsVouchGl>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ItmVouGlNo != null)
			{
				int numVouchGl = ItmVouGlNo.Count;
				if (ItmVouGlAmt !=null && ItmVouGlAmt.Count > numVouchGl) numVouchGl = ItmVouGlAmt.Count;
				if (ItmVouGlPct !=null && ItmVouGlPct.Count > numVouchGl) numVouchGl = ItmVouGlPct.Count;
				if (ItmVouGlTaxCalcFlag !=null && ItmVouGlTaxCalcFlag.Count > numVouchGl) numVouchGl = ItmVouGlTaxCalcFlag.Count;
				if (ItmVouGlRebateAmt !=null && ItmVouGlRebateAmt.Count > numVouchGl) numVouchGl = ItmVouGlRebateAmt.Count;
				if (ItmVouGlRefundAmt !=null && ItmVouGlRefundAmt.Count > numVouchGl) numVouchGl = ItmVouGlRefundAmt.Count;
				if (ItmVouGlForeignAmt !=null && ItmVouGlForeignAmt.Count > numVouchGl) numVouchGl = ItmVouGlForeignAmt.Count;
				if (ItmVouGlQty !=null && ItmVouGlQty.Count > numVouchGl) numVouchGl = ItmVouGlQty.Count;
				if (ItmVouProjectCfId !=null && ItmVouProjectCfId.Count > numVouchGl) numVouchGl = ItmVouProjectCfId.Count;
				if (ItmVouPrjItemIds !=null && ItmVouPrjItemIds.Count > numVouchGl) numVouchGl = ItmVouPrjItemIds.Count;

				for (int i = 0; i < numVouchGl; i++)
				{

					string value0 = "";
					if (ItmVouGlNo != null && i < ItmVouGlNo.Count)
					{
						value0 = ItmVouGlNo[i];
					}


					Decimal? value1 = null;
					if (ItmVouGlAmt != null && i < ItmVouGlAmt.Count)
					{
						value1 = ItmVouGlAmt[i];
					}


					Decimal? value2 = null;
					if (ItmVouGlPct != null && i < ItmVouGlPct.Count)
					{
						value2 = ItmVouGlPct[i];
					}


					string value3 = "";
					if (ItmVouGlTaxCalcFlag != null && i < ItmVouGlTaxCalcFlag.Count)
					{
						value3 = ItmVouGlTaxCalcFlag[i];
					}


					Decimal? value4 = null;
					if (ItmVouGlRebateAmt != null && i < ItmVouGlRebateAmt.Count)
					{
						value4 = ItmVouGlRebateAmt[i];
					}


					Decimal? value5 = null;
					if (ItmVouGlRefundAmt != null && i < ItmVouGlRefundAmt.Count)
					{
						value5 = ItmVouGlRefundAmt[i];
					}


					Decimal? value6 = null;
					if (ItmVouGlForeignAmt != null && i < ItmVouGlForeignAmt.Count)
					{
						value6 = ItmVouGlForeignAmt[i];
					}


					Decimal? value7 = null;
					if (ItmVouGlQty != null && i < ItmVouGlQty.Count)
					{
						value7 = ItmVouGlQty[i];
					}


					string value8 = "";
					if (ItmVouProjectCfId != null && i < ItmVouProjectCfId.Count)
					{
						value8 = ItmVouProjectCfId[i];
					}


					string value9 = "";
					if (ItmVouPrjItemIds != null && i < ItmVouPrjItemIds.Count)
					{
						value9 = ItmVouPrjItemIds[i];
					}

					VouchGlEntityAssociation.Add(new ItemsVouchGl( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9));
				}
			}
			// EntityAssociation Name: VOU.GL.TAXES
			
			VouGlTaxesEntityAssociation = new List<ItemsVouGlTaxes>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ItmVouLineGlNo != null)
			{
				int numVouGlTaxes = ItmVouLineGlNo.Count;
				if (ItmVouTaxGlNo !=null && ItmVouTaxGlNo.Count > numVouGlTaxes) numVouGlTaxes = ItmVouTaxGlNo.Count;
				if (ItmVouGlTaxCode !=null && ItmVouGlTaxCode.Count > numVouGlTaxes) numVouGlTaxes = ItmVouGlTaxCode.Count;
				if (ItmVouGlTaxAmt !=null && ItmVouGlTaxAmt.Count > numVouGlTaxes) numVouGlTaxes = ItmVouGlTaxAmt.Count;
				if (ItmVouGlAcctTaxCode !=null && ItmVouGlAcctTaxCode.Count > numVouGlTaxes) numVouGlTaxes = ItmVouGlAcctTaxCode.Count;
				if (ItmVouTaxAmtType !=null && ItmVouTaxAmtType.Count > numVouGlTaxes) numVouGlTaxes = ItmVouTaxAmtType.Count;
				if (ItmVouGlForeignTaxAmt !=null && ItmVouGlForeignTaxAmt.Count > numVouGlTaxes) numVouGlTaxes = ItmVouGlForeignTaxAmt.Count;
				if (ItmVouTaxProjectCfId !=null && ItmVouTaxProjectCfId.Count > numVouGlTaxes) numVouGlTaxes = ItmVouTaxProjectCfId.Count;
				if (ItmVouTaxPrjItemIds !=null && ItmVouTaxPrjItemIds.Count > numVouGlTaxes) numVouGlTaxes = ItmVouTaxPrjItemIds.Count;

				for (int i = 0; i < numVouGlTaxes; i++)
				{

					string value0 = "";
					if (ItmVouLineGlNo != null && i < ItmVouLineGlNo.Count)
					{
						value0 = ItmVouLineGlNo[i];
					}


					string value1 = "";
					if (ItmVouTaxGlNo != null && i < ItmVouTaxGlNo.Count)
					{
						value1 = ItmVouTaxGlNo[i];
					}


					string value2 = "";
					if (ItmVouGlTaxCode != null && i < ItmVouGlTaxCode.Count)
					{
						value2 = ItmVouGlTaxCode[i];
					}


					Decimal? value3 = null;
					if (ItmVouGlTaxAmt != null && i < ItmVouGlTaxAmt.Count)
					{
						value3 = ItmVouGlTaxAmt[i];
					}


					string value4 = "";
					if (ItmVouGlAcctTaxCode != null && i < ItmVouGlAcctTaxCode.Count)
					{
						value4 = ItmVouGlAcctTaxCode[i];
					}


					string value5 = "";
					if (ItmVouTaxAmtType != null && i < ItmVouTaxAmtType.Count)
					{
						value5 = ItmVouTaxAmtType[i];
					}


					Decimal? value6 = null;
					if (ItmVouGlForeignTaxAmt != null && i < ItmVouGlForeignTaxAmt.Count)
					{
						value6 = ItmVouGlForeignTaxAmt[i];
					}


					string value7 = "";
					if (ItmVouTaxProjectCfId != null && i < ItmVouTaxProjectCfId.Count)
					{
						value7 = ItmVouTaxProjectCfId[i];
					}


					string value8 = "";
					if (ItmVouTaxPrjItemIds != null && i < ItmVouTaxPrjItemIds.Count)
					{
						value8 = ItmVouTaxPrjItemIds[i];
					}

					VouGlTaxesEntityAssociation.Add(new ItemsVouGlTaxes( value0, value1, value2, value3, value4, value5, value6, value7, value8));
				}
			}
			// EntityAssociation Name: PO.GL.TAXES
			
			PoGlTaxesEntityAssociation = new List<ItemsPoGlTaxes>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ItmPoLineGlNo != null)
			{
				int numPoGlTaxes = ItmPoLineGlNo.Count;
				if (ItmPoTaxGlNo !=null && ItmPoTaxGlNo.Count > numPoGlTaxes) numPoGlTaxes = ItmPoTaxGlNo.Count;
				if (ItmPoGlTaxCode !=null && ItmPoGlTaxCode.Count > numPoGlTaxes) numPoGlTaxes = ItmPoGlTaxCode.Count;
				if (ItmPoGlTaxAmt !=null && ItmPoGlTaxAmt.Count > numPoGlTaxes) numPoGlTaxes = ItmPoGlTaxAmt.Count;
				if (ItmPoGlAcctTaxCode !=null && ItmPoGlAcctTaxCode.Count > numPoGlTaxes) numPoGlTaxes = ItmPoGlAcctTaxCode.Count;
				if (ItmPoTaxAmtType !=null && ItmPoTaxAmtType.Count > numPoGlTaxes) numPoGlTaxes = ItmPoTaxAmtType.Count;
				if (ItmPoGlForeignTaxAmt !=null && ItmPoGlForeignTaxAmt.Count > numPoGlTaxes) numPoGlTaxes = ItmPoGlForeignTaxAmt.Count;
				if (ItmPoTaxProjectCfId !=null && ItmPoTaxProjectCfId.Count > numPoGlTaxes) numPoGlTaxes = ItmPoTaxProjectCfId.Count;
				if (ItmPoTaxPrjItemIds !=null && ItmPoTaxPrjItemIds.Count > numPoGlTaxes) numPoGlTaxes = ItmPoTaxPrjItemIds.Count;

				for (int i = 0; i < numPoGlTaxes; i++)
				{

					string value0 = "";
					if (ItmPoLineGlNo != null && i < ItmPoLineGlNo.Count)
					{
						value0 = ItmPoLineGlNo[i];
					}


					string value1 = "";
					if (ItmPoTaxGlNo != null && i < ItmPoTaxGlNo.Count)
					{
						value1 = ItmPoTaxGlNo[i];
					}


					string value2 = "";
					if (ItmPoGlTaxCode != null && i < ItmPoGlTaxCode.Count)
					{
						value2 = ItmPoGlTaxCode[i];
					}


					Decimal? value3 = null;
					if (ItmPoGlTaxAmt != null && i < ItmPoGlTaxAmt.Count)
					{
						value3 = ItmPoGlTaxAmt[i];
					}


					string value4 = "";
					if (ItmPoGlAcctTaxCode != null && i < ItmPoGlAcctTaxCode.Count)
					{
						value4 = ItmPoGlAcctTaxCode[i];
					}


					string value5 = "";
					if (ItmPoTaxAmtType != null && i < ItmPoTaxAmtType.Count)
					{
						value5 = ItmPoTaxAmtType[i];
					}


					Decimal? value6 = null;
					if (ItmPoGlForeignTaxAmt != null && i < ItmPoGlForeignTaxAmt.Count)
					{
						value6 = ItmPoGlForeignTaxAmt[i];
					}


					string value7 = "";
					if (ItmPoTaxProjectCfId != null && i < ItmPoTaxProjectCfId.Count)
					{
						value7 = ItmPoTaxProjectCfId[i];
					}


					string value8 = "";
					if (ItmPoTaxPrjItemIds != null && i < ItmPoTaxPrjItemIds.Count)
					{
						value8 = ItmPoTaxPrjItemIds[i];
					}

					PoGlTaxesEntityAssociation.Add(new ItemsPoGlTaxes( value0, value1, value2, value3, value4, value5, value6, value7, value8));
				}
			}
			// EntityAssociation Name: REQ.GL.TAXES
			
			ReqGlTaxesEntityAssociation = new List<ItemsReqGlTaxes>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ItmReqLineGlNo != null)
			{
				int numReqGlTaxes = ItmReqLineGlNo.Count;
				if (ItmReqTaxGlNo !=null && ItmReqTaxGlNo.Count > numReqGlTaxes) numReqGlTaxes = ItmReqTaxGlNo.Count;
				if (ItmReqGlTaxCode !=null && ItmReqGlTaxCode.Count > numReqGlTaxes) numReqGlTaxes = ItmReqGlTaxCode.Count;
				if (ItmReqGlTaxAmt !=null && ItmReqGlTaxAmt.Count > numReqGlTaxes) numReqGlTaxes = ItmReqGlTaxAmt.Count;
				if (ItmReqGlAcctTaxCode !=null && ItmReqGlAcctTaxCode.Count > numReqGlTaxes) numReqGlTaxes = ItmReqGlAcctTaxCode.Count;
				if (ItmReqTaxAmtType !=null && ItmReqTaxAmtType.Count > numReqGlTaxes) numReqGlTaxes = ItmReqTaxAmtType.Count;
				if (ItmReqGlForeignTaxAmt !=null && ItmReqGlForeignTaxAmt.Count > numReqGlTaxes) numReqGlTaxes = ItmReqGlForeignTaxAmt.Count;
				if (ItmReqTaxProjectCfId !=null && ItmReqTaxProjectCfId.Count > numReqGlTaxes) numReqGlTaxes = ItmReqTaxProjectCfId.Count;
				if (ItmReqTaxPrjItemIds !=null && ItmReqTaxPrjItemIds.Count > numReqGlTaxes) numReqGlTaxes = ItmReqTaxPrjItemIds.Count;

				for (int i = 0; i < numReqGlTaxes; i++)
				{

					string value0 = "";
					if (ItmReqLineGlNo != null && i < ItmReqLineGlNo.Count)
					{
						value0 = ItmReqLineGlNo[i];
					}


					string value1 = "";
					if (ItmReqTaxGlNo != null && i < ItmReqTaxGlNo.Count)
					{
						value1 = ItmReqTaxGlNo[i];
					}


					string value2 = "";
					if (ItmReqGlTaxCode != null && i < ItmReqGlTaxCode.Count)
					{
						value2 = ItmReqGlTaxCode[i];
					}


					Decimal? value3 = null;
					if (ItmReqGlTaxAmt != null && i < ItmReqGlTaxAmt.Count)
					{
						value3 = ItmReqGlTaxAmt[i];
					}


					string value4 = "";
					if (ItmReqGlAcctTaxCode != null && i < ItmReqGlAcctTaxCode.Count)
					{
						value4 = ItmReqGlAcctTaxCode[i];
					}


					string value5 = "";
					if (ItmReqTaxAmtType != null && i < ItmReqTaxAmtType.Count)
					{
						value5 = ItmReqTaxAmtType[i];
					}


					Decimal? value6 = null;
					if (ItmReqGlForeignTaxAmt != null && i < ItmReqGlForeignTaxAmt.Count)
					{
						value6 = ItmReqGlForeignTaxAmt[i];
					}


					string value7 = "";
					if (ItmReqTaxProjectCfId != null && i < ItmReqTaxProjectCfId.Count)
					{
						value7 = ItmReqTaxProjectCfId[i];
					}


					string value8 = "";
					if (ItmReqTaxPrjItemIds != null && i < ItmReqTaxPrjItemIds.Count)
					{
						value8 = ItmReqTaxPrjItemIds[i];
					}

					ReqGlTaxesEntityAssociation.Add(new ItemsReqGlTaxes( value0, value1, value2, value3, value4, value5, value6, value7, value8));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class ItemsItemReq
	{
		public Decimal? ItmReqGlForeignAmtAssocMember;	
		public string ItmReqGlNoAssocMember;	
		public Decimal? ItmReqGlQtyAssocMember;	
		public Decimal? ItmReqGlAmtAssocMember;	
		public Decimal? ItmReqGlPctAssocMember;	
		public string ItmReqGlTaxCalcFlagAssocMember;	
		public Decimal? ItmReqGlRebateAmtAssocMember;	
		public Decimal? ItmReqGlRefundAmtAssocMember;	
		public string ItmReqProjectCfIdAssocMember;	
		public string ItmReqPrjItemIdsAssocMember;	
		public ItemsItemReq() {}
		public ItemsItemReq(
			Decimal? inItmReqGlForeignAmt,
			string inItmReqGlNo,
			Decimal? inItmReqGlQty,
			Decimal? inItmReqGlAmt,
			Decimal? inItmReqGlPct,
			string inItmReqGlTaxCalcFlag,
			Decimal? inItmReqGlRebateAmt,
			Decimal? inItmReqGlRefundAmt,
			string inItmReqProjectCfId,
			string inItmReqPrjItemIds)
		{
			ItmReqGlForeignAmtAssocMember = inItmReqGlForeignAmt;
			ItmReqGlNoAssocMember = inItmReqGlNo;
			ItmReqGlQtyAssocMember = inItmReqGlQty;
			ItmReqGlAmtAssocMember = inItmReqGlAmt;
			ItmReqGlPctAssocMember = inItmReqGlPct;
			ItmReqGlTaxCalcFlagAssocMember = inItmReqGlTaxCalcFlag;
			ItmReqGlRebateAmtAssocMember = inItmReqGlRebateAmt;
			ItmReqGlRefundAmtAssocMember = inItmReqGlRefundAmt;
			ItmReqProjectCfIdAssocMember = inItmReqProjectCfId;
			ItmReqPrjItemIdsAssocMember = inItmReqPrjItemIds;
		}
	}
	
	[Serializable]
	public class ItemsItemPo
	{
		public Decimal? ItmPoGlQtyAssocMember;	
		public Decimal? ItmPoGlForeignAmtAssocMember;	
		public string ItmPoGlNoAssocMember;	
		public Decimal? ItmPoGlAmtAssocMember;	
		public Decimal? ItmPoGlPctAssocMember;	
		public string ItmPoGlTaxCalcFlagAssocMember;	
		public Decimal? ItmPoGlRebateAmtAssocMember;	
		public Decimal? ItmPoGlRefundAmtAssocMember;	
		public string ItmPoProjectCfIdAssocMember;	
		public string ItmPoPrjItemIdsAssocMember;	
		public ItemsItemPo() {}
		public ItemsItemPo(
			Decimal? inItmPoGlQty,
			Decimal? inItmPoGlForeignAmt,
			string inItmPoGlNo,
			Decimal? inItmPoGlAmt,
			Decimal? inItmPoGlPct,
			string inItmPoGlTaxCalcFlag,
			Decimal? inItmPoGlRebateAmt,
			Decimal? inItmPoGlRefundAmt,
			string inItmPoProjectCfId,
			string inItmPoPrjItemIds)
		{
			ItmPoGlQtyAssocMember = inItmPoGlQty;
			ItmPoGlForeignAmtAssocMember = inItmPoGlForeignAmt;
			ItmPoGlNoAssocMember = inItmPoGlNo;
			ItmPoGlAmtAssocMember = inItmPoGlAmt;
			ItmPoGlPctAssocMember = inItmPoGlPct;
			ItmPoGlTaxCalcFlagAssocMember = inItmPoGlTaxCalcFlag;
			ItmPoGlRebateAmtAssocMember = inItmPoGlRebateAmt;
			ItmPoGlRefundAmtAssocMember = inItmPoGlRefundAmt;
			ItmPoProjectCfIdAssocMember = inItmPoProjectCfId;
			ItmPoPrjItemIdsAssocMember = inItmPoPrjItemIds;
		}
	}
	
	[Serializable]
	public class ItemsItemPoStatus
	{
		public string ItmPoStatusAssocMember;	
		public DateTime? ItmPoStatusDateAssocMember;	
		public ItemsItemPoStatus() {}
		public ItemsItemPoStatus(
			string inItmPoStatus,
			DateTime? inItmPoStatusDate)
		{
			ItmPoStatusAssocMember = inItmPoStatus;
			ItmPoStatusDateAssocMember = inItmPoStatusDate;
		}
	}
	
	[Serializable]
	public class ItemsVouchGl
	{
		public string ItmVouGlNoAssocMember;	
		public Decimal? ItmVouGlAmtAssocMember;	
		public Decimal? ItmVouGlPctAssocMember;	
		public string ItmVouGlTaxCalcFlagAssocMember;	
		public Decimal? ItmVouGlRebateAmtAssocMember;	
		public Decimal? ItmVouGlRefundAmtAssocMember;	
		public Decimal? ItmVouGlForeignAmtAssocMember;	
		public Decimal? ItmVouGlQtyAssocMember;	
		public string ItmVouProjectCfIdAssocMember;	
		public string ItmVouPrjItemIdsAssocMember;	
		public ItemsVouchGl() {}
		public ItemsVouchGl(
			string inItmVouGlNo,
			Decimal? inItmVouGlAmt,
			Decimal? inItmVouGlPct,
			string inItmVouGlTaxCalcFlag,
			Decimal? inItmVouGlRebateAmt,
			Decimal? inItmVouGlRefundAmt,
			Decimal? inItmVouGlForeignAmt,
			Decimal? inItmVouGlQty,
			string inItmVouProjectCfId,
			string inItmVouPrjItemIds)
		{
			ItmVouGlNoAssocMember = inItmVouGlNo;
			ItmVouGlAmtAssocMember = inItmVouGlAmt;
			ItmVouGlPctAssocMember = inItmVouGlPct;
			ItmVouGlTaxCalcFlagAssocMember = inItmVouGlTaxCalcFlag;
			ItmVouGlRebateAmtAssocMember = inItmVouGlRebateAmt;
			ItmVouGlRefundAmtAssocMember = inItmVouGlRefundAmt;
			ItmVouGlForeignAmtAssocMember = inItmVouGlForeignAmt;
			ItmVouGlQtyAssocMember = inItmVouGlQty;
			ItmVouProjectCfIdAssocMember = inItmVouProjectCfId;
			ItmVouPrjItemIdsAssocMember = inItmVouPrjItemIds;
		}
	}
	
	[Serializable]
	public class ItemsVouGlTaxes
	{
		public string ItmVouLineGlNoAssocMember;	
		public string ItmVouTaxGlNoAssocMember;	
		public string ItmVouGlTaxCodeAssocMember;	
		public Decimal? ItmVouGlTaxAmtAssocMember;	
		public string ItmVouGlAcctTaxCodeAssocMember;	
		public string ItmVouTaxAmtTypeAssocMember;	
		public Decimal? ItmVouGlForeignTaxAmtAssocMember;	
		public string ItmVouTaxProjectCfIdAssocMember;	
		public string ItmVouTaxPrjItemIdsAssocMember;	
		public ItemsVouGlTaxes() {}
		public ItemsVouGlTaxes(
			string inItmVouLineGlNo,
			string inItmVouTaxGlNo,
			string inItmVouGlTaxCode,
			Decimal? inItmVouGlTaxAmt,
			string inItmVouGlAcctTaxCode,
			string inItmVouTaxAmtType,
			Decimal? inItmVouGlForeignTaxAmt,
			string inItmVouTaxProjectCfId,
			string inItmVouTaxPrjItemIds)
		{
			ItmVouLineGlNoAssocMember = inItmVouLineGlNo;
			ItmVouTaxGlNoAssocMember = inItmVouTaxGlNo;
			ItmVouGlTaxCodeAssocMember = inItmVouGlTaxCode;
			ItmVouGlTaxAmtAssocMember = inItmVouGlTaxAmt;
			ItmVouGlAcctTaxCodeAssocMember = inItmVouGlAcctTaxCode;
			ItmVouTaxAmtTypeAssocMember = inItmVouTaxAmtType;
			ItmVouGlForeignTaxAmtAssocMember = inItmVouGlForeignTaxAmt;
			ItmVouTaxProjectCfIdAssocMember = inItmVouTaxProjectCfId;
			ItmVouTaxPrjItemIdsAssocMember = inItmVouTaxPrjItemIds;
		}
	}
	
	[Serializable]
	public class ItemsPoGlTaxes
	{
		public string ItmPoLineGlNoAssocMember;	
		public string ItmPoTaxGlNoAssocMember;	
		public string ItmPoGlTaxCodeAssocMember;	
		public Decimal? ItmPoGlTaxAmtAssocMember;	
		public string ItmPoGlAcctTaxCodeAssocMember;	
		public string ItmPoTaxAmtTypeAssocMember;	
		public Decimal? ItmPoGlForeignTaxAmtAssocMember;	
		public string ItmPoTaxProjectCfIdAssocMember;	
		public string ItmPoTaxPrjItemIdsAssocMember;	
		public ItemsPoGlTaxes() {}
		public ItemsPoGlTaxes(
			string inItmPoLineGlNo,
			string inItmPoTaxGlNo,
			string inItmPoGlTaxCode,
			Decimal? inItmPoGlTaxAmt,
			string inItmPoGlAcctTaxCode,
			string inItmPoTaxAmtType,
			Decimal? inItmPoGlForeignTaxAmt,
			string inItmPoTaxProjectCfId,
			string inItmPoTaxPrjItemIds)
		{
			ItmPoLineGlNoAssocMember = inItmPoLineGlNo;
			ItmPoTaxGlNoAssocMember = inItmPoTaxGlNo;
			ItmPoGlTaxCodeAssocMember = inItmPoGlTaxCode;
			ItmPoGlTaxAmtAssocMember = inItmPoGlTaxAmt;
			ItmPoGlAcctTaxCodeAssocMember = inItmPoGlAcctTaxCode;
			ItmPoTaxAmtTypeAssocMember = inItmPoTaxAmtType;
			ItmPoGlForeignTaxAmtAssocMember = inItmPoGlForeignTaxAmt;
			ItmPoTaxProjectCfIdAssocMember = inItmPoTaxProjectCfId;
			ItmPoTaxPrjItemIdsAssocMember = inItmPoTaxPrjItemIds;
		}
	}
	
	[Serializable]
	public class ItemsReqGlTaxes
	{
		public string ItmReqLineGlNoAssocMember;	
		public string ItmReqTaxGlNoAssocMember;	
		public string ItmReqGlTaxCodeAssocMember;	
		public Decimal? ItmReqGlTaxAmtAssocMember;	
		public string ItmReqGlAcctTaxCodeAssocMember;	
		public string ItmReqTaxAmtTypeAssocMember;	
		public Decimal? ItmReqGlForeignTaxAmtAssocMember;	
		public string ItmReqTaxProjectCfIdAssocMember;	
		public string ItmReqTaxPrjItemIdsAssocMember;	
		public ItemsReqGlTaxes() {}
		public ItemsReqGlTaxes(
			string inItmReqLineGlNo,
			string inItmReqTaxGlNo,
			string inItmReqGlTaxCode,
			Decimal? inItmReqGlTaxAmt,
			string inItmReqGlAcctTaxCode,
			string inItmReqTaxAmtType,
			Decimal? inItmReqGlForeignTaxAmt,
			string inItmReqTaxProjectCfId,
			string inItmReqTaxPrjItemIds)
		{
			ItmReqLineGlNoAssocMember = inItmReqLineGlNo;
			ItmReqTaxGlNoAssocMember = inItmReqTaxGlNo;
			ItmReqGlTaxCodeAssocMember = inItmReqGlTaxCode;
			ItmReqGlTaxAmtAssocMember = inItmReqGlTaxAmt;
			ItmReqGlAcctTaxCodeAssocMember = inItmReqGlAcctTaxCode;
			ItmReqTaxAmtTypeAssocMember = inItmReqTaxAmtType;
			ItmReqGlForeignTaxAmtAssocMember = inItmReqGlForeignTaxAmt;
			ItmReqTaxProjectCfIdAssocMember = inItmReqTaxProjectCfId;
			ItmReqTaxPrjItemIdsAssocMember = inItmReqTaxPrjItemIds;
		}
	}
}
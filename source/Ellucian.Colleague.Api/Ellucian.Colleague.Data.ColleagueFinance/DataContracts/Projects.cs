//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 1/11/2018 12:49:38 PM by user sbhole1
//
//     Type: ENTITY
//     Entity: PROJECTS
//     Application: CORE
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Projects")]
	[ColleagueDataContract(GeneratedDateTime = "1/11/2018 12:49:38 PM", User = "sbhole1")]
	[EntityDataContract(EntityName = "PROJECTS", EntityType = "PHYS")]
	public class Projects : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: PRJ.TITLE
		/// </summary>
		[DataMember(Order = 0, Name = "PRJ.TITLE")]
		public string PrjTitle { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.TYPE
		/// </summary>
		[DataMember(Order = 1, Name = "PRJ.TYPE")]
		public string PrjType { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.AGENCY.REF.NO
		/// </summary>
		[DataMember(Order = 2, Name = "PRJ.AGENCY.REF.NO")]
		public string PrjAgencyRefNo { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.START.DATE
		/// </summary>
		[DataMember(Order = 3, Name = "PRJ.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PrjStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.END.DATE
		/// </summary>
		[DataMember(Order = 4, Name = "PRJ.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PrjEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.CONTACT.ROLES
		/// </summary>
		[DataMember(Order = 5, Name = "PRJ.CONTACT.ROLES")]
		public List<string> PrjContactRoles { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.CONTACT.PERSON.IDS
		/// </summary>
		[DataMember(Order = 6, Name = "PRJ.CONTACT.PERSON.IDS")]
		public List<string> PrjContactPersonIds { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.REF.NO
		/// </summary>
		[DataMember(Order = 23, Name = "PRJ.REF.NO")]
		public string PrjRefNo { get; set; }
		
		/// <summary>
		/// CDD Name: PRJ.CURRENT.STATUS
		/// </summary>
		[DataMember(Order = 26, Name = "PRJ.CURRENT.STATUS")]
		public string PrjCurrentStatus { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ProjectsPrjContacts> PrjContactsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: PRJ.CONTACTS
			
			PrjContactsEntityAssociation = new List<ProjectsPrjContacts>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PrjContactRoles != null)
			{
				int numPrjContacts = PrjContactRoles.Count;
				if (PrjContactPersonIds !=null && PrjContactPersonIds.Count > numPrjContacts) numPrjContacts = PrjContactPersonIds.Count;

				for (int i = 0; i < numPrjContacts; i++)
				{

					string value0 = "";
					if (PrjContactRoles != null && i < PrjContactRoles.Count)
					{
						value0 = PrjContactRoles[i];
					}


					string value1 = "";
					if (PrjContactPersonIds != null && i < PrjContactPersonIds.Count)
					{
						value1 = PrjContactPersonIds[i];
					}

					PrjContactsEntityAssociation.Add(new ProjectsPrjContacts( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class ProjectsPrjContacts
	{
		public string PrjContactRolesAssocMember;	
		public string PrjContactPersonIdsAssocMember;	
		public ProjectsPrjContacts() {}
		public ProjectsPrjContacts(
			string inPrjContactRoles,
			string inPrjContactPersonIds)
		{
			PrjContactRolesAssocMember = inPrjContactRoles;
			PrjContactPersonIdsAssocMember = inPrjContactPersonIds;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 1/11/2018 11:35:58 AM by user sbhole1
//
//     Type: ENTITY
//     Entity: PROJECTS.CF
//     Application: CF
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "ProjectsCf")]
	[ColleagueDataContract(GeneratedDateTime = "1/11/2018 11:35:58 AM", User = "sbhole1")]
	[EntityDataContract(EntityName = "PROJECTS.CF", EntityType = "PHYS")]
	public class ProjectsCf : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: PRJCF.PERIOD.SEQ.NO
		/// </summary>
		[DataMember(Order = 0, Name = "PRJCF.PERIOD.SEQ.NO")]
		public List<string> PrjcfPeriodSeqNo { get; set; }
		
		/// <summary>
		/// CDD Name: PRJCF.PERIOD.START.DATES
		/// </summary>
		[DataMember(Order = 1, Name = "PRJCF.PERIOD.START.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PrjcfPeriodStartDates { get; set; }
		
		/// <summary>
		/// CDD Name: PRJCF.PERIOD.END.DATES
		/// </summary>
		[DataMember(Order = 2, Name = "PRJCF.PERIOD.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PrjcfPeriodEndDates { get; set; }
		
		/// <summary>
		/// CDD Name: PRJCF.LINE.ITEMS
		/// </summary>
		[DataMember(Order = 4, Name = "PRJCF.LINE.ITEMS")]
		public List<string> PrjcfLineItems { get; set; }
		
		/// <summary>
		/// CDD Name: PRJCF.FISCAL.YEARS
		/// </summary>
		[DataMember(Order = 37, Name = "PRJCF.FISCAL.YEARS")]
		public List<string> PrjcfFiscalYears { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ProjectsCfPrjcfPeriods> PrjcfPeriodsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: PRJCF.PERIODS
			
			PrjcfPeriodsEntityAssociation = new List<ProjectsCfPrjcfPeriods>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PrjcfPeriodEndDates != null)
			{
				int numPrjcfPeriods = PrjcfPeriodEndDates.Count;
				if (PrjcfPeriodSeqNo !=null && PrjcfPeriodSeqNo.Count > numPrjcfPeriods) numPrjcfPeriods = PrjcfPeriodSeqNo.Count;
				if (PrjcfPeriodStartDates !=null && PrjcfPeriodStartDates.Count > numPrjcfPeriods) numPrjcfPeriods = PrjcfPeriodStartDates.Count;

				for (int i = 0; i < numPrjcfPeriods; i++)
				{

					string value0 = "";
					if (PrjcfPeriodSeqNo != null && i < PrjcfPeriodSeqNo.Count)
					{
						value0 = PrjcfPeriodSeqNo[i];
					}


					DateTime? value1 = null;
					if (PrjcfPeriodStartDates != null && i < PrjcfPeriodStartDates.Count)
					{
						value1 = PrjcfPeriodStartDates[i];
					}


					DateTime? value2 = null;
					if (PrjcfPeriodEndDates != null && i < PrjcfPeriodEndDates.Count)
					{
						value2 = PrjcfPeriodEndDates[i];
					}

					PrjcfPeriodsEntityAssociation.Add(new ProjectsCfPrjcfPeriods( value0, value1, value2));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class ProjectsCfPrjcfPeriods
	{
		public string PrjcfPeriodSeqNoAssocMember;	
		public DateTime? PrjcfPeriodStartDatesAssocMember;	
		public DateTime? PrjcfPeriodEndDatesAssocMember;	
		public ProjectsCfPrjcfPeriods() {}
		public ProjectsCfPrjcfPeriods(
			string inPrjcfPeriodSeqNo,
			DateTime? inPrjcfPeriodStartDates,
			DateTime? inPrjcfPeriodEndDates)
		{
			PrjcfPeriodSeqNoAssocMember = inPrjcfPeriodSeqNo;
			PrjcfPeriodStartDatesAssocMember = inPrjcfPeriodStartDates;
			PrjcfPeriodEndDatesAssocMember = inPrjcfPeriodEndDates;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 1/31/2018 8:56:17 AM by user bsf1
//
//     Type: ENTITY
//     Entity: PURCHASE.ORDERS
//     Application: CF
//     Environment: dvcoll
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "PurchaseOrders")]
	[ColleagueDataContract(GeneratedDateTime = "1/31/2018 8:56:17 AM", User = "bsf1")]
	[EntityDataContract(EntityName = "PURCHASE.ORDERS", EntityType = "PHYS")]
	public class PurchaseOrders : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: PO.DATE
		/// </summary>
		[DataMember(Order = 0, Name = "PO.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PoDate { get; set; }
		
		/// <summary>
		/// CDD Name: PO.VENDOR
		/// </summary>
		[DataMember(Order = 2, Name = "PO.VENDOR")]
		public string PoVendor { get; set; }
		
		/// <summary>
		/// CDD Name: PO.AP.TYPE
		/// </summary>
		[DataMember(Order = 3, Name = "PO.AP.TYPE")]
		public string PoApType { get; set; }
		
		/// <summary>
		/// CDD Name: PO.FOB
		/// </summary>
		[DataMember(Order = 5, Name = "PO.FOB")]
		public string PoFob { get; set; }
		
		/// <summary>
		/// CDD Name: PO.REQ.IDS
		/// </summary>
		[DataMember(Order = 6, Name = "PO.REQ.IDS")]
		public List<string> PoReqIds { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ITEMS.ID
		/// </summary>
		[DataMember(Order = 7, Name = "PO.ITEMS.ID")]
		public List<string> PoItemsId { get; set; }
		
		/// <summary>
		/// CDD Name: PO.STATUS.DATE
		/// </summary>
		[DataMember(Order = 12, Name = "PO.STATUS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PoStatusDate { get; set; }
		
		/// <summary>
		/// CDD Name: PO.AUTHORIZATION.DATES
		/// </summary>
		[DataMember(Order = 13, Name = "PO.AUTHORIZATION.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PoAuthorizationDates { get; set; }
		
		/// <summary>
		/// CDD Name: PO.VENDOR.TERMS
		/// </summary>
		[DataMember(Order = 16, Name = "PO.VENDOR.TERMS")]
		public string PoVendorTerms { get; set; }
		
		/// <summary>
		/// CDD Name: PO.CURRENCY.CODE
		/// </summary>
		[DataMember(Order = 21, Name = "PO.CURRENCY.CODE")]
		public string PoCurrencyCode { get; set; }
		
		/// <summary>
		/// CDD Name: PO.TOTAL.AMT
		/// </summary>
		[DataMember(Order = 22, Name = "PO.TOTAL.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? PoTotalAmt { get; set; }
		
		/// <summary>
		/// CDD Name: PO.DEFAULT.INITIATOR
		/// </summary>
		[DataMember(Order = 23, Name = "PO.DEFAULT.INITIATOR")]
		public string PoDefaultInitiator { get; set; }
		
		/// <summary>
		/// CDD Name: PO.VOID.GL.TRAN.DATE
		/// </summary>
		[DataMember(Order = 25, Name = "PO.VOID.GL.TRAN.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PoVoidGlTranDate { get; set; }
		
		/// <summary>
		/// CDD Name: PO.STATUS
		/// </summary>
		[DataMember(Order = 29, Name = "PO.STATUS")]
		public List<string> PoStatus { get; set; }
		
		/// <summary>
		/// CDD Name: PO.VOU.IDS
		/// </summary>
		[DataMember(Order = 30, Name = "PO.VOU.IDS")]
		public List<string> PoVouIds { get; set; }
		
		/// <summary>
		/// CDD Name: PO.MISC.NAME
		/// </summary>
		[DataMember(Order = 31, Name = "PO.MISC.NAME")]
		public List<string> PoMiscName { get; set; }
		
		/// <summary>
		/// CDD Name: PO.MISC.ADDRESS
		/// </summary>
		[DataMember(Order = 32, Name = "PO.MISC.ADDRESS")]
		public List<string> PoMiscAddress { get; set; }
		
		/// <summary>
		/// CDD Name: PO.MISC.CITY
		/// </summary>
		[DataMember(Order = 34, Name = "PO.MISC.CITY")]
		public string PoMiscCity { get; set; }
		
		/// <summary>
		/// CDD Name: PO.MISC.STATE
		/// </summary>
		[DataMember(Order = 35, Name = "PO.MISC.STATE")]
		public string PoMiscState { get; set; }
		
		/// <summary>
		/// CDD Name: PO.MISC.ZIP
		/// </summary>
		[DataMember(Order = 36, Name = "PO.MISC.ZIP")]
		public string PoMiscZip { get; set; }
		
		/// <summary>
		/// CDD Name: PO.MISC.COUNTRY
		/// </summary>
		[DataMember(Order = 37, Name = "PO.MISC.COUNTRY")]
		public string PoMiscCountry { get; set; }
		
		/// <summary>
		/// CDD Name: PO.EXPECTED.DELIVERY.DATE
		/// </summary>
		[DataMember(Order = 38, Name = "PO.EXPECTED.DELIVERY.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PoExpectedDeliveryDate { get; set; }
		
		/// <summary>
		/// CDD Name: PO.COMMENTS
		/// </summary>
		[DataMember(Order = 39, Name = "PO.COMMENTS")]
		public string PoComments { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.SHIP.NAME
		/// </summary>
		[DataMember(Order = 40, Name = "PO.ALT.SHIP.NAME")]
		public string PoAltShipName { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.SHIP.ADDRESS
		/// </summary>
		[DataMember(Order = 41, Name = "PO.ALT.SHIP.ADDRESS")]
		public List<string> PoAltShipAddress { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.SHIP.CITY
		/// </summary>
		[DataMember(Order = 42, Name = "PO.ALT.SHIP.CITY")]
		public string PoAltShipCity { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.SHIP.STATE
		/// </summary>
		[DataMember(Order = 43, Name = "PO.ALT.SHIP.STATE")]
		public string PoAltShipState { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.SHIP.ZIP
		/// </summary>
		[DataMember(Order = 44, Name = "PO.ALT.SHIP.ZIP")]
		public string PoAltShipZip { get; set; }
		
		/// <summary>
		/// CDD Name: PO.AUTHORIZATIONS
		/// </summary>
		[DataMember(Order = 45, Name = "PO.AUTHORIZATIONS")]
		public List<string> PoAuthorizations { get; set; }
		
		/// <summary>
		/// CDD Name: PO.PRINTED.COMMENTS
		/// </summary>
		[DataMember(Order = 46, Name = "PO.PRINTED.COMMENTS")]
		public string PoPrintedComments { get; set; }
		
		/// <summary>
		/// CDD Name: PO.REFERENCE.NO
		/// </summary>
		[DataMember(Order = 47, Name = "PO.REFERENCE.NO")]
		public List<string> PoReferenceNo { get; set; }
		
		/// <summary>
		/// CDD Name: PO.SHIP.TO
		/// </summary>
		[DataMember(Order = 51, Name = "PO.SHIP.TO")]
		public string PoShipTo { get; set; }
		
		/// <summary>
		/// CDD Name: PO.BUYER
		/// </summary>
		[DataMember(Order = 52, Name = "PO.BUYER")]
		public string PoBuyer { get; set; }
		
		/// <summary>
		/// CDD Name: PO.MAINT.GL.TRAN.DATE
		/// </summary>
		[DataMember(Order = 56, Name = "PO.MAINT.GL.TRAN.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PoMaintGlTranDate { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.FLAG
		/// </summary>
		[DataMember(Order = 57, Name = "PO.ALT.FLAG")]
		public string PoAltFlag { get; set; }
		
		/// <summary>
		/// CDD Name: PO.NEXT.APPROVAL.IDS
		/// </summary>
		[DataMember(Order = 68, Name = "PO.NEXT.APPROVAL.IDS")]
		public List<string> PoNextApprovalIds { get; set; }
		
		/// <summary>
		/// CDD Name: PO.OUTSTANDING.ITEMS.ID
		/// </summary>
		[DataMember(Order = 73, Name = "PO.OUTSTANDING.ITEMS.ID")]
		public List<string> PoOutstandingItemsId { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ACCEPTED.ITEMS.ID
		/// </summary>
		[DataMember(Order = 74, Name = "PO.ACCEPTED.ITEMS.ID")]
		public List<string> PoAcceptedItemsId { get; set; }
		
		/// <summary>
		/// CDD Name: PO.NO
		/// </summary>
		[DataMember(Order = 78, Name = "PO.NO")]
		public string PoNo { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.SHIP.PHONE
		/// </summary>
		[DataMember(Order = 79, Name = "PO.ALT.SHIP.PHONE")]
		public string PoAltShipPhone { get; set; }
		
		/// <summary>
		/// CDD Name: PO.ALT.SHIP.EXT
		/// </summary>
		[DataMember(Order = 80, Name = "PO.ALT.SHIP.EXT")]
		public string PoAltShipExt { get; set; }
		
		/// <summary>
		/// CDD Name: PO.APPROVAL.LEVELS
		/// </summary>
		[DataMember(Order = 82, Name = "PO.APPROVAL.LEVELS")]
		public List<string> PoApprovalLevels { get; set; }
		
		/// <summary>
		/// CDD Name: PO.AUTHORIZATION.LEVELS
		/// </summary>
		[DataMember(Order = 83, Name = "PO.AUTHORIZATION.LEVELS")]
		public List<string> PoAuthorizationLevels { get; set; }
		
		/// <summary>
		/// CDD Name: PO.REQUESTOR
		/// </summary>
		[DataMember(Order = 87, Name = "PO.REQUESTOR")]
		public string PoRequestor { get; set; }
		
		/// <summary>
		/// CDD Name: PO.INTG.ALT.SHIP.COUNTRY
		/// </summary>
		[DataMember(Order = 90, Name = "PO.INTG.ALT.SHIP.COUNTRY")]
		public string PoIntgAltShipCountry { get; set; }
		
		/// <summary>
		/// CDD Name: PO.INTG.TYPE
		/// </summary>
		[DataMember(Order = 91, Name = "PO.INTG.TYPE")]
		public string PoIntgType { get; set; }
		
		/// <summary>
		/// CDD Name: PO.INTG.SUBMITTED.BY
		/// </summary>
		[DataMember(Order = 92, Name = "PO.INTG.SUBMITTED.BY")]
		public string PoIntgSubmittedBy { get; set; }
		
		/// <summary>
		/// CDD Name: PO.INTG.CORP.PERSON.INDICATO
		/// </summary>
		[DataMember(Order = 93, Name = "PO.INTG.CORP.PERSON.INDICATO")]
		public string PoIntgCorpPersonIndicato { get; set; }
		
		/// <summary>
		/// CDD Name: PO.INTG.ADDRESS.ID
		/// </summary>
		[DataMember(Order = 94, Name = "PO.INTG.ADDRESS.ID")]
		public string PoIntgAddressId { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PurchaseOrdersPoStat> PoStatEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PurchaseOrdersPoAuth> PoAuthEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PurchaseOrdersPoAppr> PoApprEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: PO.STAT
			
			PoStatEntityAssociation = new List<PurchaseOrdersPoStat>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PoStatus != null)
			{
				int numPoStat = PoStatus.Count;
				if (PoStatusDate !=null && PoStatusDate.Count > numPoStat) numPoStat = PoStatusDate.Count;

				for (int i = 0; i < numPoStat; i++)
				{

					DateTime? value0 = null;
					if (PoStatusDate != null && i < PoStatusDate.Count)
					{
						value0 = PoStatusDate[i];
					}


					string value1 = "";
					if (PoStatus != null && i < PoStatus.Count)
					{
						value1 = PoStatus[i];
					}

					PoStatEntityAssociation.Add(new PurchaseOrdersPoStat( value0, value1));
				}
			}
			// EntityAssociation Name: PO.AUTH
			
			PoAuthEntityAssociation = new List<PurchaseOrdersPoAuth>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PoAuthorizations != null)
			{
				int numPoAuth = PoAuthorizations.Count;
				if (PoAuthorizationDates !=null && PoAuthorizationDates.Count > numPoAuth) numPoAuth = PoAuthorizationDates.Count;

				for (int i = 0; i < numPoAuth; i++)
				{

					DateTime? value0 = null;
					if (PoAuthorizationDates != null && i < PoAuthorizationDates.Count)
					{
						value0 = PoAuthorizationDates[i];
					}


					string value1 = "";
					if (PoAuthorizations != null && i < PoAuthorizations.Count)
					{
						value1 = PoAuthorizations[i];
					}

					PoAuthEntityAssociation.Add(new PurchaseOrdersPoAuth( value0, value1));
				}
			}
			// EntityAssociation Name: PO.APPR
			
			PoApprEntityAssociation = new List<PurchaseOrdersPoAppr>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PoNextApprovalIds != null)
			{
				int numPoAppr = PoNextApprovalIds.Count;
				if (PoApprovalLevels !=null && PoApprovalLevels.Count > numPoAppr) numPoAppr = PoApprovalLevels.Count;
				if (PoAuthorizationLevels !=null && PoAuthorizationLevels.Count > numPoAppr) numPoAppr = PoAuthorizationLevels.Count;

				for (int i = 0; i < numPoAppr; i++)
				{

					string value0 = "";
					if (PoNextApprovalIds != null && i < PoNextApprovalIds.Count)
					{
						value0 = PoNextApprovalIds[i];
					}


					string value1 = "";
					if (PoApprovalLevels != null && i < PoApprovalLevels.Count)
					{
						value1 = PoApprovalLevels[i];
					}


					string value2 = "";
					if (PoAuthorizationLevels != null && i < PoAuthorizationLevels.Count)
					{
						value2 = PoAuthorizationLevels[i];
					}

					PoApprEntityAssociation.Add(new PurchaseOrdersPoAppr( value0, value1, value2));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class PurchaseOrdersPoStat
	{
		public DateTime? PoStatusDateAssocMember;	
		public string PoStatusAssocMember;	
		public PurchaseOrdersPoStat() {}
		public PurchaseOrdersPoStat(
			DateTime? inPoStatusDate,
			string inPoStatus)
		{
			PoStatusDateAssocMember = inPoStatusDate;
			PoStatusAssocMember = inPoStatus;
		}
	}
	
	[Serializable]
	public class PurchaseOrdersPoAuth
	{
		public DateTime? PoAuthorizationDatesAssocMember;	
		public string PoAuthorizationsAssocMember;	
		public PurchaseOrdersPoAuth() {}
		public PurchaseOrdersPoAuth(
			DateTime? inPoAuthorizationDates,
			string inPoAuthorizations)
		{
			PoAuthorizationDatesAssocMember = inPoAuthorizationDates;
			PoAuthorizationsAssocMember = inPoAuthorizations;
		}
	}
	
	[Serializable]
	public class PurchaseOrdersPoAppr
	{
		public string PoNextApprovalIdsAssocMember;	
		public string PoApprovalLevelsAssocMember;	
		public string PoAuthorizationLevelsAssocMember;	
		public PurchaseOrdersPoAppr() {}
		public PurchaseOrdersPoAppr(
			string inPoNextApprovalIds,
			string inPoApprovalLevels,
			string inPoAuthorizationLevels)
		{
			PoNextApprovalIdsAssocMember = inPoNextApprovalIds;
			PoApprovalLevelsAssocMember = inPoApprovalLevels;
			PoAuthorizationLevelsAssocMember = inPoAuthorizationLevels;
		}
	}
}
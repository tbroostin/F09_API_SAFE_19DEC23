//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 7/26/2018 3:18:00 PM by user favas_mk
//
//     Type: ENTITY
//     Entity: TAX.1099MI.DETAIL.REPOS
//     Application: CF
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Tax1099miDetailRepos")]
	[ColleagueDataContract(GeneratedDateTime = "7/26/2018 3:18:00 PM", User = "favas_mk")]
	[EntityDataContract(EntityName = "TAX.1099MI.DETAIL.REPOS", EntityType = "PHYS")]
	public class Tax1099miDetailRepos : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: TMIDTLR.REPOS.ID
		/// </summary>
		[DataMember(Order = 0, Name = "TMIDTLR.REPOS.ID")]
		public string TmidtlrReposId { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.STATE.REPOS.ID
		/// </summary>
		[DataMember(Order = 1, Name = "TMIDTLR.STATE.REPOS.ID")]
		public string TmidtlrStateReposId { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.VENDOR.ID
		/// </summary>
		[DataMember(Order = 2, Name = "TMIDTLR.VENDOR.ID")]
		public string TmidtlrVendorId { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.EIN
		/// </summary>
		[DataMember(Order = 3, Name = "TMIDTLR.EIN")]
		public string TmidtlrEin { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.STATE.ID
		/// </summary>
		[DataMember(Order = 4, Name = "TMIDTLR.STATE.ID")]
		public string TmidtlrStateId { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.REF.ID
		/// </summary>
		[DataMember(Order = 5, Name = "TMIDTLR.REF.ID")]
		public string TmidtlrRefId { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.STATUS
		/// </summary>
		[DataMember(Order = 6, Name = "TMIDTLR.STATUS")]
		public string TmidtlrStatus { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.BOX.NUMBER
		/// </summary>
		[DataMember(Order = 7, Name = "TMIDTLR.BOX.NUMBER")]
		public List<string> TmidtlrBoxNumber { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.AMT
		/// </summary>
		[DataMember(Order = 8, Name = "TMIDTLR.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> TmidtlrAmt { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.QUALIFIED.FLAG
		/// </summary>
		[DataMember(Order = 9, Name = "TMIDTLR.QUALIFIED.FLAG")]
		public string TmidtlrQualifiedFlag { get; set; }
		
		/// <summary>
		/// CDD Name: TMIDTLR.YEAR
		/// </summary>
		[DataMember(Order = 10, Name = "TMIDTLR.YEAR")]
		public string TmidtlrYear { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<Tax1099miDetailReposTmidtlrBoxInfo> TmidtlrBoxInfoEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: TMIDTLR.BOX.INFO
			
			TmidtlrBoxInfoEntityAssociation = new List<Tax1099miDetailReposTmidtlrBoxInfo>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(TmidtlrBoxNumber != null)
			{
				int numTmidtlrBoxInfo = TmidtlrBoxNumber.Count;
				if (TmidtlrAmt !=null && TmidtlrAmt.Count > numTmidtlrBoxInfo) numTmidtlrBoxInfo = TmidtlrAmt.Count;

				for (int i = 0; i < numTmidtlrBoxInfo; i++)
				{

					string value0 = "";
					if (TmidtlrBoxNumber != null && i < TmidtlrBoxNumber.Count)
					{
						value0 = TmidtlrBoxNumber[i];
					}


					Decimal? value1 = null;
					if (TmidtlrAmt != null && i < TmidtlrAmt.Count)
					{
						value1 = TmidtlrAmt[i];
					}

					TmidtlrBoxInfoEntityAssociation.Add(new Tax1099miDetailReposTmidtlrBoxInfo( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class Tax1099miDetailReposTmidtlrBoxInfo
	{
		public string TmidtlrBoxNumberAssocMember;	
		public Decimal? TmidtlrAmtAssocMember;	
		public Tax1099miDetailReposTmidtlrBoxInfo() {}
		public Tax1099miDetailReposTmidtlrBoxInfo(
			string inTmidtlrBoxNumber,
			Decimal? inTmidtlrAmt)
		{
			TmidtlrBoxNumberAssocMember = inTmidtlrBoxNumber;
			TmidtlrAmtAssocMember = inTmidtlrAmt;
		}
	}
}
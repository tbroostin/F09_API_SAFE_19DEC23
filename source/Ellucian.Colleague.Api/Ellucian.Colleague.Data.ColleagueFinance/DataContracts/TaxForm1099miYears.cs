//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 7/30/2018 7:13:17 AM by user favas_mk
//
//     Type: ENTITY
//     Entity: TAX.FORM.1099MI.YEARS
//     Application: CF
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Base.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "TaxForm1099miYears")]
	[ColleagueDataContract(GeneratedDateTime = "7/30/2018 7:13:17 AM", User = "favas_mk")]
	[EntityDataContract(EntityName = "TAX.FORM.1099MI.YEARS", EntityType = "PHYS")]
	public class TaxForm1099miYears : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: TFMY.WEB.ENABLED
		/// </summary>
		[DataMember(Order = 2, Name = "TFMY.WEB.ENABLED")]
		public string TfmyWebEnabled { get; set; }
		
		/// <summary>
		/// CDD Name: TFMY.SUBMIT.SEQ.NOS
		/// </summary>
		[DataMember(Order = 4, Name = "TFMY.SUBMIT.SEQ.NOS")]
		public List<string> TfmySubmitSeqNos { get; set; }
		
		/// <summary>
		/// CDD Name: TFMY.SUBMIT.DATES
		/// </summary>
		[DataMember(Order = 5, Name = "TFMY.SUBMIT.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> TfmySubmitDates { get; set; }
		
		/// <summary>
		/// CDD Name: TFMY.SUBMIT.TITLES
		/// </summary>
		[DataMember(Order = 6, Name = "TFMY.SUBMIT.TITLES")]
		public List<string> TfmySubmitTitles { get; set; }
		
		/// <summary>
		/// CDD Name: TFMY.SUBMIT.TIMES
		/// </summary>
		[DataMember(Order = 7, Name = "TFMY.SUBMIT.TIMES")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> TfmySubmitTimes { get; set; }
		
		/// <summary>
		/// CDD Name: TFMY.SUBMIT.OPERS
		/// </summary>
		[DataMember(Order = 8, Name = "TFMY.SUBMIT.OPERS")]
		public List<string> TfmySubmitOpers { get; set; }
		
		/// <summary>
		/// CDD Name: TFMY.MASK.SSN
		/// </summary>
		[DataMember(Order = 10, Name = "TFMY.MASK.SSN")]
		public string TfmyMaskSsn { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<TaxForm1099miYearsTfmySubmitted> TfmySubmittedEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: TFMY.SUBMITTED
			
			TfmySubmittedEntityAssociation = new List<TaxForm1099miYearsTfmySubmitted>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(TfmySubmitSeqNos != null)
			{
				int numTfmySubmitted = TfmySubmitSeqNos.Count;
				if (TfmySubmitDates !=null && TfmySubmitDates.Count > numTfmySubmitted) numTfmySubmitted = TfmySubmitDates.Count;
				if (TfmySubmitTitles !=null && TfmySubmitTitles.Count > numTfmySubmitted) numTfmySubmitted = TfmySubmitTitles.Count;
				if (TfmySubmitTimes !=null && TfmySubmitTimes.Count > numTfmySubmitted) numTfmySubmitted = TfmySubmitTimes.Count;
				if (TfmySubmitOpers !=null && TfmySubmitOpers.Count > numTfmySubmitted) numTfmySubmitted = TfmySubmitOpers.Count;

				for (int i = 0; i < numTfmySubmitted; i++)
				{

					string value0 = "";
					if (TfmySubmitSeqNos != null && i < TfmySubmitSeqNos.Count)
					{
						value0 = TfmySubmitSeqNos[i];
					}


					DateTime? value1 = null;
					if (TfmySubmitDates != null && i < TfmySubmitDates.Count)
					{
						value1 = TfmySubmitDates[i];
					}


					string value2 = "";
					if (TfmySubmitTitles != null && i < TfmySubmitTitles.Count)
					{
						value2 = TfmySubmitTitles[i];
					}


					DateTime? value3 = null;
					if (TfmySubmitTimes != null && i < TfmySubmitTimes.Count)
					{
						value3 = TfmySubmitTimes[i];
					}


					string value4 = "";
					if (TfmySubmitOpers != null && i < TfmySubmitOpers.Count)
					{
						value4 = TfmySubmitOpers[i];
					}

					TfmySubmittedEntityAssociation.Add(new TaxForm1099miYearsTfmySubmitted( value0, value1, value2, value3, value4));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class TaxForm1099miYearsTfmySubmitted
	{
		public string TfmySubmitSeqNosAssocMember;	
		public DateTime? TfmySubmitDatesAssocMember;	
		public string TfmySubmitTitlesAssocMember;	
		public DateTime? TfmySubmitTimesAssocMember;	
		public string TfmySubmitOpersAssocMember;	
		public TaxForm1099miYearsTfmySubmitted() {}
		public TaxForm1099miYearsTfmySubmitted(
			string inTfmySubmitSeqNos,
			DateTime? inTfmySubmitDates,
			string inTfmySubmitTitles,
			DateTime? inTfmySubmitTimes,
			string inTfmySubmitOpers)
		{
			TfmySubmitSeqNosAssocMember = inTfmySubmitSeqNos;
			TfmySubmitDatesAssocMember = inTfmySubmitDates;
			TfmySubmitTitlesAssocMember = inTfmySubmitTitles;
			TfmySubmitTimesAssocMember = inTfmySubmitTimes;
			TfmySubmitOpersAssocMember = inTfmySubmitOpers;
		}
	}
}
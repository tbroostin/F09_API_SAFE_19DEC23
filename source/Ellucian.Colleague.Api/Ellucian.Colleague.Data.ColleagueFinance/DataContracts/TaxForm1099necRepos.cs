//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/11/2021 11:09:21 AM by user namrathak
//
//     Type: ENTITY
//     Entity: TAX.FORM.1099NEC.REPOS
//     Application: CF
//     Environment: DV_COLL
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "TaxForm1099necRepos")]
	[ColleagueDataContract(GeneratedDateTime = "10/11/2021 11:09:21 AM", User = "namrathak")]
	[EntityDataContract(EntityName = "TAX.FORM.1099NEC.REPOS", EntityType = "PHYS")]
	public class TaxForm1099necRepos : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: TFNER.EIN
		/// </summary>
		[DataMember(Order = 4, Name = "TFNER.EIN")]
		public string TfnerEin { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.TIN
		/// </summary>
		[DataMember(Order = 6, Name = "TFNER.TIN")]
		public string TfnerTin { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.DIRECT.RESALE
		/// </summary>
		[DataMember(Order = 9, Name = "TFNER.DIRECT.RESALE")]
		public string TfnerDirectResale { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.NAME
		/// </summary>
		[DataMember(Order = 11, Name = "TFNER.NAME")]
		public string TfnerName { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.SECOND.NAME
		/// </summary>
		[DataMember(Order = 12, Name = "TFNER.SECOND.NAME")]
		public string TfnerSecondName { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.ADDRESS
		/// </summary>
		[DataMember(Order = 13, Name = "TFNER.ADDRESS")]
		public string TfnerAddress { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.ADDRESS.LINE1
		/// </summary>
		[DataMember(Order = 14, Name = "TFNER.ADDRESS.LINE1")]
		public string TfnerAddressLine1 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.ADDRESS.LINE2
		/// </summary>
		[DataMember(Order = 15, Name = "TFNER.ADDRESS.LINE2")]
		public string TfnerAddressLine2 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.ADDRESS.LINE3
		/// </summary>
		[DataMember(Order = 16, Name = "TFNER.ADDRESS.LINE3")]
		public string TfnerAddressLine3 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CITY
		/// </summary>
		[DataMember(Order = 17, Name = "TFNER.CITY")]
		public string TfnerCity { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.STATE
		/// </summary>
		[DataMember(Order = 18, Name = "TFNER.STATE")]
		public string TfnerState { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.ZIP
		/// </summary>
		[DataMember(Order = 19, Name = "TFNER.ZIP")]
		public string TfnerZip { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.FOREIGN.ADDR
		/// </summary>
		[DataMember(Order = 20, Name = "TFNER.FOREIGN.ADDR")]
		public string TfnerForeignAddr { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.FOREIGN.ADDR.LINE1
		/// </summary>
		[DataMember(Order = 21, Name = "TFNER.FOREIGN.ADDR.LINE1")]
		public string TfnerForeignAddrLine1 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.FOREIGN.ADDR.LINE2
		/// </summary>
		[DataMember(Order = 22, Name = "TFNER.FOREIGN.ADDR.LINE2")]
		public string TfnerForeignAddrLine2 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.TIN.TYPE
		/// </summary>
		[DataMember(Order = 24, Name = "TFNER.CERTIFY.TIN.TYPE")]
		public List<string> TfnerCertifyTinType { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.TIN
		/// </summary>
		[DataMember(Order = 25, Name = "TFNER.CERTIFY.TIN")]
		public List<string> TfnerCertifyTin { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.SECOND.NOTICE
		/// </summary>
		[DataMember(Order = 26, Name = "TFNER.CERTIFY.SECOND.NOTICE")]
		public List<string> TfnerCertifySecondNotice { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.DIRECT.RESALE
		/// </summary>
		[DataMember(Order = 27, Name = "TFNER.CERTIFY.DIRECT.RESALE")]
		public List<string> TfnerCertifyDirectResale { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.NAME.CONTROL
		/// </summary>
		[DataMember(Order = 28, Name = "TFNER.CERTIFY.NAME.CONTROL")]
		public List<string> TfnerCertifyNameControl { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.NAME
		/// </summary>
		[DataMember(Order = 29, Name = "TFNER.CERTIFY.NAME")]
		public List<string> TfnerCertifyName { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.SECOND.NAME
		/// </summary>
		[DataMember(Order = 30, Name = "TFNER.CERTIFY.SECOND.NAME")]
		public List<string> TfnerCertifySecondName { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.ADDRESS
		/// </summary>
		[DataMember(Order = 31, Name = "TFNER.CERTIFY.ADDRESS")]
		public List<string> TfnerCertifyAddress { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.ADDRESS.LINE1
		/// </summary>
		[DataMember(Order = 32, Name = "TFNER.CERTIFY.ADDRESS.LINE1")]
		public List<string> TfnerCertifyAddressLine1 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.ADDRESS.LINE2
		/// </summary>
		[DataMember(Order = 33, Name = "TFNER.CERTIFY.ADDRESS.LINE2")]
		public List<string> TfnerCertifyAddressLine2 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.ADDRESS.LINE3
		/// </summary>
		[DataMember(Order = 34, Name = "TFNER.CERTIFY.ADDRESS.LINE3")]
		public List<string> TfnerCertifyAddressLine3 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.CITY
		/// </summary>
		[DataMember(Order = 35, Name = "TFNER.CERTIFY.CITY")]
		public List<string> TfnerCertifyCity { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.STATE
		/// </summary>
		[DataMember(Order = 36, Name = "TFNER.CERTIFY.STATE")]
		public List<string> TfnerCertifyState { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.ZIP
		/// </summary>
		[DataMember(Order = 37, Name = "TFNER.CERTIFY.ZIP")]
		public List<string> TfnerCertifyZip { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERTIFY.FOREIGN.ADDR
		/// </summary>
		[DataMember(Order = 38, Name = "TFNER.CERTIFY.FOREIGN.ADDR")]
		public List<string> TfnerCertifyForeignAddr { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERT.FOREIGN.ADDR.LN1
		/// </summary>
		[DataMember(Order = 39, Name = "TFNER.CERT.FOREIGN.ADDR.LN1")]
		public List<string> TfnerCertForeignAddrLn1 { get; set; }
		
		/// <summary>
		/// CDD Name: TFNER.CERT.FOREIGN.ADDR.LN2
		/// </summary>
		[DataMember(Order = 40, Name = "TFNER.CERT.FOREIGN.ADDR.LN2")]
		public List<string> TfnerCertForeignAddrLn2 { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<TaxForm1099necReposTfnerCertInfo> TfnerCertInfoEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: TFNER.CERT.INFO
			
			TfnerCertInfoEntityAssociation = new List<TaxForm1099necReposTfnerCertInfo>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(TfnerCertifyTinType != null)
			{
				int numTfnerCertInfo = TfnerCertifyTinType.Count;
				if (TfnerCertifyTin !=null && TfnerCertifyTin.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyTin.Count;
				if (TfnerCertifySecondNotice !=null && TfnerCertifySecondNotice.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifySecondNotice.Count;
				if (TfnerCertifyDirectResale !=null && TfnerCertifyDirectResale.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyDirectResale.Count;
				if (TfnerCertifyNameControl !=null && TfnerCertifyNameControl.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyNameControl.Count;
				if (TfnerCertifyName !=null && TfnerCertifyName.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyName.Count;
				if (TfnerCertifySecondName !=null && TfnerCertifySecondName.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifySecondName.Count;
				if (TfnerCertifyAddress !=null && TfnerCertifyAddress.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyAddress.Count;
				if (TfnerCertifyAddressLine1 !=null && TfnerCertifyAddressLine1.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyAddressLine1.Count;
				if (TfnerCertifyAddressLine2 !=null && TfnerCertifyAddressLine2.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyAddressLine2.Count;
				if (TfnerCertifyAddressLine3 !=null && TfnerCertifyAddressLine3.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyAddressLine3.Count;
				if (TfnerCertifyCity !=null && TfnerCertifyCity.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyCity.Count;
				if (TfnerCertifyState !=null && TfnerCertifyState.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyState.Count;
				if (TfnerCertifyZip !=null && TfnerCertifyZip.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyZip.Count;
				if (TfnerCertifyForeignAddr !=null && TfnerCertifyForeignAddr.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertifyForeignAddr.Count;
				if (TfnerCertForeignAddrLn1 !=null && TfnerCertForeignAddrLn1.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertForeignAddrLn1.Count;
				if (TfnerCertForeignAddrLn2 !=null && TfnerCertForeignAddrLn2.Count > numTfnerCertInfo) numTfnerCertInfo = TfnerCertForeignAddrLn2.Count;

				for (int i = 0; i < numTfnerCertInfo; i++)
				{

					string value0 = "";
					if (TfnerCertifyTinType != null && i < TfnerCertifyTinType.Count)
					{
						value0 = TfnerCertifyTinType[i];
					}


					string value1 = "";
					if (TfnerCertifyTin != null && i < TfnerCertifyTin.Count)
					{
						value1 = TfnerCertifyTin[i];
					}


					string value2 = "";
					if (TfnerCertifySecondNotice != null && i < TfnerCertifySecondNotice.Count)
					{
						value2 = TfnerCertifySecondNotice[i];
					}


					string value3 = "";
					if (TfnerCertifyDirectResale != null && i < TfnerCertifyDirectResale.Count)
					{
						value3 = TfnerCertifyDirectResale[i];
					}


					string value4 = "";
					if (TfnerCertifyNameControl != null && i < TfnerCertifyNameControl.Count)
					{
						value4 = TfnerCertifyNameControl[i];
					}


					string value5 = "";
					if (TfnerCertifyName != null && i < TfnerCertifyName.Count)
					{
						value5 = TfnerCertifyName[i];
					}


					string value6 = "";
					if (TfnerCertifySecondName != null && i < TfnerCertifySecondName.Count)
					{
						value6 = TfnerCertifySecondName[i];
					}


					string value7 = "";
					if (TfnerCertifyAddress != null && i < TfnerCertifyAddress.Count)
					{
						value7 = TfnerCertifyAddress[i];
					}


					string value8 = "";
					if (TfnerCertifyAddressLine1 != null && i < TfnerCertifyAddressLine1.Count)
					{
						value8 = TfnerCertifyAddressLine1[i];
					}


					string value9 = "";
					if (TfnerCertifyAddressLine2 != null && i < TfnerCertifyAddressLine2.Count)
					{
						value9 = TfnerCertifyAddressLine2[i];
					}


					string value10 = "";
					if (TfnerCertifyAddressLine3 != null && i < TfnerCertifyAddressLine3.Count)
					{
						value10 = TfnerCertifyAddressLine3[i];
					}


					string value11 = "";
					if (TfnerCertifyCity != null && i < TfnerCertifyCity.Count)
					{
						value11 = TfnerCertifyCity[i];
					}


					string value12 = "";
					if (TfnerCertifyState != null && i < TfnerCertifyState.Count)
					{
						value12 = TfnerCertifyState[i];
					}


					string value13 = "";
					if (TfnerCertifyZip != null && i < TfnerCertifyZip.Count)
					{
						value13 = TfnerCertifyZip[i];
					}


					string value14 = "";
					if (TfnerCertifyForeignAddr != null && i < TfnerCertifyForeignAddr.Count)
					{
						value14 = TfnerCertifyForeignAddr[i];
					}


					string value15 = "";
					if (TfnerCertForeignAddrLn1 != null && i < TfnerCertForeignAddrLn1.Count)
					{
						value15 = TfnerCertForeignAddrLn1[i];
					}


					string value16 = "";
					if (TfnerCertForeignAddrLn2 != null && i < TfnerCertForeignAddrLn2.Count)
					{
						value16 = TfnerCertForeignAddrLn2[i];
					}

					TfnerCertInfoEntityAssociation.Add(new TaxForm1099necReposTfnerCertInfo( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class TaxForm1099necReposTfnerCertInfo
	{
		public string TfnerCertifyTinTypeAssocMember;	
		public string TfnerCertifyTinAssocMember;	
		public string TfnerCertifySecondNoticeAssocMember;	
		public string TfnerCertifyDirectResaleAssocMember;	
		public string TfnerCertifyNameControlAssocMember;	
		public string TfnerCertifyNameAssocMember;	
		public string TfnerCertifySecondNameAssocMember;	
		public string TfnerCertifyAddressAssocMember;	
		public string TfnerCertifyAddressLine1AssocMember;	
		public string TfnerCertifyAddressLine2AssocMember;	
		public string TfnerCertifyAddressLine3AssocMember;	
		public string TfnerCertifyCityAssocMember;	
		public string TfnerCertifyStateAssocMember;	
		public string TfnerCertifyZipAssocMember;	
		public string TfnerCertifyForeignAddrAssocMember;	
		public string TfnerCertForeignAddrLn1AssocMember;	
		public string TfnerCertForeignAddrLn2AssocMember;	
		public TaxForm1099necReposTfnerCertInfo() {}
		public TaxForm1099necReposTfnerCertInfo(
			string inTfnerCertifyTinType,
			string inTfnerCertifyTin,
			string inTfnerCertifySecondNotice,
			string inTfnerCertifyDirectResale,
			string inTfnerCertifyNameControl,
			string inTfnerCertifyName,
			string inTfnerCertifySecondName,
			string inTfnerCertifyAddress,
			string inTfnerCertifyAddressLine1,
			string inTfnerCertifyAddressLine2,
			string inTfnerCertifyAddressLine3,
			string inTfnerCertifyCity,
			string inTfnerCertifyState,
			string inTfnerCertifyZip,
			string inTfnerCertifyForeignAddr,
			string inTfnerCertForeignAddrLn1,
			string inTfnerCertForeignAddrLn2)
		{
			TfnerCertifyTinTypeAssocMember = inTfnerCertifyTinType;
			TfnerCertifyTinAssocMember = inTfnerCertifyTin;
			TfnerCertifySecondNoticeAssocMember = inTfnerCertifySecondNotice;
			TfnerCertifyDirectResaleAssocMember = inTfnerCertifyDirectResale;
			TfnerCertifyNameControlAssocMember = inTfnerCertifyNameControl;
			TfnerCertifyNameAssocMember = inTfnerCertifyName;
			TfnerCertifySecondNameAssocMember = inTfnerCertifySecondName;
			TfnerCertifyAddressAssocMember = inTfnerCertifyAddress;
			TfnerCertifyAddressLine1AssocMember = inTfnerCertifyAddressLine1;
			TfnerCertifyAddressLine2AssocMember = inTfnerCertifyAddressLine2;
			TfnerCertifyAddressLine3AssocMember = inTfnerCertifyAddressLine3;
			TfnerCertifyCityAssocMember = inTfnerCertifyCity;
			TfnerCertifyStateAssocMember = inTfnerCertifyState;
			TfnerCertifyZipAssocMember = inTfnerCertifyZip;
			TfnerCertifyForeignAddrAssocMember = inTfnerCertifyForeignAddr;
			TfnerCertForeignAddrLn1AssocMember = inTfnerCertForeignAddrLn1;
			TfnerCertForeignAddrLn2AssocMember = inTfnerCertForeignAddrLn2;
		}
	}
}
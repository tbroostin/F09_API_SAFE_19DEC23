//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/30/2017 10:50:44 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: TAX.FORM.T4A.BIN.REPOS
//     Application: CF
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.ColleagueFinance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "TaxFormT4aBinRepos")]
	[ColleagueDataContract(GeneratedDateTime = "10/30/2017 10:50:44 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "TAX.FORM.T4A.BIN.REPOS", EntityType = "PHYS")]
	public class TaxFormT4aBinRepos : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: TFTBR.YEAR
		/// </summary>
		[DataMember(Order = 0, Name = "TFTBR.YEAR")]
		public int? TftbrYear { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.REPOS.ID
		/// </summary>
		[DataMember(Order = 2, Name = "TFTBR.REPOS.ID")]
		public string TftbrReposId { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.CORP.ID
		/// </summary>
		[DataMember(Order = 4, Name = "TFTBR.CORP.ID")]
		public string TftbrCorpId { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.STATUS
		/// </summary>
		[DataMember(Order = 5, Name = "TFTBR.STATUS")]
		public string TftbrStatus { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.QUALIFIED.FLAG
		/// </summary>
		[DataMember(Order = 6, Name = "TFTBR.QUALIFIED.FLAG")]
		public string TftbrQualifiedFlag { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.BIN.ID
		/// </summary>
		[DataMember(Order = 10, Name = "TFTBR.BIN.ID")]
		public string TftbrBinId { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.BIN.CODE
		/// </summary>
		[DataMember(Order = 11, Name = "TFTBR.BIN.CODE")]
		public string TftbrBinCode { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.CERT.QUALIFIED.FLAG
		/// </summary>
		[DataMember(Order = 12, Name = "TFTBR.CERT.QUALIFIED.FLAG")]
		public List<string> TftbrCertQualifiedFlag { get; set; }
		
		/// <summary>
		/// CDD Name: TFTBR.CERT.STATUS
		/// </summary>
		[DataMember(Order = 13, Name = "TFTBR.CERT.STATUS")]
		public List<string> TftbrCertStatus { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<TaxFormT4aBinReposTftbrCert> TftbrCertEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: TFTBR.CERT
			
			TftbrCertEntityAssociation = new List<TaxFormT4aBinReposTftbrCert>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(TftbrCertQualifiedFlag != null)
			{
				int numTftbrCert = TftbrCertQualifiedFlag.Count;
				if (TftbrCertStatus !=null && TftbrCertStatus.Count > numTftbrCert) numTftbrCert = TftbrCertStatus.Count;

				for (int i = 0; i < numTftbrCert; i++)
				{

					string value0 = "";
					if (TftbrCertQualifiedFlag != null && i < TftbrCertQualifiedFlag.Count)
					{
						value0 = TftbrCertQualifiedFlag[i];
					}


					string value1 = "";
					if (TftbrCertStatus != null && i < TftbrCertStatus.Count)
					{
						value1 = TftbrCertStatus[i];
					}

					TftbrCertEntityAssociation.Add(new TaxFormT4aBinReposTftbrCert( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class TaxFormT4aBinReposTftbrCert
	{
		public string TftbrCertQualifiedFlagAssocMember;	
		public string TftbrCertStatusAssocMember;	
		public TaxFormT4aBinReposTftbrCert() {}
		public TaxFormT4aBinReposTftbrCert(
			string inTftbrCertQualifiedFlag,
			string inTftbrCertStatus)
		{
			TftbrCertQualifiedFlagAssocMember = inTftbrCertQualifiedFlag;
			TftbrCertStatusAssocMember = inTftbrCertStatus;
		}
	}
}
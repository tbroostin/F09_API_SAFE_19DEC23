//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 1:35:45 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: IPC.PAYMENT.REQS
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Finance.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "IpcPaymentReqs")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 1:35:45 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "IPC.PAYMENT.REQS", EntityType = "PHYS")]
	public class IpcPaymentReqs : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: IPCP.TERM
		/// </summary>
		[DataMember(Order = 0, Name = "IPCP.TERM")]
		public string IpcpTerm { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.DEFER.EFFECTIVE.START
		/// </summary>
		[DataMember(Order = 1, Name = "IPCP.DEFER.EFFECTIVE.START")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> IpcpDeferEffectiveStart { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.DEFER.EFFECTIVE.END
		/// </summary>
		[DataMember(Order = 2, Name = "IPCP.DEFER.EFFECTIVE.END")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> IpcpDeferEffectiveEnd { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.DEFER.PCT
		/// </summary>
		[DataMember(Order = 3, Name = "IPCP.DEFER.PCT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> IpcpDeferPct { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.PLAN.EFFECTIVE.START
		/// </summary>
		[DataMember(Order = 4, Name = "IPCP.PLAN.EFFECTIVE.START")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> IpcpPlanEffectiveStart { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.PLAN.EFFECTIVE.END
		/// </summary>
		[DataMember(Order = 5, Name = "IPCP.PLAN.EFFECTIVE.END")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> IpcpPlanEffectiveEnd { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.PAY.PLAN.TEMPLATE
		/// </summary>
		[DataMember(Order = 6, Name = "IPCP.PAY.PLAN.TEMPLATE")]
		public List<string> IpcpPayPlanTemplate { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.PLAN.START.DATE
		/// </summary>
		[DataMember(Order = 7, Name = "IPCP.PLAN.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> IpcpPlanStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.ELIGIBILITY.RULE
		/// </summary>
		[DataMember(Order = 8, Name = "IPCP.ELIGIBILITY.RULE")]
		public string IpcpEligibilityRule { get; set; }
		
		/// <summary>
		/// CDD Name: IPCP.RULE.EVAL.ORDER
		/// </summary>
		[DataMember(Order = 9, Name = "IPCP.RULE.EVAL.ORDER")]
		public int? IpcpRuleEvalOrder { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<IpcPaymentReqsIpcpDeferrals> IpcpDeferralsEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<IpcPaymentReqsIpcpPayPlans> IpcpPayPlansEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: IPCP.DEFERRALS
			
			IpcpDeferralsEntityAssociation = new List<IpcPaymentReqsIpcpDeferrals>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(IpcpDeferEffectiveStart != null)
			{
				int numIpcpDeferrals = IpcpDeferEffectiveStart.Count;
				if (IpcpDeferEffectiveEnd !=null && IpcpDeferEffectiveEnd.Count > numIpcpDeferrals) numIpcpDeferrals = IpcpDeferEffectiveEnd.Count;
				if (IpcpDeferPct !=null && IpcpDeferPct.Count > numIpcpDeferrals) numIpcpDeferrals = IpcpDeferPct.Count;

				for (int i = 0; i < numIpcpDeferrals; i++)
				{

					DateTime? value0 = null;
					if (IpcpDeferEffectiveStart != null && i < IpcpDeferEffectiveStart.Count)
					{
						value0 = IpcpDeferEffectiveStart[i];
					}


					DateTime? value1 = null;
					if (IpcpDeferEffectiveEnd != null && i < IpcpDeferEffectiveEnd.Count)
					{
						value1 = IpcpDeferEffectiveEnd[i];
					}


					Decimal? value2 = null;
					if (IpcpDeferPct != null && i < IpcpDeferPct.Count)
					{
						value2 = IpcpDeferPct[i];
					}

					IpcpDeferralsEntityAssociation.Add(new IpcPaymentReqsIpcpDeferrals( value0, value1, value2));
				}
			}
			// EntityAssociation Name: IPCP.PAY.PLANS
			
			IpcpPayPlansEntityAssociation = new List<IpcPaymentReqsIpcpPayPlans>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(IpcpPlanEffectiveStart != null)
			{
				int numIpcpPayPlans = IpcpPlanEffectiveStart.Count;
				if (IpcpPlanEffectiveEnd !=null && IpcpPlanEffectiveEnd.Count > numIpcpPayPlans) numIpcpPayPlans = IpcpPlanEffectiveEnd.Count;
				if (IpcpPayPlanTemplate !=null && IpcpPayPlanTemplate.Count > numIpcpPayPlans) numIpcpPayPlans = IpcpPayPlanTemplate.Count;
				if (IpcpPlanStartDate !=null && IpcpPlanStartDate.Count > numIpcpPayPlans) numIpcpPayPlans = IpcpPlanStartDate.Count;

				for (int i = 0; i < numIpcpPayPlans; i++)
				{

					DateTime? value0 = null;
					if (IpcpPlanEffectiveStart != null && i < IpcpPlanEffectiveStart.Count)
					{
						value0 = IpcpPlanEffectiveStart[i];
					}


					DateTime? value1 = null;
					if (IpcpPlanEffectiveEnd != null && i < IpcpPlanEffectiveEnd.Count)
					{
						value1 = IpcpPlanEffectiveEnd[i];
					}


					string value2 = "";
					if (IpcpPayPlanTemplate != null && i < IpcpPayPlanTemplate.Count)
					{
						value2 = IpcpPayPlanTemplate[i];
					}


					DateTime? value3 = null;
					if (IpcpPlanStartDate != null && i < IpcpPlanStartDate.Count)
					{
						value3 = IpcpPlanStartDate[i];
					}

					IpcpPayPlansEntityAssociation.Add(new IpcPaymentReqsIpcpPayPlans( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class IpcPaymentReqsIpcpDeferrals
	{
		public DateTime? IpcpDeferEffectiveStartAssocMember;	
		public DateTime? IpcpDeferEffectiveEndAssocMember;	
		public Decimal? IpcpDeferPctAssocMember;	
		public IpcPaymentReqsIpcpDeferrals() {}
		public IpcPaymentReqsIpcpDeferrals(
			DateTime? inIpcpDeferEffectiveStart,
			DateTime? inIpcpDeferEffectiveEnd,
			Decimal? inIpcpDeferPct)
		{
			IpcpDeferEffectiveStartAssocMember = inIpcpDeferEffectiveStart;
			IpcpDeferEffectiveEndAssocMember = inIpcpDeferEffectiveEnd;
			IpcpDeferPctAssocMember = inIpcpDeferPct;
		}
	}
	
	[Serializable]
	public class IpcPaymentReqsIpcpPayPlans
	{
		public DateTime? IpcpPlanEffectiveStartAssocMember;	
		public DateTime? IpcpPlanEffectiveEndAssocMember;	
		public string IpcpPayPlanTemplateAssocMember;	
		public DateTime? IpcpPlanStartDateAssocMember;	
		public IpcPaymentReqsIpcpPayPlans() {}
		public IpcPaymentReqsIpcpPayPlans(
			DateTime? inIpcpPlanEffectiveStart,
			DateTime? inIpcpPlanEffectiveEnd,
			string inIpcpPayPlanTemplate,
			DateTime? inIpcpPlanStartDate)
		{
			IpcpPlanEffectiveStartAssocMember = inIpcpPlanEffectiveStart;
			IpcpPlanEffectiveEndAssocMember = inIpcpPlanEffectiveEnd;
			IpcpPayPlanTemplateAssocMember = inIpcpPayPlanTemplate;
			IpcpPlanStartDateAssocMember = inIpcpPlanStartDate;
		}
	}
}
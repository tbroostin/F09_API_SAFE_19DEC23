//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 2:09:34 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: FIN.AID
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.FinancialAid.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "FinAid")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 2:09:34 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "FIN.AID", EntityType = "PHYS")]
	public class FinAid : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: FA.CS.YEARS
		/// </summary>
		[DataMember(Order = 43, Name = "FA.CS.YEARS")]
		public List<string> FaCsYears { get; set; }
		
		/// <summary>
		/// CDD Name: FA.SA.YEARS
		/// </summary>
		[DataMember(Order = 44, Name = "FA.SA.YEARS")]
		public List<string> FaSaYears { get; set; }
		
		/// <summary>
		/// CDD Name: FA.YS.YEARS
		/// </summary>
		[DataMember(Order = 45, Name = "FA.YS.YEARS")]
		public List<string> FaYsYears { get; set; }
		
		/// <summary>
		/// CDD Name: FA.COUNSELOR
		/// </summary>
		[DataMember(Order = 47, Name = "FA.COUNSELOR")]
		public List<string> FaCounselor { get; set; }
		
		/// <summary>
		/// CDD Name: FA.COUNSELOR.START.DATE
		/// </summary>
		[DataMember(Order = 48, Name = "FA.COUNSELOR.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> FaCounselorStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: FA.COUNSELOR.END.DATE
		/// </summary>
		[DataMember(Order = 49, Name = "FA.COUNSELOR.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> FaCounselorEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: FA.SAP.RESULTS.ID
		/// </summary>
		[DataMember(Order = 51, Name = "FA.SAP.RESULTS.ID")]
		public List<string> FaSapResultsId { get; set; }
		
		/// <summary>
		/// CDD Name: FA.COD.PERSON.ID
		/// </summary>
		[DataMember(Order = 74, Name = "FA.COD.PERSON.ID")]
		public string FaCodPersonId { get; set; }
		
		/// <summary>
		/// CDD Name: FA.ISIR.NSLDS.IDS
		/// </summary>
		[DataMember(Order = 75, Name = "FA.ISIR.NSLDS.IDS")]
		public List<string> FaIsirNsldsIds { get; set; }
		
		/// <summary>
		/// CDD Name: FA.INTERVIEWS
		/// </summary>
		[DataMember(Order = 81, Name = "FA.INTERVIEWS")]
		public List<string> FaInterviews { get; set; }
		
		/// <summary>
		/// CDD Name: FA.PAPER.COPY.OPT.IN.FLAG
		/// </summary>
		[DataMember(Order = 93, Name = "FA.PAPER.COPY.OPT.IN.FLAG")]
		public string FaPaperCopyOptInFlag { get; set; }
		
		/// <summary>
		/// CDD Name: FA.PENDING.LOAN.REQUEST.IDS
		/// </summary>
		[DataMember(Order = 94, Name = "FA.PENDING.LOAN.REQUEST.IDS")]
		public List<string> FaPendingLoanRequestIds { get; set; }
		
		/// <summary>
		/// CDD Name: FA.RESOLVED.LOAN.REQUEST.IDS
		/// </summary>
		[DataMember(Order = 95, Name = "FA.RESOLVED.LOAN.REQUEST.IDS")]
		public List<string> FaResolvedLoanRequestIds { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<FinAidFaCounselors> FaCounselorsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: FA.COUNSELORS
			
			FaCounselorsEntityAssociation = new List<FinAidFaCounselors>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(FaCounselor != null)
			{
				int numFaCounselors = FaCounselor.Count;
				if (FaCounselorStartDate !=null && FaCounselorStartDate.Count > numFaCounselors) numFaCounselors = FaCounselorStartDate.Count;
				if (FaCounselorEndDate !=null && FaCounselorEndDate.Count > numFaCounselors) numFaCounselors = FaCounselorEndDate.Count;

				for (int i = 0; i < numFaCounselors; i++)
				{

					string value0 = "";
					if (FaCounselor != null && i < FaCounselor.Count)
					{
						value0 = FaCounselor[i];
					}


					DateTime? value1 = null;
					if (FaCounselorStartDate != null && i < FaCounselorStartDate.Count)
					{
						value1 = FaCounselorStartDate[i];
					}


					DateTime? value2 = null;
					if (FaCounselorEndDate != null && i < FaCounselorEndDate.Count)
					{
						value2 = FaCounselorEndDate[i];
					}

					FaCounselorsEntityAssociation.Add(new FinAidFaCounselors( value0, value1, value2));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class FinAidFaCounselors
	{
		public string FaCounselorAssocMember;	
		public DateTime? FaCounselorStartDateAssocMember;	
		public DateTime? FaCounselorEndDateAssocMember;	
		public FinAidFaCounselors() {}
		public FinAidFaCounselors(
			string inFaCounselor,
			DateTime? inFaCounselorStartDate,
			DateTime? inFaCounselorEndDate)
		{
			FaCounselorAssocMember = inFaCounselor;
			FaCounselorStartDateAssocMember = inFaCounselorStartDate;
			FaCounselorEndDateAssocMember = inFaCounselorEndDate;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 2:13:30 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: RULE.TABLE.ACYR
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.FinancialAid.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "RuleTableAcyr")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 2:13:30 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "RULE.TABLE.ACYR", EntityType = "PHYS")]
	public class RuleTableAcyr : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: RT.DESCRIPTION
		/// </summary>
		[DataMember(Order = 0, Name = "RT.DESCRIPTION")]
		public string RtDescription { get; set; }
		
		/// <summary>
		/// CDD Name: RT.TYPE
		/// </summary>
		[DataMember(Order = 1, Name = "RT.TYPE")]
		public string RtType { get; set; }
		
		/// <summary>
		/// CDD Name: RT.FIX.LITERAL
		/// </summary>
		[DataMember(Order = 6, Name = "RT.FIX.LITERAL")]
		public string RtFixLiteral { get; set; }
		
		/// <summary>
		/// CDD Name: RT.SUB.NAME
		/// </summary>
		[DataMember(Order = 7, Name = "RT.SUB.NAME")]
		public string RtSubName { get; set; }
		
		/// <summary>
		/// CDD Name: RT.RULE.IDS
		/// </summary>
		[DataMember(Order = 8, Name = "RT.RULE.IDS")]
		public List<string> RtRuleIds { get; set; }
		
		/// <summary>
		/// CDD Name: RT.RESULTS
		/// </summary>
		[DataMember(Order = 9, Name = "RT.RESULTS")]
		public List<string> RtResults { get; set; }
		
		/// <summary>
		/// CDD Name: RT.VIRTUAL.FIELDS
		/// </summary>
		[DataMember(Order = 25, Name = "RT.VIRTUAL.FIELDS")]
		public List<string> RtVirtualFields { get; set; }
		
		/// <summary>
		/// CDD Name: RT.DEFAULT.VALUE.CONDITION
		/// </summary>
		[DataMember(Order = 27, Name = "RT.DEFAULT.VALUE.CONDITION")]
		public string RtDefaultValueCondition { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<RuleTableAcyrRtRuleTable> RtRuleTableEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: RT.RULE.TABLE
			
			RtRuleTableEntityAssociation = new List<RuleTableAcyrRtRuleTable>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(RtRuleIds != null)
			{
				int numRtRuleTable = RtRuleIds.Count;
				if (RtResults !=null && RtResults.Count > numRtRuleTable) numRtRuleTable = RtResults.Count;
				if (RtVirtualFields !=null && RtVirtualFields.Count > numRtRuleTable) numRtRuleTable = RtVirtualFields.Count;

				for (int i = 0; i < numRtRuleTable; i++)
				{

					string value0 = "";
					if (RtRuleIds != null && i < RtRuleIds.Count)
					{
						value0 = RtRuleIds[i];
					}


					string value1 = "";
					if (RtResults != null && i < RtResults.Count)
					{
						value1 = RtResults[i];
					}


					string value2 = "";
					if (RtVirtualFields != null && i < RtVirtualFields.Count)
					{
						value2 = RtVirtualFields[i];
					}

					RtRuleTableEntityAssociation.Add(new RuleTableAcyrRtRuleTable( value0, value1, value2));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class RuleTableAcyrRtRuleTable
	{
		public string RtRuleIdsAssocMember;	
		public string RtResultsAssocMember;	
		public string RtVirtualFieldsAssocMember;	
		public RuleTableAcyrRtRuleTable() {}
		public RuleTableAcyrRtRuleTable(
			string inRtRuleIds,
			string inRtResults,
			string inRtVirtualFields)
		{
			RtRuleIdsAssocMember = inRtRuleIds;
			RtResultsAssocMember = inRtResults;
			RtVirtualFieldsAssocMember = inRtVirtualFields;
		}
	}
}
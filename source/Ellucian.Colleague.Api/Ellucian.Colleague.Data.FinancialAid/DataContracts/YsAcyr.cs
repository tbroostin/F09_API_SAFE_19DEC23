//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 2:16:18 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: YS.ACYR
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.FinancialAid.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "YsAcyr")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 2:16:18 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "YS.ACYR", EntityType = "PHYS")]
	public class YsAcyr : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: YS.FILE.COMPLETE.DT
		/// </summary>
		[DataMember(Order = 4, Name = "YS.FILE.COMPLETE.DT")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? YsFileCompleteDt { get; set; }
		
		/// <summary>
		/// CDD Name: YS.AWARD.LTR.ACCEPTED.DT
		/// </summary>
		[DataMember(Order = 37, Name = "YS.AWARD.LTR.ACCEPTED.DT")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? YsAwardLtrAcceptedDt { get; set; }
		
		/// <summary>
		/// CDD Name: YS.CHECKLIST.ITEMS
		/// </summary>
		[DataMember(Order = 38, Name = "YS.CHECKLIST.ITEMS")]
		public List<string> YsChecklistItems { get; set; }
		
		/// <summary>
		/// CDD Name: YS.DISPLAY.ACTION
		/// </summary>
		[DataMember(Order = 39, Name = "YS.DISPLAY.ACTION")]
		public List<string> YsDisplayAction { get; set; }
		
		/// <summary>
		/// CDD Name: YS.DISPLAY.ACTION.DATE
		/// </summary>
		[DataMember(Order = 40, Name = "YS.DISPLAY.ACTION.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> YsDisplayActionDate { get; set; }
		
		/// <summary>
		/// CDD Name: YS.CHECKLIST.CHG.BY
		/// </summary>
		[DataMember(Order = 41, Name = "YS.CHECKLIST.CHG.BY")]
		public List<string> YsChecklistChgBy { get; set; }
		
		/// <summary>
		/// CDD Name: YS.APPL.COMPLETE.DATE
		/// </summary>
		[DataMember(Order = 42, Name = "YS.APPL.COMPLETE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? YsApplCompleteDate { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<YsAcyrChecklistItems> ChecklistItemsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: CHECKLIST.ITEMS
			
			ChecklistItemsEntityAssociation = new List<YsAcyrChecklistItems>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(YsChecklistItems != null)
			{
				int numChecklistItems = YsChecklistItems.Count;
				if (YsDisplayAction !=null && YsDisplayAction.Count > numChecklistItems) numChecklistItems = YsDisplayAction.Count;
				if (YsDisplayActionDate !=null && YsDisplayActionDate.Count > numChecklistItems) numChecklistItems = YsDisplayActionDate.Count;
				if (YsChecklistChgBy !=null && YsChecklistChgBy.Count > numChecklistItems) numChecklistItems = YsChecklistChgBy.Count;

				for (int i = 0; i < numChecklistItems; i++)
				{

					string value0 = "";
					if (YsChecklistItems != null && i < YsChecklistItems.Count)
					{
						value0 = YsChecklistItems[i];
					}


					string value1 = "";
					if (YsDisplayAction != null && i < YsDisplayAction.Count)
					{
						value1 = YsDisplayAction[i];
					}


					DateTime? value2 = null;
					if (YsDisplayActionDate != null && i < YsDisplayActionDate.Count)
					{
						value2 = YsDisplayActionDate[i];
					}


					string value3 = "";
					if (YsChecklistChgBy != null && i < YsChecklistChgBy.Count)
					{
						value3 = YsChecklistChgBy[i];
					}

					ChecklistItemsEntityAssociation.Add(new YsAcyrChecklistItems( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class YsAcyrChecklistItems
	{
		public string YsChecklistItemsAssocMember;	
		public string YsDisplayActionAssocMember;	
		public DateTime? YsDisplayActionDateAssocMember;	
		public string YsChecklistChgByAssocMember;	
		public YsAcyrChecklistItems() {}
		public YsAcyrChecklistItems(
			string inYsChecklistItems,
			string inYsDisplayAction,
			DateTime? inYsDisplayActionDate,
			string inYsChecklistChgBy)
		{
			YsChecklistItemsAssocMember = inYsChecklistItems;
			YsDisplayActionAssocMember = inYsDisplayAction;
			YsDisplayActionDateAssocMember = inYsDisplayActionDate;
			YsChecklistChgByAssocMember = inYsChecklistChgBy;
		}
	}
}
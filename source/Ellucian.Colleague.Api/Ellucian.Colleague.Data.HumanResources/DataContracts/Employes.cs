//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 2:25:18 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: EMPLOYES
//     Application: HR
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.HumanResources.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Employes")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 2:25:18 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "EMPLOYES", EntityType = "PHYS")]
	public class Employes : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}

        /// <summary>
        /// Record GUID
        /// </summary>
        [DataMember(Name = "RecordGuid")]
        public string RecordGuid { get; set; }

        /// <summary>
        /// Record Model Name
        /// </summary>
        [DataMember(Name = "RecordModelName")]
        public string RecordModelName { get; set; }

        /// <summary>
		/// CDD Name: EMP.BD.CODES
		/// </summary>
		[DataMember(Order = 35, Name = "EMP.BD.CODES")]
		public List<string> EmpBdCodes { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.QTD.AMTS
		/// </summary>
		[DataMember(Order = 36, Name = "EMP.BD.EMPLYE.QTD.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeQtdAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.YTD.AMTS
		/// </summary>
		[DataMember(Order = 37, Name = "EMP.BD.EMPLYE.YTD.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeYtdAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.FYR.AMTS
		/// </summary>
		[DataMember(Order = 38, Name = "EMP.BD.EMPLYE.FYR.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeFyrAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.QTD.AMTS
		/// </summary>
		[DataMember(Order = 39, Name = "EMP.BD.EMPLYR.QTD.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrQtdAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.YTD.AMTS
		/// </summary>
		[DataMember(Order = 40, Name = "EMP.BD.EMPLYR.YTD.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrYtdAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.FYR.AMTS
		/// </summary>
		[DataMember(Order = 41, Name = "EMP.BD.EMPLYR.FYR.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrFyrAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.QTD.BASE.AMTS
		/// </summary>
		[DataMember(Order = 42, Name = "EMP.BD.EMPLYE.QTD.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeQtdBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.YTD.BASE.AMTS
		/// </summary>
		[DataMember(Order = 43, Name = "EMP.BD.EMPLYE.YTD.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeYtdBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.FYR.BASE.AMTS
		/// </summary>
		[DataMember(Order = 44, Name = "EMP.BD.EMPLYE.FYR.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeFyrBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.CODES
		/// </summary>
		[DataMember(Order = 45, Name = "EMP.DEPOSIT.CODES")]
		public List<string> EmpDepositCodes { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.TYPES
		/// </summary>
		[DataMember(Order = 46, Name = "EMP.DEPOSIT.TYPES")]
		public List<string> EmpDepositTypes { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.ACCOUNTS
		/// </summary>
		[DataMember(Order = 47, Name = "EMP.DEPOSIT.ACCOUNTS")]
		public List<string> EmpDepositAccounts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.PRIORITIES
		/// </summary>
		[DataMember(Order = 48, Name = "EMP.DEPOSIT.PRIORITIES")]
		public List<int?> EmpDepositPriorities { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.START.DATES
		/// </summary>
		[DataMember(Order = 49, Name = "EMP.DEPOSIT.START.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> EmpDepositStartDates { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.CHANGE.FLAGS
		/// </summary>
		[DataMember(Order = 50, Name = "EMP.DEPOSIT.CHANGE.FLAGS")]
		public List<string> EmpDepositChangeFlags { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.LIMIT.TODATE
		/// </summary>
		[DataMember(Order = 57, Name = "EMP.BD.EMPLYE.LIMIT.TODATE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeLimitTodate { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.LIMIT.TODATE
		/// </summary>
		[DataMember(Order = 58, Name = "EMP.BD.EMPLYR.LIMIT.TODATE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrLimitTodate { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.AMOUNTS
		/// </summary>
		[DataMember(Order = 59, Name = "EMP.DEPOSIT.AMOUNTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpDepositAmounts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.END.DATES
		/// </summary>
		[DataMember(Order = 60, Name = "EMP.DEPOSIT.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> EmpDepositEndDates { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.QTD.BASE.AMTS
		/// </summary>
		[DataMember(Order = 61, Name = "EMP.BD.EMPLYR.QTD.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrQtdBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.YTD.BASE.AMTS
		/// </summary>
		[DataMember(Order = 62, Name = "EMP.BD.EMPLYR.YTD.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrYtdBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.FYR.BASE.AMTS
		/// </summary>
		[DataMember(Order = 63, Name = "EMP.BD.EMPLYR.FYR.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrFyrBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.LIMIT.AMTS
		/// </summary>
		[DataMember(Order = 64, Name = "EMP.BD.EMPLYE.LIMIT.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeLimitAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.LIMIT.AMTS
		/// </summary>
		[DataMember(Order = 65, Name = "EMP.BD.EMPLYR.LIMIT.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrLimitAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.QTD.COSTS
		/// </summary>
		[DataMember(Order = 145, Name = "EMP.BD.EMPLYE.QTD.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeQtdCosts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.QTD.GST.TAXS
		/// </summary>
		[DataMember(Order = 146, Name = "EMP.BD.EMPLYE.QTD.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeQtdGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.QTD.COSTS
		/// </summary>
		[DataMember(Order = 147, Name = "EMP.BD.EMPLYR.QTD.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrQtdCosts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.QTD.GST.TAXS
		/// </summary>
		[DataMember(Order = 148, Name = "EMP.BD.EMPLYR.QTD.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrQtdGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.FYR.COSTS
		/// </summary>
		[DataMember(Order = 149, Name = "EMP.BD.EMPLYE.FYR.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeFyrCosts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.FYR.GST.TAXS
		/// </summary>
		[DataMember(Order = 150, Name = "EMP.BD.EMPLYE.FYR.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeFyrGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.FYR.COSTS
		/// </summary>
		[DataMember(Order = 151, Name = "EMP.BD.EMPLYR.FYR.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrFyrCosts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.FYR.GST.TAXS
		/// </summary>
		[DataMember(Order = 152, Name = "EMP.BD.EMPLYR.FYR.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrFyrGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.YTD.COSTS
		/// </summary>
		[DataMember(Order = 153, Name = "EMP.BD.EMPLYE.YTD.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeYtdCosts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYE.YTD.GST.TAXS
		/// </summary>
		[DataMember(Order = 154, Name = "EMP.BD.EMPLYE.YTD.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyeYtdGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.YTD.COSTS
		/// </summary>
		[DataMember(Order = 155, Name = "EMP.BD.EMPLYR.YTD.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrYtdCosts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.EMPLYR.YTD.GST.TAXS
		/// </summary>
		[DataMember(Order = 156, Name = "EMP.BD.EMPLYR.YTD.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdEmplyrYtdGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.BD.GST.COMP.YTD.AMTS
		/// </summary>
		[DataMember(Order = 157, Name = "EMP.BD.GST.COMP.YTD.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> EmpBdGstCompYtdAmts { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SUPERVISOR.PERPOS
		/// </summary>
		[DataMember(Order = 193, Name = "EMP.SUPERVISOR.PERPOS")]
		public List<string> EmpSupervisorPerpos { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.VIEW.CHK.ADV.ONLINE
		/// </summary>
		[DataMember(Order = 197, Name = "EMP.VIEW.CHK.ADV.ONLINE")]
		public string EmpViewChkAdvOnline { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.ADDDATE
		/// </summary>
		[DataMember(Order = 198, Name = "EMP.DEPOSIT.ADDDATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> EmpDepositAdddate { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.ADDOPR
		/// </summary>
		[DataMember(Order = 199, Name = "EMP.DEPOSIT.ADDOPR")]
		public List<string> EmpDepositAddopr { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.ADDTIME
		/// </summary>
		[DataMember(Order = 200, Name = "EMP.DEPOSIT.ADDTIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> EmpDepositAddtime { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.CHGDATE
		/// </summary>
		[DataMember(Order = 201, Name = "EMP.DEPOSIT.CHGDATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> EmpDepositChgdate { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.CHGOPR
		/// </summary>
		[DataMember(Order = 202, Name = "EMP.DEPOSIT.CHGOPR")]
		public List<string> EmpDepositChgopr { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.CHGTIME
		/// </summary>
		[DataMember(Order = 203, Name = "EMP.DEPOSIT.CHGTIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> EmpDepositChgtime { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.NICKNAME
		/// </summary>
		[DataMember(Order = 204, Name = "EMP.DEPOSIT.NICKNAME")]
		public List<string> EmpDepositNickname { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEP.ACCTS.LAST4
		/// </summary>
		[DataMember(Order = 205, Name = "EMP.DEP.ACCTS.LAST4")]
		public List<string> EmpDepAcctsLast4 { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SS.PPD.END.DATES
		/// </summary>
		[DataMember(Order = 206, Name = "EMP.SS.PPD.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> EmpSsPpdEndDates { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SS.PAYCYCLES
		/// </summary>
		[DataMember(Order = 207, Name = "EMP.SS.PAYCYCLES")]
		public List<string> EmpSsPaycycles { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.SS.POSITION.IDS
		/// </summary>
		[DataMember(Order = 208, Name = "EMP.SS.POSITION.IDS")]
		public List<string> EmpSsPositionIds { get; set; }
		
		/// <summary>
		/// CDD Name: EMP.DEPOSIT.ID
		/// </summary>
		[DataMember(Order = 209, Name = "EMP.DEPOSIT.ID")]
		public List<string> EmpDepositId { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<EmployesEmpBen> EmpBenEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<EmployesDirDep> DirDepEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: EMP.BEN
			
			EmpBenEntityAssociation = new List<EmployesEmpBen>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(EmpBdCodes != null)
			{
				int numEmpBen = EmpBdCodes.Count;
				if (EmpBdEmplyeQtdAmts !=null && EmpBdEmplyeQtdAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyeQtdAmts.Count;
				if (EmpBdEmplyeYtdAmts !=null && EmpBdEmplyeYtdAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyeYtdAmts.Count;
				if (EmpBdEmplyeFyrAmts !=null && EmpBdEmplyeFyrAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyeFyrAmts.Count;
				if (EmpBdEmplyrQtdAmts !=null && EmpBdEmplyrQtdAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyrQtdAmts.Count;
				if (EmpBdEmplyrYtdAmts !=null && EmpBdEmplyrYtdAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyrYtdAmts.Count;
				if (EmpBdEmplyrFyrAmts !=null && EmpBdEmplyrFyrAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyrFyrAmts.Count;
				if (EmpBdEmplyeQtdBaseAmts !=null && EmpBdEmplyeQtdBaseAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyeQtdBaseAmts.Count;
				if (EmpBdEmplyeYtdBaseAmts !=null && EmpBdEmplyeYtdBaseAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyeYtdBaseAmts.Count;
				if (EmpBdEmplyeFyrBaseAmts !=null && EmpBdEmplyeFyrBaseAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyeFyrBaseAmts.Count;
				if (EmpBdEmplyeLimitTodate !=null && EmpBdEmplyeLimitTodate.Count > numEmpBen) numEmpBen = EmpBdEmplyeLimitTodate.Count;
				if (EmpBdEmplyrLimitTodate !=null && EmpBdEmplyrLimitTodate.Count > numEmpBen) numEmpBen = EmpBdEmplyrLimitTodate.Count;
				if (EmpBdEmplyrQtdBaseAmts !=null && EmpBdEmplyrQtdBaseAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyrQtdBaseAmts.Count;
				if (EmpBdEmplyrYtdBaseAmts !=null && EmpBdEmplyrYtdBaseAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyrYtdBaseAmts.Count;
				if (EmpBdEmplyrFyrBaseAmts !=null && EmpBdEmplyrFyrBaseAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyrFyrBaseAmts.Count;
				if (EmpBdEmplyeLimitAmts !=null && EmpBdEmplyeLimitAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyeLimitAmts.Count;
				if (EmpBdEmplyrLimitAmts !=null && EmpBdEmplyrLimitAmts.Count > numEmpBen) numEmpBen = EmpBdEmplyrLimitAmts.Count;
				if (EmpBdEmplyeQtdCosts !=null && EmpBdEmplyeQtdCosts.Count > numEmpBen) numEmpBen = EmpBdEmplyeQtdCosts.Count;
				if (EmpBdEmplyeQtdGstTaxs !=null && EmpBdEmplyeQtdGstTaxs.Count > numEmpBen) numEmpBen = EmpBdEmplyeQtdGstTaxs.Count;
				if (EmpBdEmplyrQtdCosts !=null && EmpBdEmplyrQtdCosts.Count > numEmpBen) numEmpBen = EmpBdEmplyrQtdCosts.Count;
				if (EmpBdEmplyrQtdGstTaxs !=null && EmpBdEmplyrQtdGstTaxs.Count > numEmpBen) numEmpBen = EmpBdEmplyrQtdGstTaxs.Count;
				if (EmpBdEmplyeFyrCosts !=null && EmpBdEmplyeFyrCosts.Count > numEmpBen) numEmpBen = EmpBdEmplyeFyrCosts.Count;
				if (EmpBdEmplyeFyrGstTaxs !=null && EmpBdEmplyeFyrGstTaxs.Count > numEmpBen) numEmpBen = EmpBdEmplyeFyrGstTaxs.Count;
				if (EmpBdEmplyrFyrCosts !=null && EmpBdEmplyrFyrCosts.Count > numEmpBen) numEmpBen = EmpBdEmplyrFyrCosts.Count;
				if (EmpBdEmplyrFyrGstTaxs !=null && EmpBdEmplyrFyrGstTaxs.Count > numEmpBen) numEmpBen = EmpBdEmplyrFyrGstTaxs.Count;
				if (EmpBdEmplyeYtdCosts !=null && EmpBdEmplyeYtdCosts.Count > numEmpBen) numEmpBen = EmpBdEmplyeYtdCosts.Count;
				if (EmpBdEmplyeYtdGstTaxs !=null && EmpBdEmplyeYtdGstTaxs.Count > numEmpBen) numEmpBen = EmpBdEmplyeYtdGstTaxs.Count;
				if (EmpBdEmplyrYtdCosts !=null && EmpBdEmplyrYtdCosts.Count > numEmpBen) numEmpBen = EmpBdEmplyrYtdCosts.Count;
				if (EmpBdEmplyrYtdGstTaxs !=null && EmpBdEmplyrYtdGstTaxs.Count > numEmpBen) numEmpBen = EmpBdEmplyrYtdGstTaxs.Count;
				if (EmpBdGstCompYtdAmts !=null && EmpBdGstCompYtdAmts.Count > numEmpBen) numEmpBen = EmpBdGstCompYtdAmts.Count;

				for (int i = 0; i < numEmpBen; i++)
				{

					string value0 = "";
					if (EmpBdCodes != null && i < EmpBdCodes.Count)
					{
						value0 = EmpBdCodes[i];
					}


					Decimal? value1 = null;
					if (EmpBdEmplyeQtdAmts != null && i < EmpBdEmplyeQtdAmts.Count)
					{
						value1 = EmpBdEmplyeQtdAmts[i];
					}


					Decimal? value2 = null;
					if (EmpBdEmplyeYtdAmts != null && i < EmpBdEmplyeYtdAmts.Count)
					{
						value2 = EmpBdEmplyeYtdAmts[i];
					}


					Decimal? value3 = null;
					if (EmpBdEmplyeFyrAmts != null && i < EmpBdEmplyeFyrAmts.Count)
					{
						value3 = EmpBdEmplyeFyrAmts[i];
					}


					Decimal? value4 = null;
					if (EmpBdEmplyrQtdAmts != null && i < EmpBdEmplyrQtdAmts.Count)
					{
						value4 = EmpBdEmplyrQtdAmts[i];
					}


					Decimal? value5 = null;
					if (EmpBdEmplyrYtdAmts != null && i < EmpBdEmplyrYtdAmts.Count)
					{
						value5 = EmpBdEmplyrYtdAmts[i];
					}


					Decimal? value6 = null;
					if (EmpBdEmplyrFyrAmts != null && i < EmpBdEmplyrFyrAmts.Count)
					{
						value6 = EmpBdEmplyrFyrAmts[i];
					}


					Decimal? value7 = null;
					if (EmpBdEmplyeQtdBaseAmts != null && i < EmpBdEmplyeQtdBaseAmts.Count)
					{
						value7 = EmpBdEmplyeQtdBaseAmts[i];
					}


					Decimal? value8 = null;
					if (EmpBdEmplyeYtdBaseAmts != null && i < EmpBdEmplyeYtdBaseAmts.Count)
					{
						value8 = EmpBdEmplyeYtdBaseAmts[i];
					}


					Decimal? value9 = null;
					if (EmpBdEmplyeFyrBaseAmts != null && i < EmpBdEmplyeFyrBaseAmts.Count)
					{
						value9 = EmpBdEmplyeFyrBaseAmts[i];
					}


					Decimal? value10 = null;
					if (EmpBdEmplyeLimitTodate != null && i < EmpBdEmplyeLimitTodate.Count)
					{
						value10 = EmpBdEmplyeLimitTodate[i];
					}


					Decimal? value11 = null;
					if (EmpBdEmplyrLimitTodate != null && i < EmpBdEmplyrLimitTodate.Count)
					{
						value11 = EmpBdEmplyrLimitTodate[i];
					}


					Decimal? value12 = null;
					if (EmpBdEmplyrQtdBaseAmts != null && i < EmpBdEmplyrQtdBaseAmts.Count)
					{
						value12 = EmpBdEmplyrQtdBaseAmts[i];
					}


					Decimal? value13 = null;
					if (EmpBdEmplyrYtdBaseAmts != null && i < EmpBdEmplyrYtdBaseAmts.Count)
					{
						value13 = EmpBdEmplyrYtdBaseAmts[i];
					}


					Decimal? value14 = null;
					if (EmpBdEmplyrFyrBaseAmts != null && i < EmpBdEmplyrFyrBaseAmts.Count)
					{
						value14 = EmpBdEmplyrFyrBaseAmts[i];
					}


					Decimal? value15 = null;
					if (EmpBdEmplyeLimitAmts != null && i < EmpBdEmplyeLimitAmts.Count)
					{
						value15 = EmpBdEmplyeLimitAmts[i];
					}


					Decimal? value16 = null;
					if (EmpBdEmplyrLimitAmts != null && i < EmpBdEmplyrLimitAmts.Count)
					{
						value16 = EmpBdEmplyrLimitAmts[i];
					}


					Decimal? value17 = null;
					if (EmpBdEmplyeQtdCosts != null && i < EmpBdEmplyeQtdCosts.Count)
					{
						value17 = EmpBdEmplyeQtdCosts[i];
					}


					Decimal? value18 = null;
					if (EmpBdEmplyeQtdGstTaxs != null && i < EmpBdEmplyeQtdGstTaxs.Count)
					{
						value18 = EmpBdEmplyeQtdGstTaxs[i];
					}


					Decimal? value19 = null;
					if (EmpBdEmplyrQtdCosts != null && i < EmpBdEmplyrQtdCosts.Count)
					{
						value19 = EmpBdEmplyrQtdCosts[i];
					}


					Decimal? value20 = null;
					if (EmpBdEmplyrQtdGstTaxs != null && i < EmpBdEmplyrQtdGstTaxs.Count)
					{
						value20 = EmpBdEmplyrQtdGstTaxs[i];
					}


					Decimal? value21 = null;
					if (EmpBdEmplyeFyrCosts != null && i < EmpBdEmplyeFyrCosts.Count)
					{
						value21 = EmpBdEmplyeFyrCosts[i];
					}


					Decimal? value22 = null;
					if (EmpBdEmplyeFyrGstTaxs != null && i < EmpBdEmplyeFyrGstTaxs.Count)
					{
						value22 = EmpBdEmplyeFyrGstTaxs[i];
					}


					Decimal? value23 = null;
					if (EmpBdEmplyrFyrCosts != null && i < EmpBdEmplyrFyrCosts.Count)
					{
						value23 = EmpBdEmplyrFyrCosts[i];
					}


					Decimal? value24 = null;
					if (EmpBdEmplyrFyrGstTaxs != null && i < EmpBdEmplyrFyrGstTaxs.Count)
					{
						value24 = EmpBdEmplyrFyrGstTaxs[i];
					}


					Decimal? value25 = null;
					if (EmpBdEmplyeYtdCosts != null && i < EmpBdEmplyeYtdCosts.Count)
					{
						value25 = EmpBdEmplyeYtdCosts[i];
					}


					Decimal? value26 = null;
					if (EmpBdEmplyeYtdGstTaxs != null && i < EmpBdEmplyeYtdGstTaxs.Count)
					{
						value26 = EmpBdEmplyeYtdGstTaxs[i];
					}


					Decimal? value27 = null;
					if (EmpBdEmplyrYtdCosts != null && i < EmpBdEmplyrYtdCosts.Count)
					{
						value27 = EmpBdEmplyrYtdCosts[i];
					}


					Decimal? value28 = null;
					if (EmpBdEmplyrYtdGstTaxs != null && i < EmpBdEmplyrYtdGstTaxs.Count)
					{
						value28 = EmpBdEmplyrYtdGstTaxs[i];
					}


					Decimal? value29 = null;
					if (EmpBdGstCompYtdAmts != null && i < EmpBdGstCompYtdAmts.Count)
					{
						value29 = EmpBdGstCompYtdAmts[i];
					}

					EmpBenEntityAssociation.Add(new EmployesEmpBen( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value17, value18, value19, value20, value21, value22, value23, value24, value25, value26, value27, value28, value29));
				}
			}
			// EntityAssociation Name: DIR.DEP
			
			DirDepEntityAssociation = new List<EmployesDirDep>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(EmpDepositCodes != null)
			{
				int numDirDep = EmpDepositCodes.Count;
				if (EmpDepositTypes !=null && EmpDepositTypes.Count > numDirDep) numDirDep = EmpDepositTypes.Count;
				if (EmpDepositAccounts !=null && EmpDepositAccounts.Count > numDirDep) numDirDep = EmpDepositAccounts.Count;
				if (EmpDepositPriorities !=null && EmpDepositPriorities.Count > numDirDep) numDirDep = EmpDepositPriorities.Count;
				if (EmpDepositStartDates !=null && EmpDepositStartDates.Count > numDirDep) numDirDep = EmpDepositStartDates.Count;
				if (EmpDepositChangeFlags !=null && EmpDepositChangeFlags.Count > numDirDep) numDirDep = EmpDepositChangeFlags.Count;
				if (EmpDepositAmounts !=null && EmpDepositAmounts.Count > numDirDep) numDirDep = EmpDepositAmounts.Count;
				if (EmpDepositEndDates !=null && EmpDepositEndDates.Count > numDirDep) numDirDep = EmpDepositEndDates.Count;
				if (EmpDepositAdddate !=null && EmpDepositAdddate.Count > numDirDep) numDirDep = EmpDepositAdddate.Count;
				if (EmpDepositAddopr !=null && EmpDepositAddopr.Count > numDirDep) numDirDep = EmpDepositAddopr.Count;
				if (EmpDepositAddtime !=null && EmpDepositAddtime.Count > numDirDep) numDirDep = EmpDepositAddtime.Count;
				if (EmpDepositChgdate !=null && EmpDepositChgdate.Count > numDirDep) numDirDep = EmpDepositChgdate.Count;
				if (EmpDepositChgopr !=null && EmpDepositChgopr.Count > numDirDep) numDirDep = EmpDepositChgopr.Count;
				if (EmpDepositChgtime !=null && EmpDepositChgtime.Count > numDirDep) numDirDep = EmpDepositChgtime.Count;
				if (EmpDepositNickname !=null && EmpDepositNickname.Count > numDirDep) numDirDep = EmpDepositNickname.Count;
				if (EmpDepAcctsLast4 !=null && EmpDepAcctsLast4.Count > numDirDep) numDirDep = EmpDepAcctsLast4.Count;
				if (EmpDepositId !=null && EmpDepositId.Count > numDirDep) numDirDep = EmpDepositId.Count;

				for (int i = 0; i < numDirDep; i++)
				{

					string value0 = "";
					if (EmpDepositCodes != null && i < EmpDepositCodes.Count)
					{
						value0 = EmpDepositCodes[i];
					}


					string value1 = "";
					if (EmpDepositTypes != null && i < EmpDepositTypes.Count)
					{
						value1 = EmpDepositTypes[i];
					}


					string value2 = "";
					if (EmpDepositAccounts != null && i < EmpDepositAccounts.Count)
					{
						value2 = EmpDepositAccounts[i];
					}


					int? value3 = null;
					if (EmpDepositPriorities != null && i < EmpDepositPriorities.Count)
					{
						value3 = EmpDepositPriorities[i];
					}


					DateTime? value4 = null;
					if (EmpDepositStartDates != null && i < EmpDepositStartDates.Count)
					{
						value4 = EmpDepositStartDates[i];
					}


					string value5 = "";
					if (EmpDepositChangeFlags != null && i < EmpDepositChangeFlags.Count)
					{
						value5 = EmpDepositChangeFlags[i];
					}


					Decimal? value6 = null;
					if (EmpDepositAmounts != null && i < EmpDepositAmounts.Count)
					{
						value6 = EmpDepositAmounts[i];
					}


					DateTime? value7 = null;
					if (EmpDepositEndDates != null && i < EmpDepositEndDates.Count)
					{
						value7 = EmpDepositEndDates[i];
					}


					DateTime? value8 = null;
					if (EmpDepositAdddate != null && i < EmpDepositAdddate.Count)
					{
						value8 = EmpDepositAdddate[i];
					}


					string value9 = "";
					if (EmpDepositAddopr != null && i < EmpDepositAddopr.Count)
					{
						value9 = EmpDepositAddopr[i];
					}


					DateTime? value10 = null;
					if (EmpDepositAddtime != null && i < EmpDepositAddtime.Count)
					{
						value10 = EmpDepositAddtime[i];
					}


					DateTime? value11 = null;
					if (EmpDepositChgdate != null && i < EmpDepositChgdate.Count)
					{
						value11 = EmpDepositChgdate[i];
					}


					string value12 = "";
					if (EmpDepositChgopr != null && i < EmpDepositChgopr.Count)
					{
						value12 = EmpDepositChgopr[i];
					}


					DateTime? value13 = null;
					if (EmpDepositChgtime != null && i < EmpDepositChgtime.Count)
					{
						value13 = EmpDepositChgtime[i];
					}


					string value14 = "";
					if (EmpDepositNickname != null && i < EmpDepositNickname.Count)
					{
						value14 = EmpDepositNickname[i];
					}


					string value15 = "";
					if (EmpDepAcctsLast4 != null && i < EmpDepAcctsLast4.Count)
					{
						value15 = EmpDepAcctsLast4[i];
					}


					string value16 = "";
					if (EmpDepositId != null && i < EmpDepositId.Count)
					{
						value16 = EmpDepositId[i];
					}

					DirDepEntityAssociation.Add(new EmployesDirDep( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class EmployesEmpBen
	{
		public string EmpBdCodesAssocMember;	
		public Decimal? EmpBdEmplyeQtdAmtsAssocMember;	
		public Decimal? EmpBdEmplyeYtdAmtsAssocMember;	
		public Decimal? EmpBdEmplyeFyrAmtsAssocMember;	
		public Decimal? EmpBdEmplyrQtdAmtsAssocMember;	
		public Decimal? EmpBdEmplyrYtdAmtsAssocMember;	
		public Decimal? EmpBdEmplyrFyrAmtsAssocMember;	
		public Decimal? EmpBdEmplyeQtdBaseAmtsAssocMember;	
		public Decimal? EmpBdEmplyeYtdBaseAmtsAssocMember;	
		public Decimal? EmpBdEmplyeFyrBaseAmtsAssocMember;	
		public Decimal? EmpBdEmplyeLimitTodateAssocMember;	
		public Decimal? EmpBdEmplyrLimitTodateAssocMember;	
		public Decimal? EmpBdEmplyrQtdBaseAmtsAssocMember;	
		public Decimal? EmpBdEmplyrYtdBaseAmtsAssocMember;	
		public Decimal? EmpBdEmplyrFyrBaseAmtsAssocMember;	
		public Decimal? EmpBdEmplyeLimitAmtsAssocMember;	
		public Decimal? EmpBdEmplyrLimitAmtsAssocMember;	
		public Decimal? EmpBdEmplyeQtdCostsAssocMember;	
		public Decimal? EmpBdEmplyeQtdGstTaxsAssocMember;	
		public Decimal? EmpBdEmplyrQtdCostsAssocMember;	
		public Decimal? EmpBdEmplyrQtdGstTaxsAssocMember;	
		public Decimal? EmpBdEmplyeFyrCostsAssocMember;	
		public Decimal? EmpBdEmplyeFyrGstTaxsAssocMember;	
		public Decimal? EmpBdEmplyrFyrCostsAssocMember;	
		public Decimal? EmpBdEmplyrFyrGstTaxsAssocMember;	
		public Decimal? EmpBdEmplyeYtdCostsAssocMember;	
		public Decimal? EmpBdEmplyeYtdGstTaxsAssocMember;	
		public Decimal? EmpBdEmplyrYtdCostsAssocMember;	
		public Decimal? EmpBdEmplyrYtdGstTaxsAssocMember;	
		public Decimal? EmpBdGstCompYtdAmtsAssocMember;	
		public EmployesEmpBen() {}
		public EmployesEmpBen(
			string inEmpBdCodes,
			Decimal? inEmpBdEmplyeQtdAmts,
			Decimal? inEmpBdEmplyeYtdAmts,
			Decimal? inEmpBdEmplyeFyrAmts,
			Decimal? inEmpBdEmplyrQtdAmts,
			Decimal? inEmpBdEmplyrYtdAmts,
			Decimal? inEmpBdEmplyrFyrAmts,
			Decimal? inEmpBdEmplyeQtdBaseAmts,
			Decimal? inEmpBdEmplyeYtdBaseAmts,
			Decimal? inEmpBdEmplyeFyrBaseAmts,
			Decimal? inEmpBdEmplyeLimitTodate,
			Decimal? inEmpBdEmplyrLimitTodate,
			Decimal? inEmpBdEmplyrQtdBaseAmts,
			Decimal? inEmpBdEmplyrYtdBaseAmts,
			Decimal? inEmpBdEmplyrFyrBaseAmts,
			Decimal? inEmpBdEmplyeLimitAmts,
			Decimal? inEmpBdEmplyrLimitAmts,
			Decimal? inEmpBdEmplyeQtdCosts,
			Decimal? inEmpBdEmplyeQtdGstTaxs,
			Decimal? inEmpBdEmplyrQtdCosts,
			Decimal? inEmpBdEmplyrQtdGstTaxs,
			Decimal? inEmpBdEmplyeFyrCosts,
			Decimal? inEmpBdEmplyeFyrGstTaxs,
			Decimal? inEmpBdEmplyrFyrCosts,
			Decimal? inEmpBdEmplyrFyrGstTaxs,
			Decimal? inEmpBdEmplyeYtdCosts,
			Decimal? inEmpBdEmplyeYtdGstTaxs,
			Decimal? inEmpBdEmplyrYtdCosts,
			Decimal? inEmpBdEmplyrYtdGstTaxs,
			Decimal? inEmpBdGstCompYtdAmts)
		{
			EmpBdCodesAssocMember = inEmpBdCodes;
			EmpBdEmplyeQtdAmtsAssocMember = inEmpBdEmplyeQtdAmts;
			EmpBdEmplyeYtdAmtsAssocMember = inEmpBdEmplyeYtdAmts;
			EmpBdEmplyeFyrAmtsAssocMember = inEmpBdEmplyeFyrAmts;
			EmpBdEmplyrQtdAmtsAssocMember = inEmpBdEmplyrQtdAmts;
			EmpBdEmplyrYtdAmtsAssocMember = inEmpBdEmplyrYtdAmts;
			EmpBdEmplyrFyrAmtsAssocMember = inEmpBdEmplyrFyrAmts;
			EmpBdEmplyeQtdBaseAmtsAssocMember = inEmpBdEmplyeQtdBaseAmts;
			EmpBdEmplyeYtdBaseAmtsAssocMember = inEmpBdEmplyeYtdBaseAmts;
			EmpBdEmplyeFyrBaseAmtsAssocMember = inEmpBdEmplyeFyrBaseAmts;
			EmpBdEmplyeLimitTodateAssocMember = inEmpBdEmplyeLimitTodate;
			EmpBdEmplyrLimitTodateAssocMember = inEmpBdEmplyrLimitTodate;
			EmpBdEmplyrQtdBaseAmtsAssocMember = inEmpBdEmplyrQtdBaseAmts;
			EmpBdEmplyrYtdBaseAmtsAssocMember = inEmpBdEmplyrYtdBaseAmts;
			EmpBdEmplyrFyrBaseAmtsAssocMember = inEmpBdEmplyrFyrBaseAmts;
			EmpBdEmplyeLimitAmtsAssocMember = inEmpBdEmplyeLimitAmts;
			EmpBdEmplyrLimitAmtsAssocMember = inEmpBdEmplyrLimitAmts;
			EmpBdEmplyeQtdCostsAssocMember = inEmpBdEmplyeQtdCosts;
			EmpBdEmplyeQtdGstTaxsAssocMember = inEmpBdEmplyeQtdGstTaxs;
			EmpBdEmplyrQtdCostsAssocMember = inEmpBdEmplyrQtdCosts;
			EmpBdEmplyrQtdGstTaxsAssocMember = inEmpBdEmplyrQtdGstTaxs;
			EmpBdEmplyeFyrCostsAssocMember = inEmpBdEmplyeFyrCosts;
			EmpBdEmplyeFyrGstTaxsAssocMember = inEmpBdEmplyeFyrGstTaxs;
			EmpBdEmplyrFyrCostsAssocMember = inEmpBdEmplyrFyrCosts;
			EmpBdEmplyrFyrGstTaxsAssocMember = inEmpBdEmplyrFyrGstTaxs;
			EmpBdEmplyeYtdCostsAssocMember = inEmpBdEmplyeYtdCosts;
			EmpBdEmplyeYtdGstTaxsAssocMember = inEmpBdEmplyeYtdGstTaxs;
			EmpBdEmplyrYtdCostsAssocMember = inEmpBdEmplyrYtdCosts;
			EmpBdEmplyrYtdGstTaxsAssocMember = inEmpBdEmplyrYtdGstTaxs;
			EmpBdGstCompYtdAmtsAssocMember = inEmpBdGstCompYtdAmts;
		}
	}
	
	[Serializable]
	public class EmployesDirDep
	{
		public string EmpDepositCodesAssocMember;	
		public string EmpDepositTypesAssocMember;	
		public string EmpDepositAccountsAssocMember;	
		public int? EmpDepositPrioritiesAssocMember;	
		public DateTime? EmpDepositStartDatesAssocMember;	
		public string EmpDepositChangeFlagsAssocMember;	
		public Decimal? EmpDepositAmountsAssocMember;	
		public DateTime? EmpDepositEndDatesAssocMember;	
		public DateTime? EmpDepositAdddateAssocMember;	
		public string EmpDepositAddoprAssocMember;	
		public DateTime? EmpDepositAddtimeAssocMember;	
		public DateTime? EmpDepositChgdateAssocMember;	
		public string EmpDepositChgoprAssocMember;	
		public DateTime? EmpDepositChgtimeAssocMember;	
		public string EmpDepositNicknameAssocMember;	
		public string EmpDepAcctsLast4AssocMember;	
		public string EmpDepositIdAssocMember;	
		public EmployesDirDep() {}
		public EmployesDirDep(
			string inEmpDepositCodes,
			string inEmpDepositTypes,
			string inEmpDepositAccounts,
			int? inEmpDepositPriorities,
			DateTime? inEmpDepositStartDates,
			string inEmpDepositChangeFlags,
			Decimal? inEmpDepositAmounts,
			DateTime? inEmpDepositEndDates,
			DateTime? inEmpDepositAdddate,
			string inEmpDepositAddopr,
			DateTime? inEmpDepositAddtime,
			DateTime? inEmpDepositChgdate,
			string inEmpDepositChgopr,
			DateTime? inEmpDepositChgtime,
			string inEmpDepositNickname,
			string inEmpDepAcctsLast4,
			string inEmpDepositId)
		{
			EmpDepositCodesAssocMember = inEmpDepositCodes;
			EmpDepositTypesAssocMember = inEmpDepositTypes;
			EmpDepositAccountsAssocMember = inEmpDepositAccounts;
			EmpDepositPrioritiesAssocMember = inEmpDepositPriorities;
			EmpDepositStartDatesAssocMember = inEmpDepositStartDates;
			EmpDepositChangeFlagsAssocMember = inEmpDepositChangeFlags;
			EmpDepositAmountsAssocMember = inEmpDepositAmounts;
			EmpDepositEndDatesAssocMember = inEmpDepositEndDates;
			EmpDepositAdddateAssocMember = inEmpDepositAdddate;
			EmpDepositAddoprAssocMember = inEmpDepositAddopr;
			EmpDepositAddtimeAssocMember = inEmpDepositAddtime;
			EmpDepositChgdateAssocMember = inEmpDepositChgdate;
			EmpDepositChgoprAssocMember = inEmpDepositChgopr;
			EmpDepositChgtimeAssocMember = inEmpDepositChgtime;
			EmpDepositNicknameAssocMember = inEmpDepositNickname;
			EmpDepAcctsLast4AssocMember = inEmpDepAcctsLast4;
			EmpDepositIdAssocMember = inEmpDepositId;
		}
	}
}
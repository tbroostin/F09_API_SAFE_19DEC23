//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 2:25:45 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: HRPER
//     Application: HR
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.HumanResources.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Hrper")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 2:25:45 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "HRPER", EntityType = "PHYS")]
	public class Hrper : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: ALL.STATUSES
		/// </summary>
		[DataMember(Order = 0, Name = "ALL.STATUSES")]
		public List<string> AllStatuses { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERSTAT.START.DATE
		/// </summary>
		[DataMember(Order = 1, Name = "HRP.PERSTAT.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerstatStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERSTAT.END.DATE
		/// </summary>
		[DataMember(Order = 2, Name = "HRP.PERSTAT.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerstatEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: ALL.POSITION
		/// </summary>
		[DataMember(Order = 3, Name = "ALL.POSITION")]
		public List<string> AllPosition { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERPOS.START.DATE
		/// </summary>
		[DataMember(Order = 4, Name = "HRP.PERPOS.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerposStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERPOS.END.DATE
		/// </summary>
		[DataMember(Order = 5, Name = "HRP.PERPOS.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerposEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERPOS.LAST.PAY.DATE
		/// </summary>
		[DataMember(Order = 6, Name = "HRP.PERPOS.LAST.PAY.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerposLastPayDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERPOS.POSITION.ID
		/// </summary>
		[DataMember(Order = 7, Name = "HRP.PERPOS.POSITION.ID")]
		public List<string> HrpPerposPositionId { get; set; }
		
		/// <summary>
		/// CDD Name: ALL.BENEFITS
		/// </summary>
		[DataMember(Order = 8, Name = "ALL.BENEFITS")]
		public List<string> AllBenefits { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERBEN.ENROLL.DATE
		/// </summary>
		[DataMember(Order = 9, Name = "HRP.PERBEN.ENROLL.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerbenEnrollDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERBEN.CANCEL.DATE
		/// </summary>
		[DataMember(Order = 10, Name = "HRP.PERBEN.CANCEL.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerbenCancelDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERBEN.LAST.PAY.DATE
		/// </summary>
		[DataMember(Order = 11, Name = "HRP.PERBEN.LAST.PAY.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrpPerbenLastPayDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PERBEN.BD.ID
		/// </summary>
		[DataMember(Order = 12, Name = "HRP.PERBEN.BD.ID")]
		public List<string> HrpPerbenBdId { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.EFFECT.EMPLOY.DATE
		/// </summary>
		[DataMember(Order = 25, Name = "HRP.EFFECT.EMPLOY.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? HrpEffectEmployDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.EFFECT.TERM.DATE
		/// </summary>
		[DataMember(Order = 26, Name = "HRP.EFFECT.TERM.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? HrpEffectTermDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.EFFECT.RETIRE.DATE
		/// </summary>
		[DataMember(Order = 27, Name = "HRP.EFFECT.RETIRE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? HrpEffectRetireDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.PRI.CAMPUS.LOCATION
		/// </summary>
		[DataMember(Order = 40, Name = "HRP.PRI.CAMPUS.LOCATION")]
		public string HrpPriCampusLocation { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.REHIRE.ELIGIBILITY
		/// </summary>
		[DataMember(Order = 149, Name = "HRP.REHIRE.ELIGIBILITY")]
		public string HrpRehireEligibility { get; set; }
		
		/// <summary>
		/// CDD Name: HRP.NONEMP.POSITION
		/// </summary>
		[DataMember(Order = 151, Name = "HRP.NONEMP.POSITION")]
		public string HrpNonempPosition { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<HrperStatusDates> StatusDatesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<HrperPerposInfo> PerposInfoEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<HrperPerbenInfo> PerbenInfoEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: STATUS.DATES
			
			StatusDatesEntityAssociation = new List<HrperStatusDates>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(HrpPerstatStartDate != null)
			{
				int numStatusDates = HrpPerstatStartDate.Count;
				if (HrpPerstatEndDate !=null && HrpPerstatEndDate.Count > numStatusDates) numStatusDates = HrpPerstatEndDate.Count;

				for (int i = 0; i < numStatusDates; i++)
				{

					DateTime? value0 = null;
					if (HrpPerstatStartDate != null && i < HrpPerstatStartDate.Count)
					{
						value0 = HrpPerstatStartDate[i];
					}


					DateTime? value1 = null;
					if (HrpPerstatEndDate != null && i < HrpPerstatEndDate.Count)
					{
						value1 = HrpPerstatEndDate[i];
					}

					StatusDatesEntityAssociation.Add(new HrperStatusDates( value0, value1));
				}
			}
			// EntityAssociation Name: PERPOS.INFO
			
			PerposInfoEntityAssociation = new List<HrperPerposInfo>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(HrpPerposPositionId != null)
			{
				int numPerposInfo = HrpPerposPositionId.Count;
				if (HrpPerposStartDate !=null && HrpPerposStartDate.Count > numPerposInfo) numPerposInfo = HrpPerposStartDate.Count;
				if (HrpPerposEndDate !=null && HrpPerposEndDate.Count > numPerposInfo) numPerposInfo = HrpPerposEndDate.Count;
				if (HrpPerposLastPayDate !=null && HrpPerposLastPayDate.Count > numPerposInfo) numPerposInfo = HrpPerposLastPayDate.Count;

				for (int i = 0; i < numPerposInfo; i++)
				{

					DateTime? value0 = null;
					if (HrpPerposStartDate != null && i < HrpPerposStartDate.Count)
					{
						value0 = HrpPerposStartDate[i];
					}


					DateTime? value1 = null;
					if (HrpPerposEndDate != null && i < HrpPerposEndDate.Count)
					{
						value1 = HrpPerposEndDate[i];
					}


					DateTime? value2 = null;
					if (HrpPerposLastPayDate != null && i < HrpPerposLastPayDate.Count)
					{
						value2 = HrpPerposLastPayDate[i];
					}


					string value3 = "";
					if (HrpPerposPositionId != null && i < HrpPerposPositionId.Count)
					{
						value3 = HrpPerposPositionId[i];
					}

					PerposInfoEntityAssociation.Add(new HrperPerposInfo( value0, value1, value2, value3));
				}
			}
			// EntityAssociation Name: PERBEN.INFO
			
			PerbenInfoEntityAssociation = new List<HrperPerbenInfo>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(HrpPerbenBdId != null)
			{
				int numPerbenInfo = HrpPerbenBdId.Count;
				if (HrpPerbenEnrollDate !=null && HrpPerbenEnrollDate.Count > numPerbenInfo) numPerbenInfo = HrpPerbenEnrollDate.Count;
				if (HrpPerbenCancelDate !=null && HrpPerbenCancelDate.Count > numPerbenInfo) numPerbenInfo = HrpPerbenCancelDate.Count;
				if (HrpPerbenLastPayDate !=null && HrpPerbenLastPayDate.Count > numPerbenInfo) numPerbenInfo = HrpPerbenLastPayDate.Count;

				for (int i = 0; i < numPerbenInfo; i++)
				{

					DateTime? value0 = null;
					if (HrpPerbenEnrollDate != null && i < HrpPerbenEnrollDate.Count)
					{
						value0 = HrpPerbenEnrollDate[i];
					}


					DateTime? value1 = null;
					if (HrpPerbenCancelDate != null && i < HrpPerbenCancelDate.Count)
					{
						value1 = HrpPerbenCancelDate[i];
					}


					DateTime? value2 = null;
					if (HrpPerbenLastPayDate != null && i < HrpPerbenLastPayDate.Count)
					{
						value2 = HrpPerbenLastPayDate[i];
					}


					string value3 = "";
					if (HrpPerbenBdId != null && i < HrpPerbenBdId.Count)
					{
						value3 = HrpPerbenBdId[i];
					}

					PerbenInfoEntityAssociation.Add(new HrperPerbenInfo( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class HrperStatusDates
	{
		public DateTime? HrpPerstatStartDateAssocMember;	
		public DateTime? HrpPerstatEndDateAssocMember;	
		public HrperStatusDates() {}
		public HrperStatusDates(
			DateTime? inHrpPerstatStartDate,
			DateTime? inHrpPerstatEndDate)
		{
			HrpPerstatStartDateAssocMember = inHrpPerstatStartDate;
			HrpPerstatEndDateAssocMember = inHrpPerstatEndDate;
		}
	}
	
	[Serializable]
	public class HrperPerposInfo
	{
		public DateTime? HrpPerposStartDateAssocMember;	
		public DateTime? HrpPerposEndDateAssocMember;	
		public DateTime? HrpPerposLastPayDateAssocMember;	
		public string HrpPerposPositionIdAssocMember;	
		public HrperPerposInfo() {}
		public HrperPerposInfo(
			DateTime? inHrpPerposStartDate,
			DateTime? inHrpPerposEndDate,
			DateTime? inHrpPerposLastPayDate,
			string inHrpPerposPositionId)
		{
			HrpPerposStartDateAssocMember = inHrpPerposStartDate;
			HrpPerposEndDateAssocMember = inHrpPerposEndDate;
			HrpPerposLastPayDateAssocMember = inHrpPerposLastPayDate;
			HrpPerposPositionIdAssocMember = inHrpPerposPositionId;
		}
	}
	
	[Serializable]
	public class HrperPerbenInfo
	{
		public DateTime? HrpPerbenEnrollDateAssocMember;	
		public DateTime? HrpPerbenCancelDateAssocMember;	
		public DateTime? HrpPerbenLastPayDateAssocMember;	
		public string HrpPerbenBdIdAssocMember;	
		public HrperPerbenInfo() {}
		public HrperPerbenInfo(
			DateTime? inHrpPerbenEnrollDate,
			DateTime? inHrpPerbenCancelDate,
			DateTime? inHrpPerbenLastPayDate,
			string inHrpPerbenBdId)
		{
			HrpPerbenEnrollDateAssocMember = inHrpPerbenEnrollDate;
			HrpPerbenCancelDateAssocMember = inHrpPerbenCancelDate;
			HrpPerbenLastPayDateAssocMember = inHrpPerbenLastPayDate;
			HrpPerbenBdIdAssocMember = inHrpPerbenBdId;
		}
	}
}
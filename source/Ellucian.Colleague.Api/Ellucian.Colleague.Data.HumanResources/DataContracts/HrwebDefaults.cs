//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 2:26:47 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: HRWEB.DEFAULTS
//     Application: HR
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.HumanResources.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "HrwebDefaults")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 2:26:47 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "HRWEB.DEFAULTS", EntityType = "PERM")]
	public class HrwebDefaults : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: HRWEB.SUPERVISOR.BEFORE.DAYS
		/// </summary>
		[DataMember(Order = 0, Name = "HRWEB.SUPERVISOR.BEFORE.DAYS")]
		public List<int?> HrwebSupervisorBeforeDays { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.SUPERVISOR.AFTER.DAYS
		/// </summary>
		[DataMember(Order = 1, Name = "HRWEB.SUPERVISOR.AFTER.DAYS")]
		public List<int?> HrwebSupervisorAfterDays { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.SUPERVISOR.CUTOFF.TIME
		/// </summary>
		[DataMember(Order = 2, Name = "HRWEB.SUPERVISOR.CUTOFF.TIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrwebSupervisorCutoffTime { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.EMPL.BEFORE.DAYS
		/// </summary>
		[DataMember(Order = 3, Name = "HRWEB.EMPL.BEFORE.DAYS")]
		public List<int?> HrwebEmplBeforeDays { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.EMPL.AFTER.DAYS
		/// </summary>
		[DataMember(Order = 4, Name = "HRWEB.EMPL.AFTER.DAYS")]
		public List<int?> HrwebEmplAfterDays { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.EMPL.CUTOFF.TIME
		/// </summary>
		[DataMember(Order = 5, Name = "HRWEB.EMPL.CUTOFF.TIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> HrwebEmplCutoffTime { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.PAY.ADVICE.CHECK.DATE
		/// </summary>
		[DataMember(Order = 23, Name = "HRWEB.PAY.ADVICE.CHECK.DATE")]
		public string HrwebPayAdviceCheckDate { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.EMPL.PAYCYCLE
		/// </summary>
		[DataMember(Order = 25, Name = "HRWEB.EMPL.PAYCYCLE")]
		public List<string> HrwebEmplPaycycle { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.SUPERVISOR.PAYCYCLE
		/// </summary>
		[DataMember(Order = 26, Name = "HRWEB.SUPERVISOR.PAYCYCLE")]
		public List<string> HrwebSupervisorPaycycle { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.PAY.ADVICE.PRIOR.YEARS
		/// </summary>
		[DataMember(Order = 32, Name = "HRWEB.PAY.ADVICE.PRIOR.YEARS")]
		public string HrwebPayAdvicePriorYears { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.W2O.MASK.SSN
		/// </summary>
		[DataMember(Order = 63, Name = "HRWEB.W2O.MASK.SSN")]
		public string HrwebW2oMaskSsn { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.1095C.MASK.SSN
		/// </summary>
		[DataMember(Order = 64, Name = "HRWEB.1095C.MASK.SSN")]
		public string Hrweb1095cMaskSsn { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.PAY.ADVICE.DISPLAY.SSN
		/// </summary>
		[DataMember(Order = 69, Name = "HRWEB.PAY.ADVICE.DISPLAY.SSN")]
		public string HrwebPayAdviceDisplaySsn { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.PAY.ADVICE.TEXT
		/// </summary>
		[DataMember(Order = 70, Name = "HRWEB.PAY.ADVICE.TEXT")]
		public string HrwebPayAdviceText { get; set; }
		
		/// <summary>
		/// CDD Name: HRWEB.PAY.ADVICE.FILING.STAT
		/// </summary>
		[DataMember(Order = 71, Name = "HRWEB.PAY.ADVICE.FILING.STAT")]
		public string HrwebPayAdviceFilingStat { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<HrwebDefaultsSupercutoff> SupercutoffEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<HrwebDefaultsEmplcutoff> EmplcutoffEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: SUPERCUTOFF
			
			SupercutoffEntityAssociation = new List<HrwebDefaultsSupercutoff>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(HrwebSupervisorPaycycle != null)
			{
				int numSupercutoff = HrwebSupervisorPaycycle.Count;
				if (HrwebSupervisorBeforeDays !=null && HrwebSupervisorBeforeDays.Count > numSupercutoff) numSupercutoff = HrwebSupervisorBeforeDays.Count;
				if (HrwebSupervisorAfterDays !=null && HrwebSupervisorAfterDays.Count > numSupercutoff) numSupercutoff = HrwebSupervisorAfterDays.Count;
				if (HrwebSupervisorCutoffTime !=null && HrwebSupervisorCutoffTime.Count > numSupercutoff) numSupercutoff = HrwebSupervisorCutoffTime.Count;

				for (int i = 0; i < numSupercutoff; i++)
				{

					int? value0 = null;
					if (HrwebSupervisorBeforeDays != null && i < HrwebSupervisorBeforeDays.Count)
					{
						value0 = HrwebSupervisorBeforeDays[i];
					}


					int? value1 = null;
					if (HrwebSupervisorAfterDays != null && i < HrwebSupervisorAfterDays.Count)
					{
						value1 = HrwebSupervisorAfterDays[i];
					}


					DateTime? value2 = null;
					if (HrwebSupervisorCutoffTime != null && i < HrwebSupervisorCutoffTime.Count)
					{
						value2 = HrwebSupervisorCutoffTime[i];
					}


					string value3 = "";
					if (HrwebSupervisorPaycycle != null && i < HrwebSupervisorPaycycle.Count)
					{
						value3 = HrwebSupervisorPaycycle[i];
					}

					SupercutoffEntityAssociation.Add(new HrwebDefaultsSupercutoff( value0, value1, value2, value3));
				}
			}
			// EntityAssociation Name: EMPLCUTOFF
			
			EmplcutoffEntityAssociation = new List<HrwebDefaultsEmplcutoff>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(HrwebEmplPaycycle != null)
			{
				int numEmplcutoff = HrwebEmplPaycycle.Count;
				if (HrwebEmplBeforeDays !=null && HrwebEmplBeforeDays.Count > numEmplcutoff) numEmplcutoff = HrwebEmplBeforeDays.Count;
				if (HrwebEmplAfterDays !=null && HrwebEmplAfterDays.Count > numEmplcutoff) numEmplcutoff = HrwebEmplAfterDays.Count;
				if (HrwebEmplCutoffTime !=null && HrwebEmplCutoffTime.Count > numEmplcutoff) numEmplcutoff = HrwebEmplCutoffTime.Count;

				for (int i = 0; i < numEmplcutoff; i++)
				{

					int? value0 = null;
					if (HrwebEmplBeforeDays != null && i < HrwebEmplBeforeDays.Count)
					{
						value0 = HrwebEmplBeforeDays[i];
					}


					int? value1 = null;
					if (HrwebEmplAfterDays != null && i < HrwebEmplAfterDays.Count)
					{
						value1 = HrwebEmplAfterDays[i];
					}


					DateTime? value2 = null;
					if (HrwebEmplCutoffTime != null && i < HrwebEmplCutoffTime.Count)
					{
						value2 = HrwebEmplCutoffTime[i];
					}


					string value3 = "";
					if (HrwebEmplPaycycle != null && i < HrwebEmplPaycycle.Count)
					{
						value3 = HrwebEmplPaycycle[i];
					}

					EmplcutoffEntityAssociation.Add(new HrwebDefaultsEmplcutoff( value0, value1, value2, value3));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class HrwebDefaultsSupercutoff
	{
		public int? HrwebSupervisorBeforeDaysAssocMember;	
		public int? HrwebSupervisorAfterDaysAssocMember;	
		public DateTime? HrwebSupervisorCutoffTimeAssocMember;	
		public string HrwebSupervisorPaycycleAssocMember;	
		public HrwebDefaultsSupercutoff() {}
		public HrwebDefaultsSupercutoff(
			int? inHrwebSupervisorBeforeDays,
			int? inHrwebSupervisorAfterDays,
			DateTime? inHrwebSupervisorCutoffTime,
			string inHrwebSupervisorPaycycle)
		{
			HrwebSupervisorBeforeDaysAssocMember = inHrwebSupervisorBeforeDays;
			HrwebSupervisorAfterDaysAssocMember = inHrwebSupervisorAfterDays;
			HrwebSupervisorCutoffTimeAssocMember = inHrwebSupervisorCutoffTime;
			HrwebSupervisorPaycycleAssocMember = inHrwebSupervisorPaycycle;
		}
	}
	
	[Serializable]
	public class HrwebDefaultsEmplcutoff
	{
		public int? HrwebEmplBeforeDaysAssocMember;	
		public int? HrwebEmplAfterDaysAssocMember;	
		public DateTime? HrwebEmplCutoffTimeAssocMember;	
		public string HrwebEmplPaycycleAssocMember;	
		public HrwebDefaultsEmplcutoff() {}
		public HrwebDefaultsEmplcutoff(
			int? inHrwebEmplBeforeDays,
			int? inHrwebEmplAfterDays,
			DateTime? inHrwebEmplCutoffTime,
			string inHrwebEmplPaycycle)
		{
			HrwebEmplBeforeDaysAssocMember = inHrwebEmplBeforeDays;
			HrwebEmplAfterDaysAssocMember = inHrwebEmplAfterDays;
			HrwebEmplCutoffTimeAssocMember = inHrwebEmplCutoffTime;
			HrwebEmplPaycycleAssocMember = inHrwebEmplPaycycle;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 2:30:04 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: PAYTODAT
//     Application: HR
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.HumanResources.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Paytodat")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 2:30:04 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "PAYTODAT", EntityType = "PHYS")]
	public class Paytodat : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: PTD.FUND.SOURCES
		/// </summary>
		[DataMember(Order = 0, Name = "PTD.FUND.SOURCES")]
		public List<string> PtdFundSources { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.GL.NOS
		/// </summary>
		[DataMember(Order = 1, Name = "PTD.GL.NOS")]
		public List<string> PtdGlNos { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.H.S.FLAGS
		/// </summary>
		[DataMember(Order = 2, Name = "PTD.H.S.FLAGS")]
		public List<string> PtdHSFlags { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EARN.TYPES
		/// </summary>
		[DataMember(Order = 3, Name = "PTD.EARN.TYPES")]
		public List<string> PtdEarnTypes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.RATES
		/// </summary>
		[DataMember(Order = 4, Name = "PTD.RATES")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdRates { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.HOURS
		/// </summary>
		[DataMember(Order = 5, Name = "PTD.HOURS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdHours { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.AMOUNTS
		/// </summary>
		[DataMember(Order = 6, Name = "PTD.AMOUNTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdAmounts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.NO.OF.PERIODS
		/// </summary>
		[DataMember(Order = 7, Name = "PTD.NO.OF.PERIODS")]
		public string PtdNoOfPeriods { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.GROSS
		/// </summary>
		[DataMember(Order = 8, Name = "PTD.GROSS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? PtdGross { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.CODES
		/// </summary>
		[DataMember(Order = 9, Name = "PTD.TAX.CODES")]
		public List<string> PtdTaxCodes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.EXEMPTIONS
		/// </summary>
		[DataMember(Order = 10, Name = "PTD.TAX.EXEMPTIONS")]
		public List<int?> PtdTaxExemptions { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.ALLOWANCES
		/// </summary>
		[DataMember(Order = 11, Name = "PTD.TAX.ALLOWANCES")]
		public List<int?> PtdTaxAllowances { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.FATERD.CODES
		/// </summary>
		[DataMember(Order = 12, Name = "PTD.TAX.FATERD.CODES")]
		public List<string> PtdTaxFaterdCodes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.FATERD.AMTS
		/// </summary>
		[DataMember(Order = 13, Name = "PTD.TAX.FATERD.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdTaxFaterdAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.LIABILITY.GL.NOS
		/// </summary>
		[DataMember(Order = 14, Name = "PTD.TAX.LIABILITY.GL.NOS")]
		public List<string> PtdTaxLiabilityGlNos { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYE.TAX.AMTS
		/// </summary>
		[DataMember(Order = 15, Name = "PTD.EMPLYE.TAX.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyeTaxAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYE.TAXABLE.AMTS
		/// </summary>
		[DataMember(Order = 16, Name = "PTD.EMPLYE.TAXABLE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyeTaxableAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.EXPENSE.GL.NOS
		/// </summary>
		[DataMember(Order = 17, Name = "PTD.TAX.EXPENSE.GL.NOS")]
		public List<string> PtdTaxExpenseGlNos { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYR.TAX.AMTS
		/// </summary>
		[DataMember(Order = 18, Name = "PTD.EMPLYR.TAX.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyrTaxAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYR.TAXABLE.AMTS
		/// </summary>
		[DataMember(Order = 19, Name = "PTD.EMPLYR.TAXABLE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyrTaxableAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.SPEC.TAX.AMTS
		/// </summary>
		[DataMember(Order = 20, Name = "PTD.SPEC.TAX.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdSpecTaxAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.DEFER.BD.CODES
		/// </summary>
		[DataMember(Order = 21, Name = "PTD.DEFER.BD.CODES")]
		public List<string> PtdDeferBdCodes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.DEFER.BD.EMPLYE.AMTS
		/// </summary>
		[DataMember(Order = 22, Name = "PTD.DEFER.BD.EMPLYE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdDeferBdEmplyeAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.DEFER.BD.EMPLYR.AMTS
		/// </summary>
		[DataMember(Order = 23, Name = "PTD.DEFER.BD.EMPLYR.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdDeferBdEmplyrAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAXABLE.BD.CODES
		/// </summary>
		[DataMember(Order = 24, Name = "PTD.TAXABLE.BD.CODES")]
		public List<string> PtdTaxableBdCodes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAXABLE.BD.EMPLYR.AMTS
		/// </summary>
		[DataMember(Order = 25, Name = "PTD.TAXABLE.BD.EMPLYR.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdTaxableBdEmplyrAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.CODES
		/// </summary>
		[DataMember(Order = 26, Name = "PTD.BD.CODES")]
		public List<string> PtdBdCodes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BENDEDCS.ID
		/// </summary>
		[DataMember(Order = 27, Name = "PTD.BENDEDCS.ID")]
		public List<string> PtdBendedcsId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.PRIORITIES
		/// </summary>
		[DataMember(Order = 28, Name = "PTD.BD.PRIORITIES")]
		public List<string> PtdBdPriorities { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EXTENSIONS
		/// </summary>
		[DataMember(Order = 29, Name = "PTD.BD.EXTENSIONS")]
		public List<int?> PtdBdExtensions { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.DEF.AMTS
		/// </summary>
		[DataMember(Order = 30, Name = "PTD.BD.EMPLYE.DEF.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeDefAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.DEF.PCTS
		/// </summary>
		[DataMember(Order = 31, Name = "PTD.BD.EMPLYE.DEF.PCTS")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeDefPcts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.INSURE.TAX.EXEMPT
		/// </summary>
		[DataMember(Order = 32, Name = "PTD.BD.INSURE.TAX.EXEMPT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdInsureTaxExempt { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.DEF.INS.AMTS
		/// </summary>
		[DataMember(Order = 33, Name = "PTD.BD.EMPLYE.DEF.INS.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeDefInsAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.AR.NET.CALC
		/// </summary>
		[DataMember(Order = 34, Name = "PTD.BD.EMPLYE.AR.NET.CALC")]
		public List<string> PtdBdEmplyeArNetCalc { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.LIMIT.AMTS
		/// </summary>
		[DataMember(Order = 35, Name = "PTD.BD.EMPLYE.LIMIT.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeLimitAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.LIABILITY.GL.NOS
		/// </summary>
		[DataMember(Order = 36, Name = "PTD.BD.LIABILITY.GL.NOS")]
		public List<string> PtdBdLiabilityGlNos { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.CALC.AMTS
		/// </summary>
		[DataMember(Order = 37, Name = "PTD.BD.EMPLYE.CALC.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeCalcAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.DEF.AMTS
		/// </summary>
		[DataMember(Order = 38, Name = "PTD.BD.EMPLYR.DEF.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrDefAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.DEF.PCTS
		/// </summary>
		[DataMember(Order = 39, Name = "PTD.BD.EMPLYR.DEF.PCTS")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrDefPcts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.LIMIT.AMTS
		/// </summary>
		[DataMember(Order = 40, Name = "PTD.BD.EMPLYR.LIMIT.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrLimitAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EXPENSE.GL.NOS
		/// </summary>
		[DataMember(Order = 41, Name = "PTD.BD.EXPENSE.GL.NOS")]
		public List<string> PtdBdExpenseGlNos { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.CALC.AMTS
		/// </summary>
		[DataMember(Order = 42, Name = "PTD.BD.EMPLYR.CALC.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrCalcAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.AR.TYPES
		/// </summary>
		[DataMember(Order = 43, Name = "PTD.BD.AR.TYPES")]
		public List<string> PtdBdArTypes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.AR.REFS
		/// </summary>
		[DataMember(Order = 45, Name = "PTD.BD.AR.REFS")]
		public List<string> PtdBdArRefs { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.BASE.AMTS
		/// </summary>
		[DataMember(Order = 46, Name = "PTD.BD.EMPLYE.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.CODES
		/// </summary>
		[DataMember(Order = 52, Name = "PTD.LV.CODES")]
		public List<string> PtdLvCodes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.ACCRUAL.RATES
		/// </summary>
		[DataMember(Order = 53, Name = "PTD.LV.ACCRUAL.RATES")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdLvAccrualRates { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.PRIOR.BALANCES
		/// </summary>
		[DataMember(Order = 54, Name = "PTD.LV.PRIOR.BALANCES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdLvPriorBalances { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.LIMITS
		/// </summary>
		[DataMember(Order = 55, Name = "PTD.LV.LIMITS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdLvLimits { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYE.TOTAL.TAXES
		/// </summary>
		[DataMember(Order = 56, Name = "PTD.EMPLYE.TOTAL.TAXES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? PtdEmplyeTotalTaxes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYE.TOTAL.BENDEDS
		/// </summary>
		[DataMember(Order = 57, Name = "PTD.EMPLYE.TOTAL.BENDEDS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? PtdEmplyeTotalBendeds { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.NET
		/// </summary>
		[DataMember(Order = 58, Name = "PTD.NET")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? PtdNet { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.STATUS
		/// </summary>
		[DataMember(Order = 59, Name = "PTD.STATUS")]
		public string PtdStatus { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.CHECK.NO
		/// </summary>
		[DataMember(Order = 61, Name = "PTD.CHECK.NO")]
		public string PtdCheckNo { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.CHECK.AMOUNT
		/// </summary>
		[DataMember(Order = 62, Name = "PTD.CHECK.AMOUNT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? PtdCheckAmount { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.CHECK.DATE
		/// </summary>
		[DataMember(Order = 63, Name = "PTD.CHECK.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PtdCheckDate { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.ADVICE.NO
		/// </summary>
		[DataMember(Order = 65, Name = "PTD.ADVICE.NO")]
		public string PtdAdviceNo { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.ADVICE.AMOUNT
		/// </summary>
		[DataMember(Order = 66, Name = "PTD.ADVICE.AMOUNT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? PtdAdviceAmount { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.ADVICE.DATE
		/// </summary>
		[DataMember(Order = 67, Name = "PTD.ADVICE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PtdAdviceDate { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.BASE.AMTS
		/// </summary>
		[DataMember(Order = 73, Name = "PTD.BD.EMPLYR.BASE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrBaseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.POSITION.ID
		/// </summary>
		[DataMember(Order = 74, Name = "PTD.POSITION.ID")]
		public List<string> PtdPositionId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PERPOSWG.ID
		/// </summary>
		[DataMember(Order = 78, Name = "PTD.PERPOSWG.ID")]
		public List<string> PtdPerposwgId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.STIPEND.ID
		/// </summary>
		[DataMember(Order = 80, Name = "PTD.STIPEND.ID")]
		public List<string> PtdStipendId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.PERLEAVE.IDS
		/// </summary>
		[DataMember(Order = 81, Name = "PTD.LV.PERLEAVE.IDS")]
		public List<int?> PtdLvPerleaveIds { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.TYPES
		/// </summary>
		[DataMember(Order = 82, Name = "PTD.LV.TYPES")]
		public List<string> PtdLvTypes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.ACCRUED.HOURS
		/// </summary>
		[DataMember(Order = 83, Name = "PTD.LV.ACCRUED.HOURS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdLvAccruedHours { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.ACCRUED.COMMENTS
		/// </summary>
		[DataMember(Order = 84, Name = "PTD.LV.ACCRUED.COMMENTS")]
		public List<string> PtdLvAccruedComments { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.ACCRUED.AMTS
		/// </summary>
		[DataMember(Order = 85, Name = "PTD.LV.ACCRUED.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdLvAccruedAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.ACCRUED.FROM.ACCTS
		/// </summary>
		[DataMember(Order = 86, Name = "PTD.LV.ACCRUED.FROM.ACCTS")]
		public List<string> PtdLvAccruedFromAccts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.EARN.TYPES
		/// </summary>
		[DataMember(Order = 87, Name = "PTD.LV.EARN.TYPES")]
		public List<string> PtdLvEarnTypes { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.TAKEN.HOURS
		/// </summary>
		[DataMember(Order = 88, Name = "PTD.LV.TAKEN.HOURS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdLvTakenHours { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.EXPENSE.POSITIONS
		/// </summary>
		[DataMember(Order = 91, Name = "PTD.TAX.EXPENSE.POSITIONS")]
		public List<string> PtdTaxExpensePositions { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EXPENSE.POSITIONS
		/// </summary>
		[DataMember(Order = 92, Name = "PTD.BD.EXPENSE.POSITIONS")]
		public List<string> PtdBdExpensePositions { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BASE.EARNINGS
		/// </summary>
		[DataMember(Order = 94, Name = "PTD.BASE.EARNINGS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBaseEarnings { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EARN.FACTOR.EARNINGS
		/// </summary>
		[DataMember(Order = 95, Name = "PTD.EARN.FACTOR.EARNINGS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEarnFactorEarnings { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EARNDIFF.ID
		/// </summary>
		[DataMember(Order = 96, Name = "PTD.EARNDIFF.ID")]
		public List<string> PtdEarndiffId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EARN.DIFF.UNITS
		/// </summary>
		[DataMember(Order = 97, Name = "PTD.EARN.DIFF.UNITS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEarnDiffUnits { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EARN.DIFF.EARNINGS
		/// </summary>
		[DataMember(Order = 98, Name = "PTD.EARN.DIFF.EARNINGS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEarnDiffEarnings { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EARN.DIFF.RATES
		/// </summary>
		[DataMember(Order = 99, Name = "PTD.EARN.DIFF.RATES")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEarnDiffRates { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.CAN.GROSS.AMTS
		/// </summary>
		[DataMember(Order = 111, Name = "PTD.CAN.GROSS.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdCanGrossAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYE.CINC.FED.AMTS
		/// </summary>
		[DataMember(Order = 112, Name = "PTD.EMPLYE.CINC.FED.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyeCincFedAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYE.CINC.PROV.AMTS
		/// </summary>
		[DataMember(Order = 113, Name = "PTD.EMPLYE.CINC.PROV.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyeCincProvAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYR.CINC.FED.AMTS
		/// </summary>
		[DataMember(Order = 114, Name = "PTD.EMPLYR.CINC.FED.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyrCincFedAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EMPLYR.CINC.PROV.AMTS
		/// </summary>
		[DataMember(Order = 115, Name = "PTD.EMPLYR.CINC.PROV.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdEmplyrCincProvAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.CALC.COSTS
		/// </summary>
		[DataMember(Order = 117, Name = "PTD.BD.EMPLYE.CALC.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeCalcCosts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.CALC.GST.TAXS
		/// </summary>
		[DataMember(Order = 118, Name = "PTD.BD.EMPLYE.CALC.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeCalcGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.CALC.GST.GLS
		/// </summary>
		[DataMember(Order = 119, Name = "PTD.BD.EMPLYE.CALC.GST.GLS")]
		public List<string> PtdBdEmplyeCalcGstGls { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.CALC.COSTS
		/// </summary>
		[DataMember(Order = 120, Name = "PTD.BD.EMPLYR.CALC.COSTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrCalcCosts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.CALC.GST.TAXS
		/// </summary>
		[DataMember(Order = 121, Name = "PTD.BD.EMPLYR.CALC.GST.TAXS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrCalcGstTaxs { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.CALC.GST.GLS
		/// </summary>
		[DataMember(Order = 122, Name = "PTD.BD.EMPLYR.CALC.GST.GLS")]
		public List<string> PtdBdEmplyrCalcGstGls { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.GST.COMPONENT.AMTS
		/// </summary>
		[DataMember(Order = 123, Name = "PTD.BD.GST.COMPONENT.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdGstComponentAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.GST.COMPONENT.PCTS
		/// </summary>
		[DataMember(Order = 124, Name = "PTD.BD.GST.COMPONENT.PCTS")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdGstComponentPcts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYE.GST.TAX.PCTS
		/// </summary>
		[DataMember(Order = 125, Name = "PTD.BD.EMPLYE.GST.TAX.PCTS")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyeGstTaxPcts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EMPLYR.GST.TAX.PCTS
		/// </summary>
		[DataMember(Order = 126, Name = "PTD.BD.EMPLYR.GST.TAX.PCTS")]
		[DisplayFormat(DataFormatString = "{0:N4}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdEmplyrGstTaxPcts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PPDT.SUMMARY.FLAGS
		/// </summary>
		[DataMember(Order = 131, Name = "PTD.PPDT.SUMMARY.FLAGS")]
		public List<string> PtdPpdtSummaryFlags { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.EXPENSE.AMTS
		/// </summary>
		[DataMember(Order = 138, Name = "PTD.EXPENSE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdExpenseAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.ACCRUAL.AMTS
		/// </summary>
		[DataMember(Order = 139, Name = "PTD.ACCRUAL.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdAccrualAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.ACCRUAL.GL.NOS
		/// </summary>
		[DataMember(Order = 140, Name = "PTD.ACCRUAL.GL.NOS")]
		public List<string> PtdAccrualGlNos { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TX.ID.TO.REVERSE
		/// </summary>
		[DataMember(Order = 141, Name = "PTD.TX.ID.TO.REVERSE")]
		public List<string> PtdTxIdToReverse { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.EXP.CONTROLLER
		/// </summary>
		[DataMember(Order = 142, Name = "PTD.TAX.EXP.CONTROLLER")]
		public List<string> PtdTaxExpController { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.EXP.EMPLYR.TAX.AMTS
		/// </summary>
		[DataMember(Order = 143, Name = "PTD.TAX.EXP.EMPLYR.TAX.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdTaxExpEmplyrTaxAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.DEF.BD.CONTROLLER
		/// </summary>
		[DataMember(Order = 145, Name = "PTD.DEF.BD.CONTROLLER")]
		public List<string> PtdDefBdController { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.DEF.BD.EMPLYE.AMTS
		/// </summary>
		[DataMember(Order = 146, Name = "PTD.DEF.BD.EMPLYE.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdDefBdEmplyeAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.DEF.BD.EMPLYR.AMTS
		/// </summary>
		[DataMember(Order = 147, Name = "PTD.DEF.BD.EMPLYR.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdDefBdEmplyrAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TXBL.BD.CONTROLLER
		/// </summary>
		[DataMember(Order = 148, Name = "PTD.TXBL.BD.CONTROLLER")]
		public List<string> PtdTxblBdController { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TXBL.BD.EMPLYR.AMTS
		/// </summary>
		[DataMember(Order = 149, Name = "PTD.TXBL.BD.EMPLYR.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdTxblBdEmplyrAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EXP.CONTROLLER
		/// </summary>
		[DataMember(Order = 150, Name = "PTD.BD.EXP.CONTROLLER")]
		public List<string> PtdBdExpController { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.EXP.EMPLYR.CALC.AMTS
		/// </summary>
		[DataMember(Order = 151, Name = "PTD.BD.EXP.EMPLYR.CALC.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdBdExpEmplyrCalcAmts { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.TKN.CONTROLLER
		/// </summary>
		[DataMember(Order = 154, Name = "PTD.LV.TKN.CONTROLLER")]
		public List<string> PtdLvTknController { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.TKN.HOURS
		/// </summary>
		[DataMember(Order = 155, Name = "PTD.LV.TKN.HOURS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdLvTknHours { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PROJECTS.IDS
		/// </summary>
		[DataMember(Order = 156, Name = "PTD.PROJECTS.IDS")]
		public List<string> PtdProjectsIds { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.TAX.PROJECTS.IDS
		/// </summary>
		[DataMember(Order = 157, Name = "PTD.TAX.PROJECTS.IDS")]
		public List<string> PtdTaxProjectsIds { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.PROJECTS.IDS
		/// </summary>
		[DataMember(Order = 158, Name = "PTD.BD.PROJECTS.IDS")]
		public List<string> PtdBdProjectsIds { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.LV.PROJECTS.IDS
		/// </summary>
		[DataMember(Order = 161, Name = "PTD.LV.PROJECTS.IDS")]
		public List<string> PtdLvProjectsIds { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BEN.TX.ID
		/// </summary>
		[DataMember(Order = 162, Name = "PTD.BEN.TX.ID")]
		public List<string> PtdBenTxId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PREPAY.AMT
		/// </summary>
		[DataMember(Order = 165, Name = "PTD.PREPAY.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdPrepayAmt { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.ARREARS.AMT
		/// </summary>
		[DataMember(Order = 166, Name = "PTD.ARREARS.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdArrearsAmt { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.REPAY.MULT.OF.COST
		/// </summary>
		[DataMember(Order = 167, Name = "PTD.REPAY.MULT.OF.COST")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdRepayMultOfCost { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.REPAY.FIXED.AMT
		/// </summary>
		[DataMember(Order = 168, Name = "PTD.REPAY.FIXED.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdRepayFixedAmt { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.REPAY.AMT
		/// </summary>
		[DataMember(Order = 169, Name = "PTD.REPAY.AMT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdRepayAmt { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.AR.INVOICE.ID
		/// </summary>
		[DataMember(Order = 170, Name = "PTD.AR.INVOICE.ID")]
		public List<string> PtdArInvoiceId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PERBEN.ID
		/// </summary>
		[DataMember(Order = 171, Name = "PTD.PERBEN.ID")]
		public List<string> PtdPerbenId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PERBENCS.ID
		/// </summary>
		[DataMember(Order = 172, Name = "PTD.PERBENCS.ID")]
		public List<string> PtdPerbencsId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PREPAID.VENDOR.PAYMENT
		/// </summary>
		[DataMember(Order = 173, Name = "PTD.PREPAID.VENDOR.PAYMENT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdPrepaidVendorPayment { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.ARREARS.ELIGIBILITY
		/// </summary>
		[DataMember(Order = 174, Name = "PTD.ARREARS.ELIGIBILITY")]
		public List<string> PtdArrearsEligibility { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.AR.DEPOSIT.ID
		/// </summary>
		[DataMember(Order = 175, Name = "PTD.AR.DEPOSIT.ID")]
		public List<string> PtdArDepositId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.BD.AR.PAYMENTS.ID
		/// </summary>
		[DataMember(Order = 176, Name = "PTD.BD.AR.PAYMENTS.ID")]
		public List<string> PtdBdArPaymentsId { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.PRJ.ITEM.IDS
		/// </summary>
		[DataMember(Order = 177, Name = "PTD.PRJ.ITEM.IDS")]
		public List<string> PtdPrjItemIds { get; set; }
		
		/// <summary>
		/// CDD Name: PTD.GL.PCT.DIST
		/// </summary>
		[DataMember(Order = 178, Name = "PTD.GL.PCT.DIST")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PtdGlPctDist { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdearn> PtdearnEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdtaxes> PtdtaxesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdbnded> PtdbndedEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdleave> PtdleaveEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdtaxexp> PtdtaxexpEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtddefbd> PtddefbdEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdtxblbd> PtdtxblbdEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdbdexp> PtdbdexpEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PaytodatPtdlvtkn> PtdlvtknEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: PTDEARN
			
			PtdearnEntityAssociation = new List<PaytodatPtdearn>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdFundSources != null)
			{
				int numPtdearn = PtdFundSources.Count;
				if (PtdGlNos !=null && PtdGlNos.Count > numPtdearn) numPtdearn = PtdGlNos.Count;
				if (PtdHSFlags !=null && PtdHSFlags.Count > numPtdearn) numPtdearn = PtdHSFlags.Count;
				if (PtdEarnTypes !=null && PtdEarnTypes.Count > numPtdearn) numPtdearn = PtdEarnTypes.Count;
				if (PtdRates !=null && PtdRates.Count > numPtdearn) numPtdearn = PtdRates.Count;
				if (PtdHours !=null && PtdHours.Count > numPtdearn) numPtdearn = PtdHours.Count;
				if (PtdAmounts !=null && PtdAmounts.Count > numPtdearn) numPtdearn = PtdAmounts.Count;
				if (PtdPositionId !=null && PtdPositionId.Count > numPtdearn) numPtdearn = PtdPositionId.Count;
				if (PtdPerposwgId !=null && PtdPerposwgId.Count > numPtdearn) numPtdearn = PtdPerposwgId.Count;
				if (PtdStipendId !=null && PtdStipendId.Count > numPtdearn) numPtdearn = PtdStipendId.Count;
				if (PtdBaseEarnings !=null && PtdBaseEarnings.Count > numPtdearn) numPtdearn = PtdBaseEarnings.Count;
				if (PtdEarnFactorEarnings !=null && PtdEarnFactorEarnings.Count > numPtdearn) numPtdearn = PtdEarnFactorEarnings.Count;
				if (PtdEarndiffId !=null && PtdEarndiffId.Count > numPtdearn) numPtdearn = PtdEarndiffId.Count;
				if (PtdEarnDiffUnits !=null && PtdEarnDiffUnits.Count > numPtdearn) numPtdearn = PtdEarnDiffUnits.Count;
				if (PtdEarnDiffEarnings !=null && PtdEarnDiffEarnings.Count > numPtdearn) numPtdearn = PtdEarnDiffEarnings.Count;
				if (PtdEarnDiffRates !=null && PtdEarnDiffRates.Count > numPtdearn) numPtdearn = PtdEarnDiffRates.Count;
				if (PtdPpdtSummaryFlags !=null && PtdPpdtSummaryFlags.Count > numPtdearn) numPtdearn = PtdPpdtSummaryFlags.Count;
				if (PtdExpenseAmts !=null && PtdExpenseAmts.Count > numPtdearn) numPtdearn = PtdExpenseAmts.Count;
				if (PtdAccrualAmts !=null && PtdAccrualAmts.Count > numPtdearn) numPtdearn = PtdAccrualAmts.Count;
				if (PtdAccrualGlNos !=null && PtdAccrualGlNos.Count > numPtdearn) numPtdearn = PtdAccrualGlNos.Count;
				if (PtdProjectsIds !=null && PtdProjectsIds.Count > numPtdearn) numPtdearn = PtdProjectsIds.Count;
				if (PtdPrjItemIds !=null && PtdPrjItemIds.Count > numPtdearn) numPtdearn = PtdPrjItemIds.Count;
				if (PtdGlPctDist !=null && PtdGlPctDist.Count > numPtdearn) numPtdearn = PtdGlPctDist.Count;

				for (int i = 0; i < numPtdearn; i++)
				{

					string value0 = "";
					if (PtdFundSources != null && i < PtdFundSources.Count)
					{
						value0 = PtdFundSources[i];
					}


					string value1 = "";
					if (PtdGlNos != null && i < PtdGlNos.Count)
					{
						value1 = PtdGlNos[i];
					}


					string value2 = "";
					if (PtdHSFlags != null && i < PtdHSFlags.Count)
					{
						value2 = PtdHSFlags[i];
					}


					string value3 = "";
					if (PtdEarnTypes != null && i < PtdEarnTypes.Count)
					{
						value3 = PtdEarnTypes[i];
					}


					Decimal? value4 = null;
					if (PtdRates != null && i < PtdRates.Count)
					{
						value4 = PtdRates[i];
					}


					Decimal? value5 = null;
					if (PtdHours != null && i < PtdHours.Count)
					{
						value5 = PtdHours[i];
					}


					Decimal? value6 = null;
					if (PtdAmounts != null && i < PtdAmounts.Count)
					{
						value6 = PtdAmounts[i];
					}


					string value7 = "";
					if (PtdPositionId != null && i < PtdPositionId.Count)
					{
						value7 = PtdPositionId[i];
					}


					string value8 = "";
					if (PtdPerposwgId != null && i < PtdPerposwgId.Count)
					{
						value8 = PtdPerposwgId[i];
					}


					string value9 = "";
					if (PtdStipendId != null && i < PtdStipendId.Count)
					{
						value9 = PtdStipendId[i];
					}


					Decimal? value10 = null;
					if (PtdBaseEarnings != null && i < PtdBaseEarnings.Count)
					{
						value10 = PtdBaseEarnings[i];
					}


					Decimal? value11 = null;
					if (PtdEarnFactorEarnings != null && i < PtdEarnFactorEarnings.Count)
					{
						value11 = PtdEarnFactorEarnings[i];
					}


					string value12 = "";
					if (PtdEarndiffId != null && i < PtdEarndiffId.Count)
					{
						value12 = PtdEarndiffId[i];
					}


					Decimal? value13 = null;
					if (PtdEarnDiffUnits != null && i < PtdEarnDiffUnits.Count)
					{
						value13 = PtdEarnDiffUnits[i];
					}


					Decimal? value14 = null;
					if (PtdEarnDiffEarnings != null && i < PtdEarnDiffEarnings.Count)
					{
						value14 = PtdEarnDiffEarnings[i];
					}


					Decimal? value15 = null;
					if (PtdEarnDiffRates != null && i < PtdEarnDiffRates.Count)
					{
						value15 = PtdEarnDiffRates[i];
					}


					string value16 = "";
					if (PtdPpdtSummaryFlags != null && i < PtdPpdtSummaryFlags.Count)
					{
						value16 = PtdPpdtSummaryFlags[i];
					}


					Decimal? value17 = null;
					if (PtdExpenseAmts != null && i < PtdExpenseAmts.Count)
					{
						value17 = PtdExpenseAmts[i];
					}


					Decimal? value18 = null;
					if (PtdAccrualAmts != null && i < PtdAccrualAmts.Count)
					{
						value18 = PtdAccrualAmts[i];
					}


					string value19 = "";
					if (PtdAccrualGlNos != null && i < PtdAccrualGlNos.Count)
					{
						value19 = PtdAccrualGlNos[i];
					}


					string value20 = "";
					if (PtdProjectsIds != null && i < PtdProjectsIds.Count)
					{
						value20 = PtdProjectsIds[i];
					}


					string value21 = "";
					if (PtdPrjItemIds != null && i < PtdPrjItemIds.Count)
					{
						value21 = PtdPrjItemIds[i];
					}


					Decimal? value22 = null;
					if (PtdGlPctDist != null && i < PtdGlPctDist.Count)
					{
						value22 = PtdGlPctDist[i];
					}

					PtdearnEntityAssociation.Add(new PaytodatPtdearn( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value17, value18, value19, value20, value21, value22));
				}
			}
			// EntityAssociation Name: PTDTAXES
			
			PtdtaxesEntityAssociation = new List<PaytodatPtdtaxes>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdTaxCodes != null)
			{
				int numPtdtaxes = PtdTaxCodes.Count;
				if (PtdTaxExemptions !=null && PtdTaxExemptions.Count > numPtdtaxes) numPtdtaxes = PtdTaxExemptions.Count;
				if (PtdTaxAllowances !=null && PtdTaxAllowances.Count > numPtdtaxes) numPtdtaxes = PtdTaxAllowances.Count;
				if (PtdTaxFaterdCodes !=null && PtdTaxFaterdCodes.Count > numPtdtaxes) numPtdtaxes = PtdTaxFaterdCodes.Count;
				if (PtdTaxFaterdAmts !=null && PtdTaxFaterdAmts.Count > numPtdtaxes) numPtdtaxes = PtdTaxFaterdAmts.Count;
				if (PtdTaxLiabilityGlNos !=null && PtdTaxLiabilityGlNos.Count > numPtdtaxes) numPtdtaxes = PtdTaxLiabilityGlNos.Count;
				if (PtdEmplyeTaxAmts !=null && PtdEmplyeTaxAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyeTaxAmts.Count;
				if (PtdEmplyeTaxableAmts !=null && PtdEmplyeTaxableAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyeTaxableAmts.Count;
				if (PtdTaxExpenseGlNos !=null && PtdTaxExpenseGlNos.Count > numPtdtaxes) numPtdtaxes = PtdTaxExpenseGlNos.Count;
				if (PtdEmplyrTaxAmts !=null && PtdEmplyrTaxAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyrTaxAmts.Count;
				if (PtdEmplyrTaxableAmts !=null && PtdEmplyrTaxableAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyrTaxableAmts.Count;
				if (PtdSpecTaxAmts !=null && PtdSpecTaxAmts.Count > numPtdtaxes) numPtdtaxes = PtdSpecTaxAmts.Count;
				if (PtdDeferBdCodes !=null && PtdDeferBdCodes.Count > numPtdtaxes) numPtdtaxes = PtdDeferBdCodes.Count;
				if (PtdDeferBdEmplyeAmts !=null && PtdDeferBdEmplyeAmts.Count > numPtdtaxes) numPtdtaxes = PtdDeferBdEmplyeAmts.Count;
				if (PtdDeferBdEmplyrAmts !=null && PtdDeferBdEmplyrAmts.Count > numPtdtaxes) numPtdtaxes = PtdDeferBdEmplyrAmts.Count;
				if (PtdTaxableBdCodes !=null && PtdTaxableBdCodes.Count > numPtdtaxes) numPtdtaxes = PtdTaxableBdCodes.Count;
				if (PtdTaxableBdEmplyrAmts !=null && PtdTaxableBdEmplyrAmts.Count > numPtdtaxes) numPtdtaxes = PtdTaxableBdEmplyrAmts.Count;
				if (PtdTaxExpensePositions !=null && PtdTaxExpensePositions.Count > numPtdtaxes) numPtdtaxes = PtdTaxExpensePositions.Count;
				if (PtdCanGrossAmts !=null && PtdCanGrossAmts.Count > numPtdtaxes) numPtdtaxes = PtdCanGrossAmts.Count;
				if (PtdEmplyeCincFedAmts !=null && PtdEmplyeCincFedAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyeCincFedAmts.Count;
				if (PtdEmplyeCincProvAmts !=null && PtdEmplyeCincProvAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyeCincProvAmts.Count;
				if (PtdEmplyrCincFedAmts !=null && PtdEmplyrCincFedAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyrCincFedAmts.Count;
				if (PtdEmplyrCincProvAmts !=null && PtdEmplyrCincProvAmts.Count > numPtdtaxes) numPtdtaxes = PtdEmplyrCincProvAmts.Count;
				if (PtdTaxProjectsIds !=null && PtdTaxProjectsIds.Count > numPtdtaxes) numPtdtaxes = PtdTaxProjectsIds.Count;

				for (int i = 0; i < numPtdtaxes; i++)
				{

					string value0 = "";
					if (PtdTaxCodes != null && i < PtdTaxCodes.Count)
					{
						value0 = PtdTaxCodes[i];
					}


					int? value1 = null;
					if (PtdTaxExemptions != null && i < PtdTaxExemptions.Count)
					{
						value1 = PtdTaxExemptions[i];
					}


					int? value2 = null;
					if (PtdTaxAllowances != null && i < PtdTaxAllowances.Count)
					{
						value2 = PtdTaxAllowances[i];
					}


					string value3 = "";
					if (PtdTaxFaterdCodes != null && i < PtdTaxFaterdCodes.Count)
					{
						value3 = PtdTaxFaterdCodes[i];
					}


					Decimal? value4 = null;
					if (PtdTaxFaterdAmts != null && i < PtdTaxFaterdAmts.Count)
					{
						value4 = PtdTaxFaterdAmts[i];
					}


					string value5 = "";
					if (PtdTaxLiabilityGlNos != null && i < PtdTaxLiabilityGlNos.Count)
					{
						value5 = PtdTaxLiabilityGlNos[i];
					}


					Decimal? value6 = null;
					if (PtdEmplyeTaxAmts != null && i < PtdEmplyeTaxAmts.Count)
					{
						value6 = PtdEmplyeTaxAmts[i];
					}


					Decimal? value7 = null;
					if (PtdEmplyeTaxableAmts != null && i < PtdEmplyeTaxableAmts.Count)
					{
						value7 = PtdEmplyeTaxableAmts[i];
					}


					string value8 = "";
					if (PtdTaxExpenseGlNos != null && i < PtdTaxExpenseGlNos.Count)
					{
						value8 = PtdTaxExpenseGlNos[i];
					}


					Decimal? value9 = null;
					if (PtdEmplyrTaxAmts != null && i < PtdEmplyrTaxAmts.Count)
					{
						value9 = PtdEmplyrTaxAmts[i];
					}


					Decimal? value10 = null;
					if (PtdEmplyrTaxableAmts != null && i < PtdEmplyrTaxableAmts.Count)
					{
						value10 = PtdEmplyrTaxableAmts[i];
					}


					Decimal? value11 = null;
					if (PtdSpecTaxAmts != null && i < PtdSpecTaxAmts.Count)
					{
						value11 = PtdSpecTaxAmts[i];
					}


					string value12 = "";
					if (PtdDeferBdCodes != null && i < PtdDeferBdCodes.Count)
					{
						value12 = PtdDeferBdCodes[i];
					}


					Decimal? value13 = null;
					if (PtdDeferBdEmplyeAmts != null && i < PtdDeferBdEmplyeAmts.Count)
					{
						value13 = PtdDeferBdEmplyeAmts[i];
					}


					Decimal? value14 = null;
					if (PtdDeferBdEmplyrAmts != null && i < PtdDeferBdEmplyrAmts.Count)
					{
						value14 = PtdDeferBdEmplyrAmts[i];
					}


					string value15 = "";
					if (PtdTaxableBdCodes != null && i < PtdTaxableBdCodes.Count)
					{
						value15 = PtdTaxableBdCodes[i];
					}


					Decimal? value16 = null;
					if (PtdTaxableBdEmplyrAmts != null && i < PtdTaxableBdEmplyrAmts.Count)
					{
						value16 = PtdTaxableBdEmplyrAmts[i];
					}


					string value17 = "";
					if (PtdTaxExpensePositions != null && i < PtdTaxExpensePositions.Count)
					{
						value17 = PtdTaxExpensePositions[i];
					}


					Decimal? value18 = null;
					if (PtdCanGrossAmts != null && i < PtdCanGrossAmts.Count)
					{
						value18 = PtdCanGrossAmts[i];
					}


					Decimal? value19 = null;
					if (PtdEmplyeCincFedAmts != null && i < PtdEmplyeCincFedAmts.Count)
					{
						value19 = PtdEmplyeCincFedAmts[i];
					}


					Decimal? value20 = null;
					if (PtdEmplyeCincProvAmts != null && i < PtdEmplyeCincProvAmts.Count)
					{
						value20 = PtdEmplyeCincProvAmts[i];
					}


					Decimal? value21 = null;
					if (PtdEmplyrCincFedAmts != null && i < PtdEmplyrCincFedAmts.Count)
					{
						value21 = PtdEmplyrCincFedAmts[i];
					}


					Decimal? value22 = null;
					if (PtdEmplyrCincProvAmts != null && i < PtdEmplyrCincProvAmts.Count)
					{
						value22 = PtdEmplyrCincProvAmts[i];
					}


					string value23 = "";
					if (PtdTaxProjectsIds != null && i < PtdTaxProjectsIds.Count)
					{
						value23 = PtdTaxProjectsIds[i];
					}

					PtdtaxesEntityAssociation.Add(new PaytodatPtdtaxes( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value17, value18, value19, value20, value21, value22, value23));
				}
			}
			// EntityAssociation Name: PTDBNDED
			
			PtdbndedEntityAssociation = new List<PaytodatPtdbnded>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdBdCodes != null)
			{
				int numPtdbnded = PtdBdCodes.Count;
				if (PtdBendedcsId !=null && PtdBendedcsId.Count > numPtdbnded) numPtdbnded = PtdBendedcsId.Count;
				if (PtdBdPriorities !=null && PtdBdPriorities.Count > numPtdbnded) numPtdbnded = PtdBdPriorities.Count;
				if (PtdBdExtensions !=null && PtdBdExtensions.Count > numPtdbnded) numPtdbnded = PtdBdExtensions.Count;
				if (PtdBdEmplyeDefAmts !=null && PtdBdEmplyeDefAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeDefAmts.Count;
				if (PtdBdEmplyeDefPcts !=null && PtdBdEmplyeDefPcts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeDefPcts.Count;
				if (PtdBdInsureTaxExempt !=null && PtdBdInsureTaxExempt.Count > numPtdbnded) numPtdbnded = PtdBdInsureTaxExempt.Count;
				if (PtdBdEmplyeDefInsAmts !=null && PtdBdEmplyeDefInsAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeDefInsAmts.Count;
				if (PtdBdEmplyeArNetCalc !=null && PtdBdEmplyeArNetCalc.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeArNetCalc.Count;
				if (PtdBdEmplyeLimitAmts !=null && PtdBdEmplyeLimitAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeLimitAmts.Count;
				if (PtdBdLiabilityGlNos !=null && PtdBdLiabilityGlNos.Count > numPtdbnded) numPtdbnded = PtdBdLiabilityGlNos.Count;
				if (PtdBdEmplyeCalcAmts !=null && PtdBdEmplyeCalcAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeCalcAmts.Count;
				if (PtdBdEmplyrDefAmts !=null && PtdBdEmplyrDefAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrDefAmts.Count;
				if (PtdBdEmplyrDefPcts !=null && PtdBdEmplyrDefPcts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrDefPcts.Count;
				if (PtdBdEmplyrLimitAmts !=null && PtdBdEmplyrLimitAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrLimitAmts.Count;
				if (PtdBdExpenseGlNos !=null && PtdBdExpenseGlNos.Count > numPtdbnded) numPtdbnded = PtdBdExpenseGlNos.Count;
				if (PtdBdEmplyrCalcAmts !=null && PtdBdEmplyrCalcAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrCalcAmts.Count;
				if (PtdBdArTypes !=null && PtdBdArTypes.Count > numPtdbnded) numPtdbnded = PtdBdArTypes.Count;
				if (PtdBdArRefs !=null && PtdBdArRefs.Count > numPtdbnded) numPtdbnded = PtdBdArRefs.Count;
				if (PtdBdEmplyeBaseAmts !=null && PtdBdEmplyeBaseAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeBaseAmts.Count;
				if (PtdBdEmplyrBaseAmts !=null && PtdBdEmplyrBaseAmts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrBaseAmts.Count;
				if (PtdBdExpensePositions !=null && PtdBdExpensePositions.Count > numPtdbnded) numPtdbnded = PtdBdExpensePositions.Count;
				if (PtdBdEmplyeCalcCosts !=null && PtdBdEmplyeCalcCosts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeCalcCosts.Count;
				if (PtdBdEmplyeCalcGstTaxs !=null && PtdBdEmplyeCalcGstTaxs.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeCalcGstTaxs.Count;
				if (PtdBdEmplyeCalcGstGls !=null && PtdBdEmplyeCalcGstGls.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeCalcGstGls.Count;
				if (PtdBdEmplyrCalcCosts !=null && PtdBdEmplyrCalcCosts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrCalcCosts.Count;
				if (PtdBdEmplyrCalcGstTaxs !=null && PtdBdEmplyrCalcGstTaxs.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrCalcGstTaxs.Count;
				if (PtdBdEmplyrCalcGstGls !=null && PtdBdEmplyrCalcGstGls.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrCalcGstGls.Count;
				if (PtdBdGstComponentAmts !=null && PtdBdGstComponentAmts.Count > numPtdbnded) numPtdbnded = PtdBdGstComponentAmts.Count;
				if (PtdBdGstComponentPcts !=null && PtdBdGstComponentPcts.Count > numPtdbnded) numPtdbnded = PtdBdGstComponentPcts.Count;
				if (PtdBdEmplyeGstTaxPcts !=null && PtdBdEmplyeGstTaxPcts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyeGstTaxPcts.Count;
				if (PtdBdEmplyrGstTaxPcts !=null && PtdBdEmplyrGstTaxPcts.Count > numPtdbnded) numPtdbnded = PtdBdEmplyrGstTaxPcts.Count;
				if (PtdTxIdToReverse !=null && PtdTxIdToReverse.Count > numPtdbnded) numPtdbnded = PtdTxIdToReverse.Count;
				if (PtdBdProjectsIds !=null && PtdBdProjectsIds.Count > numPtdbnded) numPtdbnded = PtdBdProjectsIds.Count;
				if (PtdBenTxId !=null && PtdBenTxId.Count > numPtdbnded) numPtdbnded = PtdBenTxId.Count;
				if (PtdPrepayAmt !=null && PtdPrepayAmt.Count > numPtdbnded) numPtdbnded = PtdPrepayAmt.Count;
				if (PtdArrearsAmt !=null && PtdArrearsAmt.Count > numPtdbnded) numPtdbnded = PtdArrearsAmt.Count;
				if (PtdRepayMultOfCost !=null && PtdRepayMultOfCost.Count > numPtdbnded) numPtdbnded = PtdRepayMultOfCost.Count;
				if (PtdRepayFixedAmt !=null && PtdRepayFixedAmt.Count > numPtdbnded) numPtdbnded = PtdRepayFixedAmt.Count;
				if (PtdRepayAmt !=null && PtdRepayAmt.Count > numPtdbnded) numPtdbnded = PtdRepayAmt.Count;
				if (PtdArInvoiceId !=null && PtdArInvoiceId.Count > numPtdbnded) numPtdbnded = PtdArInvoiceId.Count;
				if (PtdPerbenId !=null && PtdPerbenId.Count > numPtdbnded) numPtdbnded = PtdPerbenId.Count;
				if (PtdPerbencsId !=null && PtdPerbencsId.Count > numPtdbnded) numPtdbnded = PtdPerbencsId.Count;
				if (PtdPrepaidVendorPayment !=null && PtdPrepaidVendorPayment.Count > numPtdbnded) numPtdbnded = PtdPrepaidVendorPayment.Count;
				if (PtdArrearsEligibility !=null && PtdArrearsEligibility.Count > numPtdbnded) numPtdbnded = PtdArrearsEligibility.Count;
				if (PtdArDepositId !=null && PtdArDepositId.Count > numPtdbnded) numPtdbnded = PtdArDepositId.Count;
				if (PtdBdArPaymentsId !=null && PtdBdArPaymentsId.Count > numPtdbnded) numPtdbnded = PtdBdArPaymentsId.Count;

				for (int i = 0; i < numPtdbnded; i++)
				{

					string value0 = "";
					if (PtdBdCodes != null && i < PtdBdCodes.Count)
					{
						value0 = PtdBdCodes[i];
					}


					string value1 = "";
					if (PtdBendedcsId != null && i < PtdBendedcsId.Count)
					{
						value1 = PtdBendedcsId[i];
					}


					string value2 = "";
					if (PtdBdPriorities != null && i < PtdBdPriorities.Count)
					{
						value2 = PtdBdPriorities[i];
					}


					int? value3 = null;
					if (PtdBdExtensions != null && i < PtdBdExtensions.Count)
					{
						value3 = PtdBdExtensions[i];
					}


					Decimal? value4 = null;
					if (PtdBdEmplyeDefAmts != null && i < PtdBdEmplyeDefAmts.Count)
					{
						value4 = PtdBdEmplyeDefAmts[i];
					}


					Decimal? value5 = null;
					if (PtdBdEmplyeDefPcts != null && i < PtdBdEmplyeDefPcts.Count)
					{
						value5 = PtdBdEmplyeDefPcts[i];
					}


					Decimal? value6 = null;
					if (PtdBdInsureTaxExempt != null && i < PtdBdInsureTaxExempt.Count)
					{
						value6 = PtdBdInsureTaxExempt[i];
					}


					Decimal? value7 = null;
					if (PtdBdEmplyeDefInsAmts != null && i < PtdBdEmplyeDefInsAmts.Count)
					{
						value7 = PtdBdEmplyeDefInsAmts[i];
					}


					string value8 = "";
					if (PtdBdEmplyeArNetCalc != null && i < PtdBdEmplyeArNetCalc.Count)
					{
						value8 = PtdBdEmplyeArNetCalc[i];
					}


					Decimal? value9 = null;
					if (PtdBdEmplyeLimitAmts != null && i < PtdBdEmplyeLimitAmts.Count)
					{
						value9 = PtdBdEmplyeLimitAmts[i];
					}


					string value10 = "";
					if (PtdBdLiabilityGlNos != null && i < PtdBdLiabilityGlNos.Count)
					{
						value10 = PtdBdLiabilityGlNos[i];
					}


					Decimal? value11 = null;
					if (PtdBdEmplyeCalcAmts != null && i < PtdBdEmplyeCalcAmts.Count)
					{
						value11 = PtdBdEmplyeCalcAmts[i];
					}


					Decimal? value12 = null;
					if (PtdBdEmplyrDefAmts != null && i < PtdBdEmplyrDefAmts.Count)
					{
						value12 = PtdBdEmplyrDefAmts[i];
					}


					Decimal? value13 = null;
					if (PtdBdEmplyrDefPcts != null && i < PtdBdEmplyrDefPcts.Count)
					{
						value13 = PtdBdEmplyrDefPcts[i];
					}


					Decimal? value14 = null;
					if (PtdBdEmplyrLimitAmts != null && i < PtdBdEmplyrLimitAmts.Count)
					{
						value14 = PtdBdEmplyrLimitAmts[i];
					}


					string value15 = "";
					if (PtdBdExpenseGlNos != null && i < PtdBdExpenseGlNos.Count)
					{
						value15 = PtdBdExpenseGlNos[i];
					}


					Decimal? value16 = null;
					if (PtdBdEmplyrCalcAmts != null && i < PtdBdEmplyrCalcAmts.Count)
					{
						value16 = PtdBdEmplyrCalcAmts[i];
					}


					string value17 = "";
					if (PtdBdArTypes != null && i < PtdBdArTypes.Count)
					{
						value17 = PtdBdArTypes[i];
					}


					string value18 = "";
					if (PtdBdArRefs != null && i < PtdBdArRefs.Count)
					{
						value18 = PtdBdArRefs[i];
					}


					Decimal? value19 = null;
					if (PtdBdEmplyeBaseAmts != null && i < PtdBdEmplyeBaseAmts.Count)
					{
						value19 = PtdBdEmplyeBaseAmts[i];
					}


					Decimal? value20 = null;
					if (PtdBdEmplyrBaseAmts != null && i < PtdBdEmplyrBaseAmts.Count)
					{
						value20 = PtdBdEmplyrBaseAmts[i];
					}


					string value21 = "";
					if (PtdBdExpensePositions != null && i < PtdBdExpensePositions.Count)
					{
						value21 = PtdBdExpensePositions[i];
					}


					Decimal? value22 = null;
					if (PtdBdEmplyeCalcCosts != null && i < PtdBdEmplyeCalcCosts.Count)
					{
						value22 = PtdBdEmplyeCalcCosts[i];
					}


					Decimal? value23 = null;
					if (PtdBdEmplyeCalcGstTaxs != null && i < PtdBdEmplyeCalcGstTaxs.Count)
					{
						value23 = PtdBdEmplyeCalcGstTaxs[i];
					}


					string value24 = "";
					if (PtdBdEmplyeCalcGstGls != null && i < PtdBdEmplyeCalcGstGls.Count)
					{
						value24 = PtdBdEmplyeCalcGstGls[i];
					}


					Decimal? value25 = null;
					if (PtdBdEmplyrCalcCosts != null && i < PtdBdEmplyrCalcCosts.Count)
					{
						value25 = PtdBdEmplyrCalcCosts[i];
					}


					Decimal? value26 = null;
					if (PtdBdEmplyrCalcGstTaxs != null && i < PtdBdEmplyrCalcGstTaxs.Count)
					{
						value26 = PtdBdEmplyrCalcGstTaxs[i];
					}


					string value27 = "";
					if (PtdBdEmplyrCalcGstGls != null && i < PtdBdEmplyrCalcGstGls.Count)
					{
						value27 = PtdBdEmplyrCalcGstGls[i];
					}


					Decimal? value28 = null;
					if (PtdBdGstComponentAmts != null && i < PtdBdGstComponentAmts.Count)
					{
						value28 = PtdBdGstComponentAmts[i];
					}


					Decimal? value29 = null;
					if (PtdBdGstComponentPcts != null && i < PtdBdGstComponentPcts.Count)
					{
						value29 = PtdBdGstComponentPcts[i];
					}


					Decimal? value30 = null;
					if (PtdBdEmplyeGstTaxPcts != null && i < PtdBdEmplyeGstTaxPcts.Count)
					{
						value30 = PtdBdEmplyeGstTaxPcts[i];
					}


					Decimal? value31 = null;
					if (PtdBdEmplyrGstTaxPcts != null && i < PtdBdEmplyrGstTaxPcts.Count)
					{
						value31 = PtdBdEmplyrGstTaxPcts[i];
					}


					string value32 = "";
					if (PtdTxIdToReverse != null && i < PtdTxIdToReverse.Count)
					{
						value32 = PtdTxIdToReverse[i];
					}


					string value33 = "";
					if (PtdBdProjectsIds != null && i < PtdBdProjectsIds.Count)
					{
						value33 = PtdBdProjectsIds[i];
					}


					string value34 = "";
					if (PtdBenTxId != null && i < PtdBenTxId.Count)
					{
						value34 = PtdBenTxId[i];
					}


					Decimal? value35 = null;
					if (PtdPrepayAmt != null && i < PtdPrepayAmt.Count)
					{
						value35 = PtdPrepayAmt[i];
					}


					Decimal? value36 = null;
					if (PtdArrearsAmt != null && i < PtdArrearsAmt.Count)
					{
						value36 = PtdArrearsAmt[i];
					}


					Decimal? value37 = null;
					if (PtdRepayMultOfCost != null && i < PtdRepayMultOfCost.Count)
					{
						value37 = PtdRepayMultOfCost[i];
					}


					Decimal? value38 = null;
					if (PtdRepayFixedAmt != null && i < PtdRepayFixedAmt.Count)
					{
						value38 = PtdRepayFixedAmt[i];
					}


					Decimal? value39 = null;
					if (PtdRepayAmt != null && i < PtdRepayAmt.Count)
					{
						value39 = PtdRepayAmt[i];
					}


					string value40 = "";
					if (PtdArInvoiceId != null && i < PtdArInvoiceId.Count)
					{
						value40 = PtdArInvoiceId[i];
					}


					string value41 = "";
					if (PtdPerbenId != null && i < PtdPerbenId.Count)
					{
						value41 = PtdPerbenId[i];
					}


					string value42 = "";
					if (PtdPerbencsId != null && i < PtdPerbencsId.Count)
					{
						value42 = PtdPerbencsId[i];
					}


					Decimal? value43 = null;
					if (PtdPrepaidVendorPayment != null && i < PtdPrepaidVendorPayment.Count)
					{
						value43 = PtdPrepaidVendorPayment[i];
					}


					string value44 = "";
					if (PtdArrearsEligibility != null && i < PtdArrearsEligibility.Count)
					{
						value44 = PtdArrearsEligibility[i];
					}


					string value45 = "";
					if (PtdArDepositId != null && i < PtdArDepositId.Count)
					{
						value45 = PtdArDepositId[i];
					}


					string value46 = "";
					if (PtdBdArPaymentsId != null && i < PtdBdArPaymentsId.Count)
					{
						value46 = PtdBdArPaymentsId[i];
					}

					PtdbndedEntityAssociation.Add(new PaytodatPtdbnded( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value17, value18, value19, value20, value21, value22, value23, value24, value25, value26, value27, value28, value29, value30, value31, value32, value33, value34, value35, value36, value37, value38, value39, value40, value41, value42, value43, value44, value45, value46));
				}
			}
			// EntityAssociation Name: PTDLEAVE
			
			PtdleaveEntityAssociation = new List<PaytodatPtdleave>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdLvCodes != null)
			{
				int numPtdleave = PtdLvCodes.Count;
				if (PtdLvAccrualRates !=null && PtdLvAccrualRates.Count > numPtdleave) numPtdleave = PtdLvAccrualRates.Count;
				if (PtdLvPriorBalances !=null && PtdLvPriorBalances.Count > numPtdleave) numPtdleave = PtdLvPriorBalances.Count;
				if (PtdLvLimits !=null && PtdLvLimits.Count > numPtdleave) numPtdleave = PtdLvLimits.Count;
				if (PtdLvPerleaveIds !=null && PtdLvPerleaveIds.Count > numPtdleave) numPtdleave = PtdLvPerleaveIds.Count;
				if (PtdLvTypes !=null && PtdLvTypes.Count > numPtdleave) numPtdleave = PtdLvTypes.Count;
				if (PtdLvAccruedHours !=null && PtdLvAccruedHours.Count > numPtdleave) numPtdleave = PtdLvAccruedHours.Count;
				if (PtdLvAccruedComments !=null && PtdLvAccruedComments.Count > numPtdleave) numPtdleave = PtdLvAccruedComments.Count;
				if (PtdLvAccruedAmts !=null && PtdLvAccruedAmts.Count > numPtdleave) numPtdleave = PtdLvAccruedAmts.Count;
				if (PtdLvAccruedFromAccts !=null && PtdLvAccruedFromAccts.Count > numPtdleave) numPtdleave = PtdLvAccruedFromAccts.Count;
				if (PtdLvEarnTypes !=null && PtdLvEarnTypes.Count > numPtdleave) numPtdleave = PtdLvEarnTypes.Count;
				if (PtdLvTakenHours !=null && PtdLvTakenHours.Count > numPtdleave) numPtdleave = PtdLvTakenHours.Count;
				if (PtdLvProjectsIds !=null && PtdLvProjectsIds.Count > numPtdleave) numPtdleave = PtdLvProjectsIds.Count;

				for (int i = 0; i < numPtdleave; i++)
				{

					string value0 = "";
					if (PtdLvCodes != null && i < PtdLvCodes.Count)
					{
						value0 = PtdLvCodes[i];
					}


					Decimal? value1 = null;
					if (PtdLvAccrualRates != null && i < PtdLvAccrualRates.Count)
					{
						value1 = PtdLvAccrualRates[i];
					}


					Decimal? value2 = null;
					if (PtdLvPriorBalances != null && i < PtdLvPriorBalances.Count)
					{
						value2 = PtdLvPriorBalances[i];
					}


					Decimal? value3 = null;
					if (PtdLvLimits != null && i < PtdLvLimits.Count)
					{
						value3 = PtdLvLimits[i];
					}


					int? value4 = null;
					if (PtdLvPerleaveIds != null && i < PtdLvPerleaveIds.Count)
					{
						value4 = PtdLvPerleaveIds[i];
					}


					string value5 = "";
					if (PtdLvTypes != null && i < PtdLvTypes.Count)
					{
						value5 = PtdLvTypes[i];
					}


					Decimal? value6 = null;
					if (PtdLvAccruedHours != null && i < PtdLvAccruedHours.Count)
					{
						value6 = PtdLvAccruedHours[i];
					}


					string value7 = "";
					if (PtdLvAccruedComments != null && i < PtdLvAccruedComments.Count)
					{
						value7 = PtdLvAccruedComments[i];
					}


					Decimal? value8 = null;
					if (PtdLvAccruedAmts != null && i < PtdLvAccruedAmts.Count)
					{
						value8 = PtdLvAccruedAmts[i];
					}


					string value9 = "";
					if (PtdLvAccruedFromAccts != null && i < PtdLvAccruedFromAccts.Count)
					{
						value9 = PtdLvAccruedFromAccts[i];
					}


					string value10 = "";
					if (PtdLvEarnTypes != null && i < PtdLvEarnTypes.Count)
					{
						value10 = PtdLvEarnTypes[i];
					}


					Decimal? value11 = null;
					if (PtdLvTakenHours != null && i < PtdLvTakenHours.Count)
					{
						value11 = PtdLvTakenHours[i];
					}


					string value12 = "";
					if (PtdLvProjectsIds != null && i < PtdLvProjectsIds.Count)
					{
						value12 = PtdLvProjectsIds[i];
					}

					PtdleaveEntityAssociation.Add(new PaytodatPtdleave( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12));
				}
			}
			// EntityAssociation Name: PTDTAXEXP
			
			PtdtaxexpEntityAssociation = new List<PaytodatPtdtaxexp>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdTaxExpController != null)
			{
				int numPtdtaxexp = PtdTaxExpController.Count;
				if (PtdTaxExpEmplyrTaxAmts !=null && PtdTaxExpEmplyrTaxAmts.Count > numPtdtaxexp) numPtdtaxexp = PtdTaxExpEmplyrTaxAmts.Count;

				for (int i = 0; i < numPtdtaxexp; i++)
				{

					string value0 = "";
					if (PtdTaxExpController != null && i < PtdTaxExpController.Count)
					{
						value0 = PtdTaxExpController[i];
					}


					Decimal? value1 = null;
					if (PtdTaxExpEmplyrTaxAmts != null && i < PtdTaxExpEmplyrTaxAmts.Count)
					{
						value1 = PtdTaxExpEmplyrTaxAmts[i];
					}

					PtdtaxexpEntityAssociation.Add(new PaytodatPtdtaxexp( value0, value1));
				}
			}
			// EntityAssociation Name: PTDDEFBD
			
			PtddefbdEntityAssociation = new List<PaytodatPtddefbd>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdDefBdController != null)
			{
				int numPtddefbd = PtdDefBdController.Count;
				if (PtdDefBdEmplyeAmts !=null && PtdDefBdEmplyeAmts.Count > numPtddefbd) numPtddefbd = PtdDefBdEmplyeAmts.Count;
				if (PtdDefBdEmplyrAmts !=null && PtdDefBdEmplyrAmts.Count > numPtddefbd) numPtddefbd = PtdDefBdEmplyrAmts.Count;

				for (int i = 0; i < numPtddefbd; i++)
				{

					string value0 = "";
					if (PtdDefBdController != null && i < PtdDefBdController.Count)
					{
						value0 = PtdDefBdController[i];
					}


					Decimal? value1 = null;
					if (PtdDefBdEmplyeAmts != null && i < PtdDefBdEmplyeAmts.Count)
					{
						value1 = PtdDefBdEmplyeAmts[i];
					}


					Decimal? value2 = null;
					if (PtdDefBdEmplyrAmts != null && i < PtdDefBdEmplyrAmts.Count)
					{
						value2 = PtdDefBdEmplyrAmts[i];
					}

					PtddefbdEntityAssociation.Add(new PaytodatPtddefbd( value0, value1, value2));
				}
			}
			// EntityAssociation Name: PTDTXBLBD
			
			PtdtxblbdEntityAssociation = new List<PaytodatPtdtxblbd>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdTxblBdController != null)
			{
				int numPtdtxblbd = PtdTxblBdController.Count;
				if (PtdTxblBdEmplyrAmts !=null && PtdTxblBdEmplyrAmts.Count > numPtdtxblbd) numPtdtxblbd = PtdTxblBdEmplyrAmts.Count;

				for (int i = 0; i < numPtdtxblbd; i++)
				{

					string value0 = "";
					if (PtdTxblBdController != null && i < PtdTxblBdController.Count)
					{
						value0 = PtdTxblBdController[i];
					}


					Decimal? value1 = null;
					if (PtdTxblBdEmplyrAmts != null && i < PtdTxblBdEmplyrAmts.Count)
					{
						value1 = PtdTxblBdEmplyrAmts[i];
					}

					PtdtxblbdEntityAssociation.Add(new PaytodatPtdtxblbd( value0, value1));
				}
			}
			// EntityAssociation Name: PTDBDEXP
			
			PtdbdexpEntityAssociation = new List<PaytodatPtdbdexp>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdBdExpController != null)
			{
				int numPtdbdexp = PtdBdExpController.Count;
				if (PtdBdExpEmplyrCalcAmts !=null && PtdBdExpEmplyrCalcAmts.Count > numPtdbdexp) numPtdbdexp = PtdBdExpEmplyrCalcAmts.Count;

				for (int i = 0; i < numPtdbdexp; i++)
				{

					string value0 = "";
					if (PtdBdExpController != null && i < PtdBdExpController.Count)
					{
						value0 = PtdBdExpController[i];
					}


					Decimal? value1 = null;
					if (PtdBdExpEmplyrCalcAmts != null && i < PtdBdExpEmplyrCalcAmts.Count)
					{
						value1 = PtdBdExpEmplyrCalcAmts[i];
					}

					PtdbdexpEntityAssociation.Add(new PaytodatPtdbdexp( value0, value1));
				}
			}
			// EntityAssociation Name: PTDLVTKN
			
			PtdlvtknEntityAssociation = new List<PaytodatPtdlvtkn>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PtdLvTknController != null)
			{
				int numPtdlvtkn = PtdLvTknController.Count;
				if (PtdLvTknHours !=null && PtdLvTknHours.Count > numPtdlvtkn) numPtdlvtkn = PtdLvTknHours.Count;

				for (int i = 0; i < numPtdlvtkn; i++)
				{

					string value0 = "";
					if (PtdLvTknController != null && i < PtdLvTknController.Count)
					{
						value0 = PtdLvTknController[i];
					}


					Decimal? value1 = null;
					if (PtdLvTknHours != null && i < PtdLvTknHours.Count)
					{
						value1 = PtdLvTknHours[i];
					}

					PtdlvtknEntityAssociation.Add(new PaytodatPtdlvtkn( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class PaytodatPtdearn
	{
		public string PtdFundSourcesAssocMember;	
		public string PtdGlNosAssocMember;	
		public string PtdHSFlagsAssocMember;	
		public string PtdEarnTypesAssocMember;	
		public Decimal? PtdRatesAssocMember;	
		public Decimal? PtdHoursAssocMember;	
		public Decimal? PtdAmountsAssocMember;	
		public string PtdPositionIdAssocMember;	
		public string PtdPerposwgIdAssocMember;	
		public string PtdStipendIdAssocMember;	
		public Decimal? PtdBaseEarningsAssocMember;	
		public Decimal? PtdEarnFactorEarningsAssocMember;	
		public string PtdEarndiffIdAssocMember;	
		public Decimal? PtdEarnDiffUnitsAssocMember;	
		public Decimal? PtdEarnDiffEarningsAssocMember;	
		public Decimal? PtdEarnDiffRatesAssocMember;	
		public string PtdPpdtSummaryFlagsAssocMember;	
		public Decimal? PtdExpenseAmtsAssocMember;	
		public Decimal? PtdAccrualAmtsAssocMember;	
		public string PtdAccrualGlNosAssocMember;	
		public string PtdProjectsIdsAssocMember;	
		public string PtdPrjItemIdsAssocMember;	
		public Decimal? PtdGlPctDistAssocMember;	
		public PaytodatPtdearn() {}
		public PaytodatPtdearn(
			string inPtdFundSources,
			string inPtdGlNos,
			string inPtdHSFlags,
			string inPtdEarnTypes,
			Decimal? inPtdRates,
			Decimal? inPtdHours,
			Decimal? inPtdAmounts,
			string inPtdPositionId,
			string inPtdPerposwgId,
			string inPtdStipendId,
			Decimal? inPtdBaseEarnings,
			Decimal? inPtdEarnFactorEarnings,
			string inPtdEarndiffId,
			Decimal? inPtdEarnDiffUnits,
			Decimal? inPtdEarnDiffEarnings,
			Decimal? inPtdEarnDiffRates,
			string inPtdPpdtSummaryFlags,
			Decimal? inPtdExpenseAmts,
			Decimal? inPtdAccrualAmts,
			string inPtdAccrualGlNos,
			string inPtdProjectsIds,
			string inPtdPrjItemIds,
			Decimal? inPtdGlPctDist)
		{
			PtdFundSourcesAssocMember = inPtdFundSources;
			PtdGlNosAssocMember = inPtdGlNos;
			PtdHSFlagsAssocMember = inPtdHSFlags;
			PtdEarnTypesAssocMember = inPtdEarnTypes;
			PtdRatesAssocMember = inPtdRates;
			PtdHoursAssocMember = inPtdHours;
			PtdAmountsAssocMember = inPtdAmounts;
			PtdPositionIdAssocMember = inPtdPositionId;
			PtdPerposwgIdAssocMember = inPtdPerposwgId;
			PtdStipendIdAssocMember = inPtdStipendId;
			PtdBaseEarningsAssocMember = inPtdBaseEarnings;
			PtdEarnFactorEarningsAssocMember = inPtdEarnFactorEarnings;
			PtdEarndiffIdAssocMember = inPtdEarndiffId;
			PtdEarnDiffUnitsAssocMember = inPtdEarnDiffUnits;
			PtdEarnDiffEarningsAssocMember = inPtdEarnDiffEarnings;
			PtdEarnDiffRatesAssocMember = inPtdEarnDiffRates;
			PtdPpdtSummaryFlagsAssocMember = inPtdPpdtSummaryFlags;
			PtdExpenseAmtsAssocMember = inPtdExpenseAmts;
			PtdAccrualAmtsAssocMember = inPtdAccrualAmts;
			PtdAccrualGlNosAssocMember = inPtdAccrualGlNos;
			PtdProjectsIdsAssocMember = inPtdProjectsIds;
			PtdPrjItemIdsAssocMember = inPtdPrjItemIds;
			PtdGlPctDistAssocMember = inPtdGlPctDist;
		}
	}
	
	[Serializable]
	public class PaytodatPtdtaxes
	{
		public string PtdTaxCodesAssocMember;	
		public int? PtdTaxExemptionsAssocMember;	
		public int? PtdTaxAllowancesAssocMember;	
		public string PtdTaxFaterdCodesAssocMember;	
		public Decimal? PtdTaxFaterdAmtsAssocMember;	
		public string PtdTaxLiabilityGlNosAssocMember;	
		public Decimal? PtdEmplyeTaxAmtsAssocMember;	
		public Decimal? PtdEmplyeTaxableAmtsAssocMember;	
		public string PtdTaxExpenseGlNosAssocMember;	
		public Decimal? PtdEmplyrTaxAmtsAssocMember;	
		public Decimal? PtdEmplyrTaxableAmtsAssocMember;	
		public Decimal? PtdSpecTaxAmtsAssocMember;	
		public string PtdDeferBdCodesAssocMember;	
		public Decimal? PtdDeferBdEmplyeAmtsAssocMember;	
		public Decimal? PtdDeferBdEmplyrAmtsAssocMember;	
		public string PtdTaxableBdCodesAssocMember;	
		public Decimal? PtdTaxableBdEmplyrAmtsAssocMember;	
		public string PtdTaxExpensePositionsAssocMember;	
		public Decimal? PtdCanGrossAmtsAssocMember;	
		public Decimal? PtdEmplyeCincFedAmtsAssocMember;	
		public Decimal? PtdEmplyeCincProvAmtsAssocMember;	
		public Decimal? PtdEmplyrCincFedAmtsAssocMember;	
		public Decimal? PtdEmplyrCincProvAmtsAssocMember;	
		public string PtdTaxProjectsIdsAssocMember;	
		public PaytodatPtdtaxes() {}
		public PaytodatPtdtaxes(
			string inPtdTaxCodes,
			int? inPtdTaxExemptions,
			int? inPtdTaxAllowances,
			string inPtdTaxFaterdCodes,
			Decimal? inPtdTaxFaterdAmts,
			string inPtdTaxLiabilityGlNos,
			Decimal? inPtdEmplyeTaxAmts,
			Decimal? inPtdEmplyeTaxableAmts,
			string inPtdTaxExpenseGlNos,
			Decimal? inPtdEmplyrTaxAmts,
			Decimal? inPtdEmplyrTaxableAmts,
			Decimal? inPtdSpecTaxAmts,
			string inPtdDeferBdCodes,
			Decimal? inPtdDeferBdEmplyeAmts,
			Decimal? inPtdDeferBdEmplyrAmts,
			string inPtdTaxableBdCodes,
			Decimal? inPtdTaxableBdEmplyrAmts,
			string inPtdTaxExpensePositions,
			Decimal? inPtdCanGrossAmts,
			Decimal? inPtdEmplyeCincFedAmts,
			Decimal? inPtdEmplyeCincProvAmts,
			Decimal? inPtdEmplyrCincFedAmts,
			Decimal? inPtdEmplyrCincProvAmts,
			string inPtdTaxProjectsIds)
		{
			PtdTaxCodesAssocMember = inPtdTaxCodes;
			PtdTaxExemptionsAssocMember = inPtdTaxExemptions;
			PtdTaxAllowancesAssocMember = inPtdTaxAllowances;
			PtdTaxFaterdCodesAssocMember = inPtdTaxFaterdCodes;
			PtdTaxFaterdAmtsAssocMember = inPtdTaxFaterdAmts;
			PtdTaxLiabilityGlNosAssocMember = inPtdTaxLiabilityGlNos;
			PtdEmplyeTaxAmtsAssocMember = inPtdEmplyeTaxAmts;
			PtdEmplyeTaxableAmtsAssocMember = inPtdEmplyeTaxableAmts;
			PtdTaxExpenseGlNosAssocMember = inPtdTaxExpenseGlNos;
			PtdEmplyrTaxAmtsAssocMember = inPtdEmplyrTaxAmts;
			PtdEmplyrTaxableAmtsAssocMember = inPtdEmplyrTaxableAmts;
			PtdSpecTaxAmtsAssocMember = inPtdSpecTaxAmts;
			PtdDeferBdCodesAssocMember = inPtdDeferBdCodes;
			PtdDeferBdEmplyeAmtsAssocMember = inPtdDeferBdEmplyeAmts;
			PtdDeferBdEmplyrAmtsAssocMember = inPtdDeferBdEmplyrAmts;
			PtdTaxableBdCodesAssocMember = inPtdTaxableBdCodes;
			PtdTaxableBdEmplyrAmtsAssocMember = inPtdTaxableBdEmplyrAmts;
			PtdTaxExpensePositionsAssocMember = inPtdTaxExpensePositions;
			PtdCanGrossAmtsAssocMember = inPtdCanGrossAmts;
			PtdEmplyeCincFedAmtsAssocMember = inPtdEmplyeCincFedAmts;
			PtdEmplyeCincProvAmtsAssocMember = inPtdEmplyeCincProvAmts;
			PtdEmplyrCincFedAmtsAssocMember = inPtdEmplyrCincFedAmts;
			PtdEmplyrCincProvAmtsAssocMember = inPtdEmplyrCincProvAmts;
			PtdTaxProjectsIdsAssocMember = inPtdTaxProjectsIds;
		}
	}
	
	[Serializable]
	public class PaytodatPtdbnded
	{
		public string PtdBdCodesAssocMember;	
		public string PtdBendedcsIdAssocMember;	
		public string PtdBdPrioritiesAssocMember;	
		public int? PtdBdExtensionsAssocMember;	
		public Decimal? PtdBdEmplyeDefAmtsAssocMember;	
		public Decimal? PtdBdEmplyeDefPctsAssocMember;	
		public Decimal? PtdBdInsureTaxExemptAssocMember;	
		public Decimal? PtdBdEmplyeDefInsAmtsAssocMember;	
		public string PtdBdEmplyeArNetCalcAssocMember;	
		public Decimal? PtdBdEmplyeLimitAmtsAssocMember;	
		public string PtdBdLiabilityGlNosAssocMember;	
		public Decimal? PtdBdEmplyeCalcAmtsAssocMember;	
		public Decimal? PtdBdEmplyrDefAmtsAssocMember;	
		public Decimal? PtdBdEmplyrDefPctsAssocMember;	
		public Decimal? PtdBdEmplyrLimitAmtsAssocMember;	
		public string PtdBdExpenseGlNosAssocMember;	
		public Decimal? PtdBdEmplyrCalcAmtsAssocMember;	
		public string PtdBdArTypesAssocMember;	
		public string PtdBdArRefsAssocMember;	
		public Decimal? PtdBdEmplyeBaseAmtsAssocMember;	
		public Decimal? PtdBdEmplyrBaseAmtsAssocMember;	
		public string PtdBdExpensePositionsAssocMember;	
		public Decimal? PtdBdEmplyeCalcCostsAssocMember;	
		public Decimal? PtdBdEmplyeCalcGstTaxsAssocMember;	
		public string PtdBdEmplyeCalcGstGlsAssocMember;	
		public Decimal? PtdBdEmplyrCalcCostsAssocMember;	
		public Decimal? PtdBdEmplyrCalcGstTaxsAssocMember;	
		public string PtdBdEmplyrCalcGstGlsAssocMember;	
		public Decimal? PtdBdGstComponentAmtsAssocMember;	
		public Decimal? PtdBdGstComponentPctsAssocMember;	
		public Decimal? PtdBdEmplyeGstTaxPctsAssocMember;	
		public Decimal? PtdBdEmplyrGstTaxPctsAssocMember;	
		public string PtdTxIdToReverseAssocMember;	
		public string PtdBdProjectsIdsAssocMember;	
		public string PtdBenTxIdAssocMember;	
		public Decimal? PtdPrepayAmtAssocMember;	
		public Decimal? PtdArrearsAmtAssocMember;	
		public Decimal? PtdRepayMultOfCostAssocMember;	
		public Decimal? PtdRepayFixedAmtAssocMember;	
		public Decimal? PtdRepayAmtAssocMember;	
		public string PtdArInvoiceIdAssocMember;	
		public string PtdPerbenIdAssocMember;	
		public string PtdPerbencsIdAssocMember;	
		public Decimal? PtdPrepaidVendorPaymentAssocMember;	
		public string PtdArrearsEligibilityAssocMember;	
		public string PtdArDepositIdAssocMember;	
		public string PtdBdArPaymentsIdAssocMember;	
		public PaytodatPtdbnded() {}
		public PaytodatPtdbnded(
			string inPtdBdCodes,
			string inPtdBendedcsId,
			string inPtdBdPriorities,
			int? inPtdBdExtensions,
			Decimal? inPtdBdEmplyeDefAmts,
			Decimal? inPtdBdEmplyeDefPcts,
			Decimal? inPtdBdInsureTaxExempt,
			Decimal? inPtdBdEmplyeDefInsAmts,
			string inPtdBdEmplyeArNetCalc,
			Decimal? inPtdBdEmplyeLimitAmts,
			string inPtdBdLiabilityGlNos,
			Decimal? inPtdBdEmplyeCalcAmts,
			Decimal? inPtdBdEmplyrDefAmts,
			Decimal? inPtdBdEmplyrDefPcts,
			Decimal? inPtdBdEmplyrLimitAmts,
			string inPtdBdExpenseGlNos,
			Decimal? inPtdBdEmplyrCalcAmts,
			string inPtdBdArTypes,
			string inPtdBdArRefs,
			Decimal? inPtdBdEmplyeBaseAmts,
			Decimal? inPtdBdEmplyrBaseAmts,
			string inPtdBdExpensePositions,
			Decimal? inPtdBdEmplyeCalcCosts,
			Decimal? inPtdBdEmplyeCalcGstTaxs,
			string inPtdBdEmplyeCalcGstGls,
			Decimal? inPtdBdEmplyrCalcCosts,
			Decimal? inPtdBdEmplyrCalcGstTaxs,
			string inPtdBdEmplyrCalcGstGls,
			Decimal? inPtdBdGstComponentAmts,
			Decimal? inPtdBdGstComponentPcts,
			Decimal? inPtdBdEmplyeGstTaxPcts,
			Decimal? inPtdBdEmplyrGstTaxPcts,
			string inPtdTxIdToReverse,
			string inPtdBdProjectsIds,
			string inPtdBenTxId,
			Decimal? inPtdPrepayAmt,
			Decimal? inPtdArrearsAmt,
			Decimal? inPtdRepayMultOfCost,
			Decimal? inPtdRepayFixedAmt,
			Decimal? inPtdRepayAmt,
			string inPtdArInvoiceId,
			string inPtdPerbenId,
			string inPtdPerbencsId,
			Decimal? inPtdPrepaidVendorPayment,
			string inPtdArrearsEligibility,
			string inPtdArDepositId,
			string inPtdBdArPaymentsId)
		{
			PtdBdCodesAssocMember = inPtdBdCodes;
			PtdBendedcsIdAssocMember = inPtdBendedcsId;
			PtdBdPrioritiesAssocMember = inPtdBdPriorities;
			PtdBdExtensionsAssocMember = inPtdBdExtensions;
			PtdBdEmplyeDefAmtsAssocMember = inPtdBdEmplyeDefAmts;
			PtdBdEmplyeDefPctsAssocMember = inPtdBdEmplyeDefPcts;
			PtdBdInsureTaxExemptAssocMember = inPtdBdInsureTaxExempt;
			PtdBdEmplyeDefInsAmtsAssocMember = inPtdBdEmplyeDefInsAmts;
			PtdBdEmplyeArNetCalcAssocMember = inPtdBdEmplyeArNetCalc;
			PtdBdEmplyeLimitAmtsAssocMember = inPtdBdEmplyeLimitAmts;
			PtdBdLiabilityGlNosAssocMember = inPtdBdLiabilityGlNos;
			PtdBdEmplyeCalcAmtsAssocMember = inPtdBdEmplyeCalcAmts;
			PtdBdEmplyrDefAmtsAssocMember = inPtdBdEmplyrDefAmts;
			PtdBdEmplyrDefPctsAssocMember = inPtdBdEmplyrDefPcts;
			PtdBdEmplyrLimitAmtsAssocMember = inPtdBdEmplyrLimitAmts;
			PtdBdExpenseGlNosAssocMember = inPtdBdExpenseGlNos;
			PtdBdEmplyrCalcAmtsAssocMember = inPtdBdEmplyrCalcAmts;
			PtdBdArTypesAssocMember = inPtdBdArTypes;
			PtdBdArRefsAssocMember = inPtdBdArRefs;
			PtdBdEmplyeBaseAmtsAssocMember = inPtdBdEmplyeBaseAmts;
			PtdBdEmplyrBaseAmtsAssocMember = inPtdBdEmplyrBaseAmts;
			PtdBdExpensePositionsAssocMember = inPtdBdExpensePositions;
			PtdBdEmplyeCalcCostsAssocMember = inPtdBdEmplyeCalcCosts;
			PtdBdEmplyeCalcGstTaxsAssocMember = inPtdBdEmplyeCalcGstTaxs;
			PtdBdEmplyeCalcGstGlsAssocMember = inPtdBdEmplyeCalcGstGls;
			PtdBdEmplyrCalcCostsAssocMember = inPtdBdEmplyrCalcCosts;
			PtdBdEmplyrCalcGstTaxsAssocMember = inPtdBdEmplyrCalcGstTaxs;
			PtdBdEmplyrCalcGstGlsAssocMember = inPtdBdEmplyrCalcGstGls;
			PtdBdGstComponentAmtsAssocMember = inPtdBdGstComponentAmts;
			PtdBdGstComponentPctsAssocMember = inPtdBdGstComponentPcts;
			PtdBdEmplyeGstTaxPctsAssocMember = inPtdBdEmplyeGstTaxPcts;
			PtdBdEmplyrGstTaxPctsAssocMember = inPtdBdEmplyrGstTaxPcts;
			PtdTxIdToReverseAssocMember = inPtdTxIdToReverse;
			PtdBdProjectsIdsAssocMember = inPtdBdProjectsIds;
			PtdBenTxIdAssocMember = inPtdBenTxId;
			PtdPrepayAmtAssocMember = inPtdPrepayAmt;
			PtdArrearsAmtAssocMember = inPtdArrearsAmt;
			PtdRepayMultOfCostAssocMember = inPtdRepayMultOfCost;
			PtdRepayFixedAmtAssocMember = inPtdRepayFixedAmt;
			PtdRepayAmtAssocMember = inPtdRepayAmt;
			PtdArInvoiceIdAssocMember = inPtdArInvoiceId;
			PtdPerbenIdAssocMember = inPtdPerbenId;
			PtdPerbencsIdAssocMember = inPtdPerbencsId;
			PtdPrepaidVendorPaymentAssocMember = inPtdPrepaidVendorPayment;
			PtdArrearsEligibilityAssocMember = inPtdArrearsEligibility;
			PtdArDepositIdAssocMember = inPtdArDepositId;
			PtdBdArPaymentsIdAssocMember = inPtdBdArPaymentsId;
		}
	}
	
	[Serializable]
	public class PaytodatPtdleave
	{
		public string PtdLvCodesAssocMember;	
		public Decimal? PtdLvAccrualRatesAssocMember;	
		public Decimal? PtdLvPriorBalancesAssocMember;	
		public Decimal? PtdLvLimitsAssocMember;	
		public int? PtdLvPerleaveIdsAssocMember;	
		public string PtdLvTypesAssocMember;	
		public Decimal? PtdLvAccruedHoursAssocMember;	
		public string PtdLvAccruedCommentsAssocMember;	
		public Decimal? PtdLvAccruedAmtsAssocMember;	
		public string PtdLvAccruedFromAcctsAssocMember;	
		public string PtdLvEarnTypesAssocMember;	
		public Decimal? PtdLvTakenHoursAssocMember;	
		public string PtdLvProjectsIdsAssocMember;	
		public PaytodatPtdleave() {}
		public PaytodatPtdleave(
			string inPtdLvCodes,
			Decimal? inPtdLvAccrualRates,
			Decimal? inPtdLvPriorBalances,
			Decimal? inPtdLvLimits,
			int? inPtdLvPerleaveIds,
			string inPtdLvTypes,
			Decimal? inPtdLvAccruedHours,
			string inPtdLvAccruedComments,
			Decimal? inPtdLvAccruedAmts,
			string inPtdLvAccruedFromAccts,
			string inPtdLvEarnTypes,
			Decimal? inPtdLvTakenHours,
			string inPtdLvProjectsIds)
		{
			PtdLvCodesAssocMember = inPtdLvCodes;
			PtdLvAccrualRatesAssocMember = inPtdLvAccrualRates;
			PtdLvPriorBalancesAssocMember = inPtdLvPriorBalances;
			PtdLvLimitsAssocMember = inPtdLvLimits;
			PtdLvPerleaveIdsAssocMember = inPtdLvPerleaveIds;
			PtdLvTypesAssocMember = inPtdLvTypes;
			PtdLvAccruedHoursAssocMember = inPtdLvAccruedHours;
			PtdLvAccruedCommentsAssocMember = inPtdLvAccruedComments;
			PtdLvAccruedAmtsAssocMember = inPtdLvAccruedAmts;
			PtdLvAccruedFromAcctsAssocMember = inPtdLvAccruedFromAccts;
			PtdLvEarnTypesAssocMember = inPtdLvEarnTypes;
			PtdLvTakenHoursAssocMember = inPtdLvTakenHours;
			PtdLvProjectsIdsAssocMember = inPtdLvProjectsIds;
		}
	}
	
	[Serializable]
	public class PaytodatPtdtaxexp
	{
		public string PtdTaxExpControllerAssocMember;	
		public Decimal? PtdTaxExpEmplyrTaxAmtsAssocMember;	
		public PaytodatPtdtaxexp() {}
		public PaytodatPtdtaxexp(
			string inPtdTaxExpController,
			Decimal? inPtdTaxExpEmplyrTaxAmts)
		{
			PtdTaxExpControllerAssocMember = inPtdTaxExpController;
			PtdTaxExpEmplyrTaxAmtsAssocMember = inPtdTaxExpEmplyrTaxAmts;
		}
	}
	
	[Serializable]
	public class PaytodatPtddefbd
	{
		public string PtdDefBdControllerAssocMember;	
		public Decimal? PtdDefBdEmplyeAmtsAssocMember;	
		public Decimal? PtdDefBdEmplyrAmtsAssocMember;	
		public PaytodatPtddefbd() {}
		public PaytodatPtddefbd(
			string inPtdDefBdController,
			Decimal? inPtdDefBdEmplyeAmts,
			Decimal? inPtdDefBdEmplyrAmts)
		{
			PtdDefBdControllerAssocMember = inPtdDefBdController;
			PtdDefBdEmplyeAmtsAssocMember = inPtdDefBdEmplyeAmts;
			PtdDefBdEmplyrAmtsAssocMember = inPtdDefBdEmplyrAmts;
		}
	}
	
	[Serializable]
	public class PaytodatPtdtxblbd
	{
		public string PtdTxblBdControllerAssocMember;	
		public Decimal? PtdTxblBdEmplyrAmtsAssocMember;	
		public PaytodatPtdtxblbd() {}
		public PaytodatPtdtxblbd(
			string inPtdTxblBdController,
			Decimal? inPtdTxblBdEmplyrAmts)
		{
			PtdTxblBdControllerAssocMember = inPtdTxblBdController;
			PtdTxblBdEmplyrAmtsAssocMember = inPtdTxblBdEmplyrAmts;
		}
	}
	
	[Serializable]
	public class PaytodatPtdbdexp
	{
		public string PtdBdExpControllerAssocMember;	
		public Decimal? PtdBdExpEmplyrCalcAmtsAssocMember;	
		public PaytodatPtdbdexp() {}
		public PaytodatPtdbdexp(
			string inPtdBdExpController,
			Decimal? inPtdBdExpEmplyrCalcAmts)
		{
			PtdBdExpControllerAssocMember = inPtdBdExpController;
			PtdBdExpEmplyrCalcAmtsAssocMember = inPtdBdExpEmplyrCalcAmts;
		}
	}
	
	[Serializable]
	public class PaytodatPtdlvtkn
	{
		public string PtdLvTknControllerAssocMember;	
		public Decimal? PtdLvTknHoursAssocMember;	
		public PaytodatPtdlvtkn() {}
		public PaytodatPtdlvtkn(
			string inPtdLvTknController,
			Decimal? inPtdLvTknHours)
		{
			PtdLvTknControllerAssocMember = inPtdLvTknController;
			PtdLvTknHoursAssocMember = inPtdLvTknHours;
		}
	}
}
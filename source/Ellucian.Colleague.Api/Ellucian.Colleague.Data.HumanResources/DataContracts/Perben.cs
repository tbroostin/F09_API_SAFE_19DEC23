//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/31/2017 9:18:37 AM by user sbhole1
//
//     Type: ENTITY
//     Entity: PERBEN
//     Application: HR
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.HumanResources.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Perben")]
	[ColleagueDataContract(GeneratedDateTime = "10/31/2017 9:18:37 AM", User = "sbhole1")]
	[EntityDataContract(EntityName = "PERBEN", EntityType = "PHYS")]
	public class Perben : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: PERBEN.HRP.ID
		/// </summary>
		[DataMember(Order = 0, Name = "PERBEN.HRP.ID")]
		public string PerbenHrpId { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.BD.ID
		/// </summary>
		[DataMember(Order = 1, Name = "PERBEN.BD.ID")]
		public string PerbenBdId { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.ENROLL.DATE
		/// </summary>
		[DataMember(Order = 4, Name = "PERBEN.ENROLL.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PerbenEnrollDate { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.DEPEND.ID
		/// </summary>
		[DataMember(Order = 6, Name = "PERBEN.DEPEND.ID")]
		public List<string> PerbenDependId { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.BENEFICIARY.ID
		/// </summary>
		[DataMember(Order = 7, Name = "PERBEN.BENEFICIARY.ID")]
		public List<string> PerbenBeneficiaryId { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.CANCEL.DATE
		/// </summary>
		[DataMember(Order = 8, Name = "PERBEN.CANCEL.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? PerbenCancelDate { get; set; }
		
		/// <summary>
		/// CDD Name: ALL.BENEFIT.COSTS
		/// </summary>
		[DataMember(Order = 14, Name = "ALL.BENEFIT.COSTS")]
		public List<string> AllBenefitCosts { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.ORG.BENEFICIARY
		/// </summary>
		[DataMember(Order = 21, Name = "PERBEN.ORG.BENEFICIARY")]
		public List<string> PerbenOrgBeneficiary { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.BENEFICIARY.TYPE
		/// </summary>
		[DataMember(Order = 22, Name = "PERBEN.BENEFICIARY.TYPE")]
		public List<string> PerbenBeneficiaryType { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.CHANGE.REASONS
		/// </summary>
		[DataMember(Order = 43, Name = "PERBEN.CHANGE.REASONS")]
		public List<string> PerbenChangeReasons { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.CHANGE.REASONS.DATES
		/// </summary>
		[DataMember(Order = 44, Name = "PERBEN.CHANGE.REASONS.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerbenChangeReasonsDates { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.DEP.PROVIDER.ID
		/// </summary>
		[DataMember(Order = 57, Name = "PERBEN.DEP.PROVIDER.ID")]
		public List<string> PerbenDepProviderId { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.DEP.PROVIDER.NAME
		/// </summary>
		[DataMember(Order = 58, Name = "PERBEN.DEP.PROVIDER.NAME")]
		public List<string> PerbenDepProviderName { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.DEP.FULL.TIME.STUDENT
		/// </summary>
		[DataMember(Order = 59, Name = "PERBEN.DEP.FULL.TIME.STUDENT")]
		public List<string> PerbenDepFullTimeStudent { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.BFCY.DESGNTN.PCT
		/// </summary>
		[DataMember(Order = 60, Name = "PERBEN.BFCY.DESGNTN.PCT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PerbenBfcyDesgntnPct { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.ORG.BFCY.TYPE
		/// </summary>
		[DataMember(Order = 61, Name = "PERBEN.ORG.BFCY.TYPE")]
		public List<string> PerbenOrgBfcyType { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.ORG.BFCY.DESGNTN.PCT
		/// </summary>
		[DataMember(Order = 62, Name = "PERBEN.ORG.BFCY.DESGNTN.PCT")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> PerbenOrgBfcyDesgntnPct { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.ORG.ADDR
		/// </summary>
		[DataMember(Order = 63, Name = "PERBEN.ORG.ADDR")]
		public List<string> PerbenOrgAddr { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.DEP.START.DATE
		/// </summary>
		[DataMember(Order = 64, Name = "PERBEN.DEP.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerbenDepStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.DEP.END.DATE
		/// </summary>
		[DataMember(Order = 65, Name = "PERBEN.DEP.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerbenDepEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.ORG.START.DATE
		/// </summary>
		[DataMember(Order = 66, Name = "PERBEN.ORG.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerbenOrgStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.ORG.END.DATE
		/// </summary>
		[DataMember(Order = 67, Name = "PERBEN.ORG.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerbenOrgEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.BFCY.START.DATE
		/// </summary>
		[DataMember(Order = 68, Name = "PERBEN.BFCY.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerbenBfcyStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.BFCY.END.DATE
		/// </summary>
		[DataMember(Order = 69, Name = "PERBEN.BFCY.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> PerbenBfcyEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.INTG.CONTRIBUTION
		/// </summary>
		[DataMember(Order = 70, Name = "PERBEN.INTG.CONTRIBUTION")]
		public string PerbenIntgContribution { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.INTG.COMMITMENT.TYPE
		/// </summary>
		[DataMember(Order = 71, Name = "PERBEN.INTG.COMMITMENT.TYPE")]
		public string PerbenIntgCommitmentType { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.INTG.INTERVAL
		/// </summary>
		[DataMember(Order = 73, Name = "PERBEN.INTG.INTERVAL")]
		public int? PerbenIntgInterval { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.INTG.MON.PAY.PERIODS
		/// </summary>
		[DataMember(Order = 74, Name = "PERBEN.INTG.MON.PAY.PERIODS")]
		public List<int?> PerbenIntgMonPayPeriods { get; set; }
		
		/// <summary>
		/// CDD Name: PERBEN.INTG.BENEFICIARY.IDX
		/// </summary>
		[DataMember(Order = 75, Name = "PERBEN.INTG.BENEFICIARY.IDX")]
		public List<string> PerbenIntgBeneficiaryIdx { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PerbenPerbendp> PerbendpEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PerbenChgreas> ChgreasEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PerbenPerbenDeps> PerbenDepsEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<PerbenPerbenOrgs> PerbenOrgsEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: PERBENDP
			
			PerbendpEntityAssociation = new List<PerbenPerbendp>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerbenBeneficiaryType != null)
			{
				int numPerbendp = PerbenBeneficiaryType.Count;
				if (PerbenBfcyDesgntnPct !=null && PerbenBfcyDesgntnPct.Count > numPerbendp) numPerbendp = PerbenBfcyDesgntnPct.Count;
				if (PerbenBfcyStartDate !=null && PerbenBfcyStartDate.Count > numPerbendp) numPerbendp = PerbenBfcyStartDate.Count;
				if (PerbenBfcyEndDate !=null && PerbenBfcyEndDate.Count > numPerbendp) numPerbendp = PerbenBfcyEndDate.Count;

				for (int i = 0; i < numPerbendp; i++)
				{

					string value0 = "";
					if (PerbenBeneficiaryType != null && i < PerbenBeneficiaryType.Count)
					{
						value0 = PerbenBeneficiaryType[i];
					}


					Decimal? value1 = null;
					if (PerbenBfcyDesgntnPct != null && i < PerbenBfcyDesgntnPct.Count)
					{
						value1 = PerbenBfcyDesgntnPct[i];
					}


					DateTime? value2 = null;
					if (PerbenBfcyStartDate != null && i < PerbenBfcyStartDate.Count)
					{
						value2 = PerbenBfcyStartDate[i];
					}


					DateTime? value3 = null;
					if (PerbenBfcyEndDate != null && i < PerbenBfcyEndDate.Count)
					{
						value3 = PerbenBfcyEndDate[i];
					}

					PerbendpEntityAssociation.Add(new PerbenPerbendp( value0, value1, value2, value3));
				}
			}
			// EntityAssociation Name: CHGREAS
			
			ChgreasEntityAssociation = new List<PerbenChgreas>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerbenChangeReasons != null)
			{
				int numChgreas = PerbenChangeReasons.Count;
				if (PerbenChangeReasonsDates !=null && PerbenChangeReasonsDates.Count > numChgreas) numChgreas = PerbenChangeReasonsDates.Count;

				for (int i = 0; i < numChgreas; i++)
				{

					string value0 = "";
					if (PerbenChangeReasons != null && i < PerbenChangeReasons.Count)
					{
						value0 = PerbenChangeReasons[i];
					}


					DateTime? value1 = null;
					if (PerbenChangeReasonsDates != null && i < PerbenChangeReasonsDates.Count)
					{
						value1 = PerbenChangeReasonsDates[i];
					}

					ChgreasEntityAssociation.Add(new PerbenChgreas( value0, value1));
				}
			}
			// EntityAssociation Name: PERBEN.DEPS
			
			PerbenDepsEntityAssociation = new List<PerbenPerbenDeps>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerbenDepProviderId != null)
			{
				int numPerbenDeps = PerbenDepProviderId.Count;
				if (PerbenDepProviderName !=null && PerbenDepProviderName.Count > numPerbenDeps) numPerbenDeps = PerbenDepProviderName.Count;
				if (PerbenDepFullTimeStudent !=null && PerbenDepFullTimeStudent.Count > numPerbenDeps) numPerbenDeps = PerbenDepFullTimeStudent.Count;
				if (PerbenDepStartDate !=null && PerbenDepStartDate.Count > numPerbenDeps) numPerbenDeps = PerbenDepStartDate.Count;
				if (PerbenDepEndDate !=null && PerbenDepEndDate.Count > numPerbenDeps) numPerbenDeps = PerbenDepEndDate.Count;

				for (int i = 0; i < numPerbenDeps; i++)
				{

					string value0 = "";
					if (PerbenDepProviderId != null && i < PerbenDepProviderId.Count)
					{
						value0 = PerbenDepProviderId[i];
					}


					string value1 = "";
					if (PerbenDepProviderName != null && i < PerbenDepProviderName.Count)
					{
						value1 = PerbenDepProviderName[i];
					}


					string value2 = "";
					if (PerbenDepFullTimeStudent != null && i < PerbenDepFullTimeStudent.Count)
					{
						value2 = PerbenDepFullTimeStudent[i];
					}


					DateTime? value3 = null;
					if (PerbenDepStartDate != null && i < PerbenDepStartDate.Count)
					{
						value3 = PerbenDepStartDate[i];
					}


					DateTime? value4 = null;
					if (PerbenDepEndDate != null && i < PerbenDepEndDate.Count)
					{
						value4 = PerbenDepEndDate[i];
					}

					PerbenDepsEntityAssociation.Add(new PerbenPerbenDeps( value0, value1, value2, value3, value4));
				}
			}
			// EntityAssociation Name: PERBEN.ORGS
			
			PerbenOrgsEntityAssociation = new List<PerbenPerbenOrgs>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(PerbenOrgBfcyType != null)
			{
				int numPerbenOrgs = PerbenOrgBfcyType.Count;
				if (PerbenOrgBfcyDesgntnPct !=null && PerbenOrgBfcyDesgntnPct.Count > numPerbenOrgs) numPerbenOrgs = PerbenOrgBfcyDesgntnPct.Count;
				if (PerbenOrgAddr !=null && PerbenOrgAddr.Count > numPerbenOrgs) numPerbenOrgs = PerbenOrgAddr.Count;
				if (PerbenOrgStartDate !=null && PerbenOrgStartDate.Count > numPerbenOrgs) numPerbenOrgs = PerbenOrgStartDate.Count;
				if (PerbenOrgEndDate !=null && PerbenOrgEndDate.Count > numPerbenOrgs) numPerbenOrgs = PerbenOrgEndDate.Count;

				for (int i = 0; i < numPerbenOrgs; i++)
				{

					string value0 = "";
					if (PerbenOrgBfcyType != null && i < PerbenOrgBfcyType.Count)
					{
						value0 = PerbenOrgBfcyType[i];
					}


					Decimal? value1 = null;
					if (PerbenOrgBfcyDesgntnPct != null && i < PerbenOrgBfcyDesgntnPct.Count)
					{
						value1 = PerbenOrgBfcyDesgntnPct[i];
					}


					string value2 = "";
					if (PerbenOrgAddr != null && i < PerbenOrgAddr.Count)
					{
						value2 = PerbenOrgAddr[i];
					}


					DateTime? value3 = null;
					if (PerbenOrgStartDate != null && i < PerbenOrgStartDate.Count)
					{
						value3 = PerbenOrgStartDate[i];
					}


					DateTime? value4 = null;
					if (PerbenOrgEndDate != null && i < PerbenOrgEndDate.Count)
					{
						value4 = PerbenOrgEndDate[i];
					}

					PerbenOrgsEntityAssociation.Add(new PerbenPerbenOrgs( value0, value1, value2, value3, value4));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class PerbenPerbendp
	{
		public string PerbenBeneficiaryTypeAssocMember;	
		public Decimal? PerbenBfcyDesgntnPctAssocMember;	
		public DateTime? PerbenBfcyStartDateAssocMember;	
		public DateTime? PerbenBfcyEndDateAssocMember;	
		public PerbenPerbendp() {}
		public PerbenPerbendp(
			string inPerbenBeneficiaryType,
			Decimal? inPerbenBfcyDesgntnPct,
			DateTime? inPerbenBfcyStartDate,
			DateTime? inPerbenBfcyEndDate)
		{
			PerbenBeneficiaryTypeAssocMember = inPerbenBeneficiaryType;
			PerbenBfcyDesgntnPctAssocMember = inPerbenBfcyDesgntnPct;
			PerbenBfcyStartDateAssocMember = inPerbenBfcyStartDate;
			PerbenBfcyEndDateAssocMember = inPerbenBfcyEndDate;
		}
	}
	
	[Serializable]
	public class PerbenChgreas
	{
		public string PerbenChangeReasonsAssocMember;	
		public DateTime? PerbenChangeReasonsDatesAssocMember;	
		public PerbenChgreas() {}
		public PerbenChgreas(
			string inPerbenChangeReasons,
			DateTime? inPerbenChangeReasonsDates)
		{
			PerbenChangeReasonsAssocMember = inPerbenChangeReasons;
			PerbenChangeReasonsDatesAssocMember = inPerbenChangeReasonsDates;
		}
	}
	
	[Serializable]
	public class PerbenPerbenDeps
	{
		public string PerbenDepProviderIdAssocMember;	
		public string PerbenDepProviderNameAssocMember;	
		public string PerbenDepFullTimeStudentAssocMember;	
		public DateTime? PerbenDepStartDateAssocMember;	
		public DateTime? PerbenDepEndDateAssocMember;	
		public PerbenPerbenDeps() {}
		public PerbenPerbenDeps(
			string inPerbenDepProviderId,
			string inPerbenDepProviderName,
			string inPerbenDepFullTimeStudent,
			DateTime? inPerbenDepStartDate,
			DateTime? inPerbenDepEndDate)
		{
			PerbenDepProviderIdAssocMember = inPerbenDepProviderId;
			PerbenDepProviderNameAssocMember = inPerbenDepProviderName;
			PerbenDepFullTimeStudentAssocMember = inPerbenDepFullTimeStudent;
			PerbenDepStartDateAssocMember = inPerbenDepStartDate;
			PerbenDepEndDateAssocMember = inPerbenDepEndDate;
		}
	}
	
	[Serializable]
	public class PerbenPerbenOrgs
	{
		public string PerbenOrgBfcyTypeAssocMember;	
		public Decimal? PerbenOrgBfcyDesgntnPctAssocMember;	
		public string PerbenOrgAddrAssocMember;	
		public DateTime? PerbenOrgStartDateAssocMember;	
		public DateTime? PerbenOrgEndDateAssocMember;	
		public PerbenPerbenOrgs() {}
		public PerbenPerbenOrgs(
			string inPerbenOrgBfcyType,
			Decimal? inPerbenOrgBfcyDesgntnPct,
			string inPerbenOrgAddr,
			DateTime? inPerbenOrgStartDate,
			DateTime? inPerbenOrgEndDate)
		{
			PerbenOrgBfcyTypeAssocMember = inPerbenOrgBfcyType;
			PerbenOrgBfcyDesgntnPctAssocMember = inPerbenOrgBfcyDesgntnPct;
			PerbenOrgAddrAssocMember = inPerbenOrgAddr;
			PerbenOrgStartDateAssocMember = inPerbenOrgStartDate;
			PerbenOrgEndDateAssocMember = inPerbenOrgEndDate;
		}
	}
}
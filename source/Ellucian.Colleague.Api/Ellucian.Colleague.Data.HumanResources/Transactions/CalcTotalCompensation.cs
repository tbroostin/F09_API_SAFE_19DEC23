//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 6/26/2019 09:56:42 AM by user ganeshrajan
//
//     Type: CTX
//     Transaction ID: CALC.TOTAL.COMPENSATION
//     Application: HR
//     Environment: Colleage Studio Dev
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;

namespace Ellucian.Colleague.Data.HumanResources.Transactions
{
	[DataContract]
	public class Taxes
	{
		[DataMember]
		[SctrqDataMember(AppServerName = "TAX.CODES", OutBoundData = true)]
		public string TaxCodes { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "TAX.DESCRIPTIONS", OutBoundData = true)]
		public string TaxDescriptions { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "TAX.EMPLOYEE.AMOUNTS", OutBoundData = true)]
		public Nullable<Decimal> TaxEmployeeAmounts { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "TAX.EMPLOYER.AMOUNTS", OutBoundData = true)]
		public Nullable<Decimal> TaxEmployerAmounts { get; set; }
	}

	[DataContract]
	public class Bended
	{
		[DataMember]
		[SctrqDataMember(AppServerName = "BENDED.CODES", OutBoundData = true)]
		public string BendedCodes { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "BENDED.DESCRIPTIONS", OutBoundData = true)]
		public string BendedDescriptions { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "BENDED.EMPLOYEE.AMOUNTS", OutBoundData = true)]
		public Nullable<Decimal> BendedEmployeeAmounts { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "BENDED.EMPLOYER.AMOUNTS", OutBoundData = true)]
		public Nullable<Decimal> BendedEmployerAmounts { get; set; }
	}

	[DataContract]
	public class Leave
	{
		[DataMember]
		[SctrqDataMember(AppServerName = "LEAVE.CODES", OutBoundData = true)]
		public string LeaveCodes { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "LEAVE.DESCRIPTIONS", OutBoundData = true)]
		public string LeaveDescriptions { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "LEAVE.AMOUNTS", OutBoundData = true)]
		public Nullable<Decimal> LeaveAmounts { get; set; }
	}

	[DataContract]
	public class Stipends
	{
		[DataMember]
		[SctrqDataMember(AppServerName = "STIPEND.DESCRIPTIONS", OutBoundData = true)]
		public string StipendDescriptions { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "STIPEND.TYPES", OutBoundData = true)]
		public string StipendTypes { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "STIPEND.AMOUNTS", OutBoundData = true)]
		public Nullable<Decimal> StipendAmounts { get; set; }
	}

	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract]
	[ColleagueDataContract(ColleagueId = "CALC.TOTAL.COMPENSATION", GeneratedDateTime = "6/26/2019 09:56:42 AM", User = "ganeshrajan")]
	[SctrqDataContract(Application = "HR", DataContractVersion = 1)]
	public class CalcTotalCompensationRequest
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "IS.ADMIN.VIEW", UseEnvisionBooleanConventions = EnvisionBooleanTypesEnum.OneZero, InBoundData = true)]        
		public bool IsAdminView { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "EMPLOYEE.ID", InBoundData = true)]        
		public string EmployeeId { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "SALARY.AMOUNT", InBoundData = true)]        
		public Nullable<Decimal> SalaryAmount { get; set; }

		public CalcTotalCompensationRequest()
		{	
		}
	}

	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract]
	[ColleagueDataContract(ColleagueId = "CALC.TOTAL.COMPENSATION", GeneratedDateTime = "6/26/2019 09:56:42 AM", User = "ganeshrajan")]
	[SctrqDataContract(Application = "HR", DataContractVersion = 1)]
	public class CalcTotalCompensationResponse
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "EMPLOYEE.ID", OutBoundData = true)]        
		public string EmployeeId { get; set; }

		[DataMember]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[SctrqDataMember(AppServerName = "SALARY.AMOUNT", OutBoundData = true)]        
		public Nullable<Decimal> SalaryAmount { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "ERROR.MESSAGE", OutBoundData = true)]        
		public string ErrorMessage { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "ERROR.CODE", OutBoundData = true)]        
		public string ErrorCode { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "Grp:TAX.CODES", OutBoundData = true)]
		public List<Taxes> Taxes { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "Grp:BENDED.CODES", OutBoundData = true)]
		public List<Bended> Bended { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "Grp:LEAVE.CODES", OutBoundData = true)]
		public List<Leave> Leave { get; set; }

		[DataMember]
		[SctrqDataMember(AppServerName = "Grp:STIPEND.DESCRIPTIONS", OutBoundData = true)]
		public List<Stipends> Stipends { get; set; }

		public CalcTotalCompensationResponse()
		{	
			Taxes = new List<Taxes>();
			Bended = new List<Bended>();
			Leave = new List<Leave>();
			Stipends = new List<Stipends>();
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 6/24/2019 10:24:35 AM by user sbhole1
//
//     Type: ENTITY
//     Entity: APPLICATIONS
//     Application: ST
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Applications")]
	[ColleagueDataContract(GeneratedDateTime = "6/24/2019 10:24:35 AM", User = "sbhole1")]
	[EntityDataContract(EntityName = "APPLICATIONS", EntityType = "PHYS")]
	public class Applications : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: APPL.APPLICANT
		/// </summary>
		[DataMember(Order = 0, Name = "APPL.APPLICANT")]
		public string ApplApplicant { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.ACAD.PROGRAM
		/// </summary>
		[DataMember(Order = 1, Name = "APPL.ACAD.PROGRAM")]
		public string ApplAcadProgram { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.NO
		/// </summary>
		[DataMember(Order = 2, Name = "APPL.NO")]
		public string ApplNo { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.DATE
		/// </summary>
		//[DataMember(Order = 3, Name = "APPL.DATE")]
		//[DisplayFormat(DataFormatString = "{0:d}")]
		//[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		//public DateTime? ApplDate { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.STATUS
		/// </summary>
		[DataMember(Order = 4, Name = "APPL.STATUS")]
		public List<string> ApplStatus { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.STATUS.DATE
		/// </summary>
		[DataMember(Order = 5, Name = "APPL.STATUS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ApplStatusDate { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.DECISION.BY
		/// </summary>
		[DataMember(Order = 6, Name = "APPL.DECISION.BY")]
		public List<string> ApplDecisionBy { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.STATUS.TIME
		/// </summary>
		[DataMember(Order = 7, Name = "APPL.STATUS.TIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ApplStatusTime { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.START.TERM
		/// </summary>
		[DataMember(Order = 8, Name = "APPL.START.TERM")]
		public string ApplStartTerm { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.LOCATIONS
		/// </summary>
		[DataMember(Order = 9, Name = "APPL.LOCATIONS")]
		public List<string> ApplLocations { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.LOCATION.DATES
		/// </summary>
		[DataMember(Order = 10, Name = "APPL.LOCATION.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ApplLocationDates { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.LOCATION.CHANGE.REASONS
		/// </summary>
		[DataMember(Order = 11, Name = "APPL.LOCATION.CHANGE.REASONS")]
		public List<string> ApplLocationChangeReasons { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.STUDENT.LOAD.INTENT
		/// </summary>
		[DataMember(Order = 12, Name = "APPL.STUDENT.LOAD.INTENT")]
		public string ApplStudentLoadIntent { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.RESIDENCY.STATUS
		/// </summary>
		[DataMember(Order = 14, Name = "APPL.RESIDENCY.STATUS")]
		public string ApplResidencyStatus { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.ADMISSIONS.REP
		/// </summary>
		[DataMember(Order = 17, Name = "APPL.ADMISSIONS.REP")]
		public string ApplAdmissionsRep { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.ADMIT.STATUS
		/// </summary>
		[DataMember(Order = 23, Name = "APPL.ADMIT.STATUS")]
		public string ApplAdmitStatus { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.WITHDRAW.DATE
		/// </summary>
		[DataMember(Order = 34, Name = "APPL.WITHDRAW.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ApplWithdrawDate { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.WITHDRAW.REASON
		/// </summary>
		[DataMember(Order = 35, Name = "APPL.WITHDRAW.REASON")]
		public string ApplWithdrawReason { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.ATTENDED.INSTEAD
		/// </summary>
		[DataMember(Order = 36, Name = "APPL.ATTENDED.INSTEAD")]
		public string ApplAttendedInstead { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.COMMENTS
		/// </summary>
		[DataMember(Order = 37, Name = "APPL.COMMENTS")]
		public string ApplComments { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.ACTIVE.STU.PROGRAM.FLAG
		/// </summary>
		//[DataMember(Order = 56, Name = "APPL.ACTIVE.STU.PROGRAM.FLAG")]
		//public string ApplActiveStuProgramFlag { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.SOURCE
		/// </summary>
		[DataMember(Order = 58, Name = "APPL.SOURCE")]
		public string ApplSource { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.INTG.APPL.TYPE
		/// </summary>
		[DataMember(Order = 62, Name = "APPL.INTG.APPL.TYPE")]
		public string ApplIntgApplType { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.STATUS.DATE.TIME.IDX
		/// </summary>
		[DataMember(Order = 64, Name = "APPL.STATUS.DATE.TIME.IDX")]
		public List<string> ApplStatusDateTimeIdx { get; set; }
		
		/// <summary>
		/// CDD Name: APPL.INTG.KEY.IDX
		/// </summary>
		[DataMember(Order = 65, Name = "APPL.INTG.KEY.IDX")]
		public string ApplIntgKeyIdx { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ApplicationsApplStatuses> ApplStatusesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<ApplicationsApplLocationInfo> ApplLocationInfoEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: APPL.STATUSES
			
			ApplStatusesEntityAssociation = new List<ApplicationsApplStatuses>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ApplStatus != null)
			{
				int numApplStatuses = ApplStatus.Count;
				if (ApplStatusDate !=null && ApplStatusDate.Count > numApplStatuses) numApplStatuses = ApplStatusDate.Count;
				if (ApplDecisionBy !=null && ApplDecisionBy.Count > numApplStatuses) numApplStatuses = ApplDecisionBy.Count;
				if (ApplStatusTime !=null && ApplStatusTime.Count > numApplStatuses) numApplStatuses = ApplStatusTime.Count;

				for (int i = 0; i < numApplStatuses; i++)
				{

					string value0 = "";
					if (ApplStatus != null && i < ApplStatus.Count)
					{
						value0 = ApplStatus[i];
					}


					DateTime? value1 = null;
					if (ApplStatusDate != null && i < ApplStatusDate.Count)
					{
						value1 = ApplStatusDate[i];
					}


					string value2 = "";
					if (ApplDecisionBy != null && i < ApplDecisionBy.Count)
					{
						value2 = ApplDecisionBy[i];
					}


					DateTime? value3 = null;
					if (ApplStatusTime != null && i < ApplStatusTime.Count)
					{
						value3 = ApplStatusTime[i];
					}

					ApplStatusesEntityAssociation.Add(new ApplicationsApplStatuses( value0, value1, value2, value3));
				}
			}
			// EntityAssociation Name: APPL.LOCATION.INFO
			
			ApplLocationInfoEntityAssociation = new List<ApplicationsApplLocationInfo>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ApplLocations != null)
			{
				int numApplLocationInfo = ApplLocations.Count;
				if (ApplLocationDates !=null && ApplLocationDates.Count > numApplLocationInfo) numApplLocationInfo = ApplLocationDates.Count;
				if (ApplLocationChangeReasons !=null && ApplLocationChangeReasons.Count > numApplLocationInfo) numApplLocationInfo = ApplLocationChangeReasons.Count;

				for (int i = 0; i < numApplLocationInfo; i++)
				{

					string value0 = "";
					if (ApplLocations != null && i < ApplLocations.Count)
					{
						value0 = ApplLocations[i];
					}


					DateTime? value1 = null;
					if (ApplLocationDates != null && i < ApplLocationDates.Count)
					{
						value1 = ApplLocationDates[i];
					}


					string value2 = "";
					if (ApplLocationChangeReasons != null && i < ApplLocationChangeReasons.Count)
					{
						value2 = ApplLocationChangeReasons[i];
					}

					ApplLocationInfoEntityAssociation.Add(new ApplicationsApplLocationInfo( value0, value1, value2));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class ApplicationsApplStatuses
	{
		public string ApplStatusAssocMember;	
		public DateTime? ApplStatusDateAssocMember;	
		public string ApplDecisionByAssocMember;	
		public DateTime? ApplStatusTimeAssocMember;	
		public ApplicationsApplStatuses() {}
		public ApplicationsApplStatuses(
			string inApplStatus,
			DateTime? inApplStatusDate,
			string inApplDecisionBy,
			DateTime? inApplStatusTime)
		{
			ApplStatusAssocMember = inApplStatus;
			ApplStatusDateAssocMember = inApplStatusDate;
			ApplDecisionByAssocMember = inApplDecisionBy;
			ApplStatusTimeAssocMember = inApplStatusTime;
		}
	}
	
	[Serializable]
	public class ApplicationsApplLocationInfo
	{
		public string ApplLocationsAssocMember;	
		public DateTime? ApplLocationDatesAssocMember;	
		public string ApplLocationChangeReasonsAssocMember;	
		public ApplicationsApplLocationInfo() {}
		public ApplicationsApplLocationInfo(
			string inApplLocations,
			DateTime? inApplLocationDates,
			string inApplLocationChangeReasons)
		{
			ApplLocationsAssocMember = inApplLocations;
			ApplLocationDatesAssocMember = inApplLocationDates;
			ApplLocationChangeReasonsAssocMember = inApplLocationChangeReasons;
		}
	}
}
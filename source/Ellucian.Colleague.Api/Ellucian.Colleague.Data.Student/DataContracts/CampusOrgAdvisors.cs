//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/3/2017 2:23:42 PM by user nickkirschke
//
//     Type: ENTITY
//     Entity: CAMPUS.ORG.ADVISORS
//     Application: ST
//     Environment: coldevwapp01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "CampusOrgAdvisors")]
	[ColleagueDataContract(GeneratedDateTime = "10/3/2017 2:23:42 PM", User = "nickkirschke")]
	[EntityDataContract(EntityName = "CAMPUS.ORG.ADVISORS", EntityType = "PHYS")]
	public class CampusOrgAdvisors : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: CMPA.START.DATES
		/// </summary>
		[DataMember(Order = 0, Name = "CMPA.START.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> CmpaStartDates { get; set; }
		
		/// <summary>
		/// CDD Name: CMPA.END.DATES
		/// </summary>
		[DataMember(Order = 1, Name = "CMPA.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> CmpaEndDates { get; set; }
		
		/// <summary>
		/// CDD Name: CMPA.LOADS
		/// </summary>
		[DataMember(Order = 2, Name = "CMPA.LOADS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> CmpaLoads { get; set; }
		
		/// <summary>
		/// CDD Name: CMPA.ROLES
		/// </summary>
		[DataMember(Order = 3, Name = "CMPA.ROLES")]
		public List<string> CmpaRoles { get; set; }
		
		/// <summary>
		/// CDD Name: CMPA.CONTACT.HOURS
		/// </summary>
		[DataMember(Order = 19, Name = "CMPA.CONTACT.HOURS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> CmpaContactHours { get; set; }
		
		/// <summary>
		/// CDD Name: CMPA.CONTACT.MEASURES
		/// </summary>
		[DataMember(Order = 20, Name = "CMPA.CONTACT.MEASURES")]
		public List<string> CmpaContactMeasures { get; set; }
		
		/// <summary>
		/// CDD Name: CMPA.PAC.LP.ASGMTS
		/// </summary>
		[DataMember(Order = 21, Name = "CMPA.PAC.LP.ASGMTS")]
		public List<string> CmpaPacLpAsgmts { get; set; }
		
		/// <summary>
		/// CDD Name: CMPA.ENTRY.IDS
		/// </summary>
		[DataMember(Order = 22, Name = "CMPA.ENTRY.IDS")]
		public List<string> CmpaEntryIds { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<CampusOrgAdvisorsAdvisorLoad> AdvisorLoadEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: ADVISOR.LOAD
			
			AdvisorLoadEntityAssociation = new List<CampusOrgAdvisorsAdvisorLoad>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(CmpaStartDates != null)
			{
				int numAdvisorLoad = CmpaStartDates.Count;
				if (CmpaEndDates !=null && CmpaEndDates.Count > numAdvisorLoad) numAdvisorLoad = CmpaEndDates.Count;
				if (CmpaLoads !=null && CmpaLoads.Count > numAdvisorLoad) numAdvisorLoad = CmpaLoads.Count;
				if (CmpaRoles !=null && CmpaRoles.Count > numAdvisorLoad) numAdvisorLoad = CmpaRoles.Count;
				if (CmpaContactHours !=null && CmpaContactHours.Count > numAdvisorLoad) numAdvisorLoad = CmpaContactHours.Count;
				if (CmpaContactMeasures !=null && CmpaContactMeasures.Count > numAdvisorLoad) numAdvisorLoad = CmpaContactMeasures.Count;
				if (CmpaPacLpAsgmts !=null && CmpaPacLpAsgmts.Count > numAdvisorLoad) numAdvisorLoad = CmpaPacLpAsgmts.Count;
				if (CmpaEntryIds !=null && CmpaEntryIds.Count > numAdvisorLoad) numAdvisorLoad = CmpaEntryIds.Count;

				for (int i = 0; i < numAdvisorLoad; i++)
				{

					DateTime? value0 = null;
					if (CmpaStartDates != null && i < CmpaStartDates.Count)
					{
						value0 = CmpaStartDates[i];
					}


					DateTime? value1 = null;
					if (CmpaEndDates != null && i < CmpaEndDates.Count)
					{
						value1 = CmpaEndDates[i];
					}


					Decimal? value2 = null;
					if (CmpaLoads != null && i < CmpaLoads.Count)
					{
						value2 = CmpaLoads[i];
					}


					string value3 = "";
					if (CmpaRoles != null && i < CmpaRoles.Count)
					{
						value3 = CmpaRoles[i];
					}


					Decimal? value4 = null;
					if (CmpaContactHours != null && i < CmpaContactHours.Count)
					{
						value4 = CmpaContactHours[i];
					}


					string value5 = "";
					if (CmpaContactMeasures != null && i < CmpaContactMeasures.Count)
					{
						value5 = CmpaContactMeasures[i];
					}


					string value6 = "";
					if (CmpaPacLpAsgmts != null && i < CmpaPacLpAsgmts.Count)
					{
						value6 = CmpaPacLpAsgmts[i];
					}


					string value7 = "";
					if (CmpaEntryIds != null && i < CmpaEntryIds.Count)
					{
						value7 = CmpaEntryIds[i];
					}

					AdvisorLoadEntityAssociation.Add(new CampusOrgAdvisorsAdvisorLoad( value0, value1, value2, value3, value4, value5, value6, value7));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class CampusOrgAdvisorsAdvisorLoad
	{
		public DateTime? CmpaStartDatesAssocMember;	
		public DateTime? CmpaEndDatesAssocMember;	
		public Decimal? CmpaLoadsAssocMember;	
		public string CmpaRolesAssocMember;	
		public Decimal? CmpaContactHoursAssocMember;	
		public string CmpaContactMeasuresAssocMember;	
		public string CmpaPacLpAsgmtsAssocMember;	
		public string CmpaEntryIdsAssocMember;	
		public CampusOrgAdvisorsAdvisorLoad() {}
		public CampusOrgAdvisorsAdvisorLoad(
			DateTime? inCmpaStartDates,
			DateTime? inCmpaEndDates,
			Decimal? inCmpaLoads,
			string inCmpaRoles,
			Decimal? inCmpaContactHours,
			string inCmpaContactMeasures,
			string inCmpaPacLpAsgmts,
			string inCmpaEntryIds)
		{
			CmpaStartDatesAssocMember = inCmpaStartDates;
			CmpaEndDatesAssocMember = inCmpaEndDates;
			CmpaLoadsAssocMember = inCmpaLoads;
			CmpaRolesAssocMember = inCmpaRoles;
			CmpaContactHoursAssocMember = inCmpaContactHours;
			CmpaContactMeasuresAssocMember = inCmpaContactMeasures;
			CmpaPacLpAsgmtsAssocMember = inCmpaPacLpAsgmts;
			CmpaEntryIdsAssocMember = inCmpaEntryIds;
		}
	}
}
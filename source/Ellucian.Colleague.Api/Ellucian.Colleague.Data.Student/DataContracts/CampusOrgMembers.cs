//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 3:06:11 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: CAMPUS.ORG.MEMBERS
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "CampusOrgMembers")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 3:06:11 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "CAMPUS.ORG.MEMBERS", EntityType = "PHYS")]
	public class CampusOrgMembers : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: CMPM.ROLES
		/// </summary>
		[DataMember(Order = 0, Name = "CMPM.ROLES")]
		public List<string> CmpmRoles { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.ROLE.START.DATES
		/// </summary>
		[DataMember(Order = 1, Name = "CMPM.ROLE.START.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> CmpmRoleStartDates { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.ROLE.END.DATES
		/// </summary>
		[DataMember(Order = 2, Name = "CMPM.ROLE.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> CmpmRoleEndDates { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.LOAD
		/// </summary>
		[DataMember(Order = 3, Name = "CMPM.LOAD")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> CmpmLoad { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.START.DATES
		/// </summary>
		[DataMember(Order = 4, Name = "CMPM.START.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> CmpmStartDates { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.END.DATES
		/// </summary>
		[DataMember(Order = 5, Name = "CMPM.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> CmpmEndDates { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.ROLE.STATUSES
		/// </summary>
		[DataMember(Order = 10, Name = "CMPM.ROLE.STATUSES")]
		public List<string> CmpmRoleStatuses { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.PRIMARY.ROLE.FLAGS
		/// </summary>
		[DataMember(Order = 11, Name = "CMPM.PRIMARY.ROLE.FLAGS")]
		public List<string> CmpmPrimaryRoleFlags { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.STATUSES
		/// </summary>
		[DataMember(Order = 12, Name = "CMPM.STATUSES")]
		public List<string> CmpmStatuses { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.ROLE.CONTACT.HOURS
		/// </summary>
		[DataMember(Order = 24, Name = "CMPM.ROLE.CONTACT.HOURS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> CmpmRoleContactHours { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.ROLE.CONTACT.MEASURES
		/// </summary>
		[DataMember(Order = 25, Name = "CMPM.ROLE.CONTACT.MEASURES")]
		public List<string> CmpmRoleContactMeasures { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.ROLE.PAC.LP.ASGMTS
		/// </summary>
		[DataMember(Order = 26, Name = "CMPM.ROLE.PAC.LP.ASGMTS")]
		public List<string> CmpmRolePacLpAsgmts { get; set; }
		
		/// <summary>
		/// CDD Name: CMPM.ROLE.ENTRY.IDS
		/// </summary>
		[DataMember(Order = 27, Name = "CMPM.ROLE.ENTRY.IDS")]
		public List<string> CmpmRoleEntryIds { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<CampusOrgMembersCampusOrgRoles> CampusOrgRolesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<CampusOrgMembersCampusOrgAffiliation> CampusOrgAffiliationEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: CAMPUS.ORG.ROLES
			
			CampusOrgRolesEntityAssociation = new List<CampusOrgMembersCampusOrgRoles>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(CmpmRoles != null)
			{
				int numCampusOrgRoles = CmpmRoles.Count;
				if (CmpmRoleStartDates !=null && CmpmRoleStartDates.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmRoleStartDates.Count;
				if (CmpmRoleEndDates !=null && CmpmRoleEndDates.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmRoleEndDates.Count;
				if (CmpmLoad !=null && CmpmLoad.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmLoad.Count;
				if (CmpmRoleStatuses !=null && CmpmRoleStatuses.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmRoleStatuses.Count;
				if (CmpmPrimaryRoleFlags !=null && CmpmPrimaryRoleFlags.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmPrimaryRoleFlags.Count;
				if (CmpmRoleContactHours !=null && CmpmRoleContactHours.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmRoleContactHours.Count;
				if (CmpmRoleContactMeasures !=null && CmpmRoleContactMeasures.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmRoleContactMeasures.Count;
				if (CmpmRolePacLpAsgmts !=null && CmpmRolePacLpAsgmts.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmRolePacLpAsgmts.Count;
				if (CmpmRoleEntryIds !=null && CmpmRoleEntryIds.Count > numCampusOrgRoles) numCampusOrgRoles = CmpmRoleEntryIds.Count;

				for (int i = 0; i < numCampusOrgRoles; i++)
				{

					string value0 = "";
					if (CmpmRoles != null && i < CmpmRoles.Count)
					{
						value0 = CmpmRoles[i];
					}


					DateTime? value1 = null;
					if (CmpmRoleStartDates != null && i < CmpmRoleStartDates.Count)
					{
						value1 = CmpmRoleStartDates[i];
					}


					DateTime? value2 = null;
					if (CmpmRoleEndDates != null && i < CmpmRoleEndDates.Count)
					{
						value2 = CmpmRoleEndDates[i];
					}


					Decimal? value3 = null;
					if (CmpmLoad != null && i < CmpmLoad.Count)
					{
						value3 = CmpmLoad[i];
					}


					string value4 = "";
					if (CmpmRoleStatuses != null && i < CmpmRoleStatuses.Count)
					{
						value4 = CmpmRoleStatuses[i];
					}


					string value5 = "";
					if (CmpmPrimaryRoleFlags != null && i < CmpmPrimaryRoleFlags.Count)
					{
						value5 = CmpmPrimaryRoleFlags[i];
					}


					Decimal? value6 = null;
					if (CmpmRoleContactHours != null && i < CmpmRoleContactHours.Count)
					{
						value6 = CmpmRoleContactHours[i];
					}


					string value7 = "";
					if (CmpmRoleContactMeasures != null && i < CmpmRoleContactMeasures.Count)
					{
						value7 = CmpmRoleContactMeasures[i];
					}


					string value8 = "";
					if (CmpmRolePacLpAsgmts != null && i < CmpmRolePacLpAsgmts.Count)
					{
						value8 = CmpmRolePacLpAsgmts[i];
					}


					string value9 = "";
					if (CmpmRoleEntryIds != null && i < CmpmRoleEntryIds.Count)
					{
						value9 = CmpmRoleEntryIds[i];
					}

					CampusOrgRolesEntityAssociation.Add(new CampusOrgMembersCampusOrgRoles( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9));
				}
			}
			// EntityAssociation Name: CAMPUS.ORG.AFFILIATION
			
			CampusOrgAffiliationEntityAssociation = new List<CampusOrgMembersCampusOrgAffiliation>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(CmpmStartDates != null)
			{
				int numCampusOrgAffiliation = CmpmStartDates.Count;
				if (CmpmEndDates !=null && CmpmEndDates.Count > numCampusOrgAffiliation) numCampusOrgAffiliation = CmpmEndDates.Count;
				if (CmpmStatuses !=null && CmpmStatuses.Count > numCampusOrgAffiliation) numCampusOrgAffiliation = CmpmStatuses.Count;

				for (int i = 0; i < numCampusOrgAffiliation; i++)
				{

					DateTime? value0 = null;
					if (CmpmStartDates != null && i < CmpmStartDates.Count)
					{
						value0 = CmpmStartDates[i];
					}


					DateTime? value1 = null;
					if (CmpmEndDates != null && i < CmpmEndDates.Count)
					{
						value1 = CmpmEndDates[i];
					}


					string value2 = "";
					if (CmpmStatuses != null && i < CmpmStatuses.Count)
					{
						value2 = CmpmStatuses[i];
					}

					CampusOrgAffiliationEntityAssociation.Add(new CampusOrgMembersCampusOrgAffiliation( value0, value1, value2));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class CampusOrgMembersCampusOrgRoles
	{
		public string CmpmRolesAssocMember;	
		public DateTime? CmpmRoleStartDatesAssocMember;	
		public DateTime? CmpmRoleEndDatesAssocMember;	
		public Decimal? CmpmLoadAssocMember;	
		public string CmpmRoleStatusesAssocMember;	
		public string CmpmPrimaryRoleFlagsAssocMember;	
		public Decimal? CmpmRoleContactHoursAssocMember;	
		public string CmpmRoleContactMeasuresAssocMember;	
		public string CmpmRolePacLpAsgmtsAssocMember;	
		public string CmpmRoleEntryIdsAssocMember;	
		public CampusOrgMembersCampusOrgRoles() {}
		public CampusOrgMembersCampusOrgRoles(
			string inCmpmRoles,
			DateTime? inCmpmRoleStartDates,
			DateTime? inCmpmRoleEndDates,
			Decimal? inCmpmLoad,
			string inCmpmRoleStatuses,
			string inCmpmPrimaryRoleFlags,
			Decimal? inCmpmRoleContactHours,
			string inCmpmRoleContactMeasures,
			string inCmpmRolePacLpAsgmts,
			string inCmpmRoleEntryIds)
		{
			CmpmRolesAssocMember = inCmpmRoles;
			CmpmRoleStartDatesAssocMember = inCmpmRoleStartDates;
			CmpmRoleEndDatesAssocMember = inCmpmRoleEndDates;
			CmpmLoadAssocMember = inCmpmLoad;
			CmpmRoleStatusesAssocMember = inCmpmRoleStatuses;
			CmpmPrimaryRoleFlagsAssocMember = inCmpmPrimaryRoleFlags;
			CmpmRoleContactHoursAssocMember = inCmpmRoleContactHours;
			CmpmRoleContactMeasuresAssocMember = inCmpmRoleContactMeasures;
			CmpmRolePacLpAsgmtsAssocMember = inCmpmRolePacLpAsgmts;
			CmpmRoleEntryIdsAssocMember = inCmpmRoleEntryIds;
		}
	}
	
	[Serializable]
	public class CampusOrgMembersCampusOrgAffiliation
	{
		public DateTime? CmpmStartDatesAssocMember;	
		public DateTime? CmpmEndDatesAssocMember;	
		public string CmpmStatusesAssocMember;	
		public CampusOrgMembersCampusOrgAffiliation() {}
		public CampusOrgMembersCampusOrgAffiliation(
			DateTime? inCmpmStartDates,
			DateTime? inCmpmEndDates,
			string inCmpmStatuses)
		{
			CmpmStartDatesAssocMember = inCmpmStartDates;
			CmpmEndDatesAssocMember = inCmpmEndDates;
			CmpmStatusesAssocMember = inCmpmStatuses;
		}
	}
}
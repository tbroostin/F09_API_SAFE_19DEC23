//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/5/2017 8:17:52 AM by user gtt_dvcoll_wstst01
//
//     Type: ENTITY
//     Entity: CNST.T2202A.REPOS
//     Application: ST
//     Environment: dvcoll
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "CnstT2202aRepos")]
	[ColleagueDataContract(GeneratedDateTime = "10/5/2017 8:17:52 AM", User = "gtt_dvcoll_wstst01")]
	[EntityDataContract(EntityName = "CNST.T2202A.REPOS", EntityType = "PHYS")]
	public class CnstT2202aRepos : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: T2.REPOS.STUDENT
		/// </summary>
		[DataMember(Order = 4, Name = "T2.REPOS.STUDENT")]
		public string T2ReposStudent { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.YEAR
		/// </summary>
		[DataMember(Order = 5, Name = "T2.REPOS.YEAR")]
		public int? T2ReposYear { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.STUDENT.NAME
		/// </summary>
		[DataMember(Order = 7, Name = "T2.REPOS.STUDENT.NAME")]
		public string T2ReposStudentName { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.STU.PROGRAM.TITLE
		/// </summary>
		[DataMember(Order = 10, Name = "T2.REPOS.STU.PROGRAM.TITLE")]
		public string T2ReposStuProgramTitle { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.START.DATES
		/// </summary>
		[DataMember(Order = 13, Name = "T2.REPOS.ENROLL.START.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> T2ReposEnrollStartDates { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.END.DATES
		/// </summary>
		[DataMember(Order = 14, Name = "T2.REPOS.ENROLL.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> T2ReposEnrollEndDates { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.TUITION.AMTS
		/// </summary>
		[DataMember(Order = 15, Name = "T2.REPOS.ENROLL.TUITION.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> T2ReposEnrollTuitionAmts { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.FT.MTHS
		/// </summary>
		[DataMember(Order = 16, Name = "T2.REPOS.ENROLL.FT.MTHS")]
		public List<int?> T2ReposEnrollFtMths { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.PT.MTHS
		/// </summary>
		[DataMember(Order = 17, Name = "T2.REPOS.ENROLL.PT.MTHS")]
		public List<int?> T2ReposEnrollPtMths { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.LOCK.FLAGS
		/// </summary>
		[DataMember(Order = 18, Name = "T2.REPOS.ENROLL.LOCK.FLAGS")]
		public List<string> T2ReposEnrollLockFlags { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.CALC.ST.DTS
		/// </summary>
		[DataMember(Order = 19, Name = "T2.REPOS.ENROLL.CALC.ST.DTS")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> T2ReposEnrollCalcStDts { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.CALC.END.DTS
		/// </summary>
		[DataMember(Order = 20, Name = "T2.REPOS.ENROLL.CALC.END.DTS")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> T2ReposEnrollCalcEndDts { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.CALC.AMTS
		/// </summary>
		[DataMember(Order = 21, Name = "T2.REPOS.ENROLL.CALC.AMTS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> T2ReposEnrollCalcAmts { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.CALC.FT.MTHS
		/// </summary>
		[DataMember(Order = 22, Name = "T2.REPOS.ENROLL.CALC.FT.MTHS")]
		public List<int?> T2ReposEnrollCalcFtMths { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.ENROLL.CALC.PT.MTHS
		/// </summary>
		[DataMember(Order = 23, Name = "T2.REPOS.ENROLL.CALC.PT.MTHS")]
		public List<int?> T2ReposEnrollCalcPtMths { get; set; }
		
		/// <summary>
		/// CDD Name: T2.REPOS.STUDENT.ADDRESS
		/// </summary>
		[DataMember(Order = 24, Name = "T2.REPOS.STUDENT.ADDRESS")]
		public List<string> T2ReposStudentAddress { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<CnstT2202aReposT2ReposEnrollment> T2ReposEnrollmentEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: T2.REPOS.ENROLLMENT
			
			T2ReposEnrollmentEntityAssociation = new List<CnstT2202aReposT2ReposEnrollment>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(T2ReposEnrollStartDates != null)
			{
				int numT2ReposEnrollment = T2ReposEnrollStartDates.Count;
				if (T2ReposEnrollEndDates !=null && T2ReposEnrollEndDates.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollEndDates.Count;
				if (T2ReposEnrollTuitionAmts !=null && T2ReposEnrollTuitionAmts.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollTuitionAmts.Count;
				if (T2ReposEnrollFtMths !=null && T2ReposEnrollFtMths.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollFtMths.Count;
				if (T2ReposEnrollPtMths !=null && T2ReposEnrollPtMths.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollPtMths.Count;
				if (T2ReposEnrollLockFlags !=null && T2ReposEnrollLockFlags.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollLockFlags.Count;
				if (T2ReposEnrollCalcStDts !=null && T2ReposEnrollCalcStDts.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollCalcStDts.Count;
				if (T2ReposEnrollCalcEndDts !=null && T2ReposEnrollCalcEndDts.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollCalcEndDts.Count;
				if (T2ReposEnrollCalcAmts !=null && T2ReposEnrollCalcAmts.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollCalcAmts.Count;
				if (T2ReposEnrollCalcFtMths !=null && T2ReposEnrollCalcFtMths.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollCalcFtMths.Count;
				if (T2ReposEnrollCalcPtMths !=null && T2ReposEnrollCalcPtMths.Count > numT2ReposEnrollment) numT2ReposEnrollment = T2ReposEnrollCalcPtMths.Count;

				for (int i = 0; i < numT2ReposEnrollment; i++)
				{

					DateTime? value0 = null;
					if (T2ReposEnrollStartDates != null && i < T2ReposEnrollStartDates.Count)
					{
						value0 = T2ReposEnrollStartDates[i];
					}


					DateTime? value1 = null;
					if (T2ReposEnrollEndDates != null && i < T2ReposEnrollEndDates.Count)
					{
						value1 = T2ReposEnrollEndDates[i];
					}


					Decimal? value2 = null;
					if (T2ReposEnrollTuitionAmts != null && i < T2ReposEnrollTuitionAmts.Count)
					{
						value2 = T2ReposEnrollTuitionAmts[i];
					}


					int? value3 = null;
					if (T2ReposEnrollFtMths != null && i < T2ReposEnrollFtMths.Count)
					{
						value3 = T2ReposEnrollFtMths[i];
					}


					int? value4 = null;
					if (T2ReposEnrollPtMths != null && i < T2ReposEnrollPtMths.Count)
					{
						value4 = T2ReposEnrollPtMths[i];
					}


					string value5 = "";
					if (T2ReposEnrollLockFlags != null && i < T2ReposEnrollLockFlags.Count)
					{
						value5 = T2ReposEnrollLockFlags[i];
					}


					DateTime? value6 = null;
					if (T2ReposEnrollCalcStDts != null && i < T2ReposEnrollCalcStDts.Count)
					{
						value6 = T2ReposEnrollCalcStDts[i];
					}


					DateTime? value7 = null;
					if (T2ReposEnrollCalcEndDts != null && i < T2ReposEnrollCalcEndDts.Count)
					{
						value7 = T2ReposEnrollCalcEndDts[i];
					}


					Decimal? value8 = null;
					if (T2ReposEnrollCalcAmts != null && i < T2ReposEnrollCalcAmts.Count)
					{
						value8 = T2ReposEnrollCalcAmts[i];
					}


					int? value9 = null;
					if (T2ReposEnrollCalcFtMths != null && i < T2ReposEnrollCalcFtMths.Count)
					{
						value9 = T2ReposEnrollCalcFtMths[i];
					}


					int? value10 = null;
					if (T2ReposEnrollCalcPtMths != null && i < T2ReposEnrollCalcPtMths.Count)
					{
						value10 = T2ReposEnrollCalcPtMths[i];
					}

					T2ReposEnrollmentEntityAssociation.Add(new CnstT2202aReposT2ReposEnrollment( value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class CnstT2202aReposT2ReposEnrollment
	{
		public DateTime? T2ReposEnrollStartDatesAssocMember;	
		public DateTime? T2ReposEnrollEndDatesAssocMember;	
		public Decimal? T2ReposEnrollTuitionAmtsAssocMember;	
		public int? T2ReposEnrollFtMthsAssocMember;	
		public int? T2ReposEnrollPtMthsAssocMember;	
		public string T2ReposEnrollLockFlagsAssocMember;	
		public DateTime? T2ReposEnrollCalcStDtsAssocMember;	
		public DateTime? T2ReposEnrollCalcEndDtsAssocMember;	
		public Decimal? T2ReposEnrollCalcAmtsAssocMember;	
		public int? T2ReposEnrollCalcFtMthsAssocMember;	
		public int? T2ReposEnrollCalcPtMthsAssocMember;	
		public CnstT2202aReposT2ReposEnrollment() {}
		public CnstT2202aReposT2ReposEnrollment(
			DateTime? inT2ReposEnrollStartDates,
			DateTime? inT2ReposEnrollEndDates,
			Decimal? inT2ReposEnrollTuitionAmts,
			int? inT2ReposEnrollFtMths,
			int? inT2ReposEnrollPtMths,
			string inT2ReposEnrollLockFlags,
			DateTime? inT2ReposEnrollCalcStDts,
			DateTime? inT2ReposEnrollCalcEndDts,
			Decimal? inT2ReposEnrollCalcAmts,
			int? inT2ReposEnrollCalcFtMths,
			int? inT2ReposEnrollCalcPtMths)
		{
			T2ReposEnrollStartDatesAssocMember = inT2ReposEnrollStartDates;
			T2ReposEnrollEndDatesAssocMember = inT2ReposEnrollEndDates;
			T2ReposEnrollTuitionAmtsAssocMember = inT2ReposEnrollTuitionAmts;
			T2ReposEnrollFtMthsAssocMember = inT2ReposEnrollFtMths;
			T2ReposEnrollPtMthsAssocMember = inT2ReposEnrollPtMths;
			T2ReposEnrollLockFlagsAssocMember = inT2ReposEnrollLockFlags;
			T2ReposEnrollCalcStDtsAssocMember = inT2ReposEnrollCalcStDts;
			T2ReposEnrollCalcEndDtsAssocMember = inT2ReposEnrollCalcEndDts;
			T2ReposEnrollCalcAmtsAssocMember = inT2ReposEnrollCalcAmts;
			T2ReposEnrollCalcFtMthsAssocMember = inT2ReposEnrollCalcFtMths;
			T2ReposEnrollCalcPtMthsAssocMember = inT2ReposEnrollCalcPtMths;
		}
	}
}
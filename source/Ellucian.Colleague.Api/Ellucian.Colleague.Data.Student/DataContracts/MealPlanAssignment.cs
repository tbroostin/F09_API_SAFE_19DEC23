//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 3:12:56 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: MEAL.PLAN.ASSIGNMENT
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "MealPlanAssignment")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 3:12:56 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "MEAL.PLAN.ASSIGNMENT", EntityType = "PHYS")]
	public class MealPlanAssignment : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: MPAS.PERSON.ID
		/// </summary>
		[DataMember(Order = 0, Name = "MPAS.PERSON.ID")]
		public string MpasPersonId { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.MEAL.PLAN
		/// </summary>
		[DataMember(Order = 1, Name = "MPAS.MEAL.PLAN")]
		public string MpasMealPlan { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.START.DATE
		/// </summary>
		[DataMember(Order = 2, Name = "MPAS.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? MpasStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.END.DATE
		/// </summary>
		[DataMember(Order = 3, Name = "MPAS.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? MpasEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.MEAL.CARD
		/// </summary>
		[DataMember(Order = 4, Name = "MPAS.MEAL.CARD")]
		public string MpasMealCard { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.TERM
		/// </summary>
		[DataMember(Order = 5, Name = "MPAS.TERM")]
		public string MpasTerm { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.NO.RATE.PERIODS
		/// </summary>
		[DataMember(Order = 6, Name = "MPAS.NO.RATE.PERIODS")]
		public int? MpasNoRatePeriods { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.OVERRIDE.RATE
		/// </summary>
		[DataMember(Order = 7, Name = "MPAS.OVERRIDE.RATE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? MpasOverrideRate { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.RATE.OVERRIDE.REASON
		/// </summary>
		[DataMember(Order = 8, Name = "MPAS.RATE.OVERRIDE.REASON")]
		public string MpasRateOverrideReason { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.OVERRIDE.AR.CODE
		/// </summary>
		[DataMember(Order = 9, Name = "MPAS.OVERRIDE.AR.CODE")]
		public string MpasOverrideArCode { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.COMMENTS
		/// </summary>
		[DataMember(Order = 15, Name = "MPAS.COMMENTS")]
		public string MpasComments { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.STATUS
		/// </summary>
		[DataMember(Order = 20, Name = "MPAS.STATUS")]
		public List<string> MpasStatus { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.STATUS.DATE
		/// </summary>
		[DataMember(Order = 21, Name = "MPAS.STATUS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> MpasStatusDate { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.USED.RATE.PERIODS
		/// </summary>
		[DataMember(Order = 22, Name = "MPAS.USED.RATE.PERIODS")]
		public int? MpasUsedRatePeriods { get; set; }
		
		/// <summary>
		/// CDD Name: MPAS.USED.PCT
		/// </summary>
		[DataMember(Order = 23, Name = "MPAS.USED.PCT")]
		public int? MpasUsedPct { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<MealPlanAssignmentMpasStatuses> MpasStatusesEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: MPAS.STATUSES
			
			MpasStatusesEntityAssociation = new List<MealPlanAssignmentMpasStatuses>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(MpasStatus != null)
			{
				int numMpasStatuses = MpasStatus.Count;
				if (MpasStatusDate !=null && MpasStatusDate.Count > numMpasStatuses) numMpasStatuses = MpasStatusDate.Count;

				for (int i = 0; i < numMpasStatuses; i++)
				{

					string value0 = "";
					if (MpasStatus != null && i < MpasStatus.Count)
					{
						value0 = MpasStatus[i];
					}


					DateTime? value1 = null;
					if (MpasStatusDate != null && i < MpasStatusDate.Count)
					{
						value1 = MpasStatusDate[i];
					}

					MpasStatusesEntityAssociation.Add(new MealPlanAssignmentMpasStatuses( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class MealPlanAssignmentMpasStatuses
	{
		public string MpasStatusAssocMember;	
		public DateTime? MpasStatusDateAssocMember;	
		public MealPlanAssignmentMpasStatuses() {}
		public MealPlanAssignmentMpasStatuses(
			string inMpasStatus,
			DateTime? inMpasStatusDate)
		{
			MpasStatusAssocMember = inMpasStatus;
			MpasStatusDateAssocMember = inMpasStatusDate;
		}
	}
}
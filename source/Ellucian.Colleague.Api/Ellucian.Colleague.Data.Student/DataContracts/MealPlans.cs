//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 3:13:12 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: MEAL.PLANS
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "MealPlans")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 3:13:12 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "MEAL.PLANS", EntityType = "PHYS")]
	public class MealPlans : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: MEAL.DESC
		/// </summary>
		[DataMember(Order = 0, Name = "MEAL.DESC")]
		public string MealDesc { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.CLASS
		/// </summary>
		[DataMember(Order = 1, Name = "MEAL.CLASS")]
		public string MealClass { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.NO.TIMES
		/// </summary>
		[DataMember(Order = 2, Name = "MEAL.NO.TIMES")]
		public int? MealNoTimes { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.FREQUENCY
		/// </summary>
		[DataMember(Order = 3, Name = "MEAL.FREQUENCY")]
		public string MealFrequency { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.TYPES
		/// </summary>
		[DataMember(Order = 4, Name = "MEAL.TYPES")]
		public List<string> MealTypes { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.START.DAY
		/// </summary>
		[DataMember(Order = 5, Name = "MEAL.START.DAY")]
		public string MealStartDay { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.END.DAY
		/// </summary>
		[DataMember(Order = 6, Name = "MEAL.END.DAY")]
		public string MealEndDay { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.LOCATIONS
		/// </summary>
		[DataMember(Order = 7, Name = "MEAL.LOCATIONS")]
		public List<string> MealLocations { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.BLDGS
		/// </summary>
		[DataMember(Order = 8, Name = "MEAL.BLDGS")]
		public List<string> MealBldgs { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.ROOMS
		/// </summary>
		[DataMember(Order = 9, Name = "MEAL.ROOMS")]
		public List<string> MealRooms { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.RATE.PERIOD
		/// </summary>
		[DataMember(Order = 11, Name = "MEAL.RATE.PERIOD")]
		public string MealRatePeriod { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.AR.CODE
		/// </summary>
		[DataMember(Order = 12, Name = "MEAL.AR.CODE")]
		public string MealArCode { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.RATES
		/// </summary>
		[DataMember(Order = 13, Name = "MEAL.RATES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> MealRates { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.RATE.EFFECTIVE.DATES
		/// </summary>
		[DataMember(Order = 14, Name = "MEAL.RATE.EFFECTIVE.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> MealRateEffectiveDates { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.START.DATE
		/// </summary>
		[DataMember(Order = 19, Name = "MEAL.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? MealStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: MEAL.END.DATE
		/// </summary>
		[DataMember(Order = 20, Name = "MEAL.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? MealEndDate { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<MealPlansMealBldgsRooms> MealBldgsRoomsEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<MealPlansMealPlanRates> MealPlanRatesEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: MEAL.BLDGS.ROOMS
			
			MealBldgsRoomsEntityAssociation = new List<MealPlansMealBldgsRooms>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(MealBldgs != null)
			{
				int numMealBldgsRooms = MealBldgs.Count;
				if (MealRooms !=null && MealRooms.Count > numMealBldgsRooms) numMealBldgsRooms = MealRooms.Count;

				for (int i = 0; i < numMealBldgsRooms; i++)
				{

					string value0 = "";
					if (MealBldgs != null && i < MealBldgs.Count)
					{
						value0 = MealBldgs[i];
					}


					string value1 = "";
					if (MealRooms != null && i < MealRooms.Count)
					{
						value1 = MealRooms[i];
					}

					MealBldgsRoomsEntityAssociation.Add(new MealPlansMealBldgsRooms( value0, value1));
				}
			}
			// EntityAssociation Name: MEAL.PLAN.RATES
			
			MealPlanRatesEntityAssociation = new List<MealPlansMealPlanRates>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(MealRateEffectiveDates != null)
			{
				int numMealPlanRates = MealRateEffectiveDates.Count;
				if (MealRates !=null && MealRates.Count > numMealPlanRates) numMealPlanRates = MealRates.Count;

				for (int i = 0; i < numMealPlanRates; i++)
				{

					Decimal? value0 = null;
					if (MealRates != null && i < MealRates.Count)
					{
						value0 = MealRates[i];
					}


					DateTime? value1 = null;
					if (MealRateEffectiveDates != null && i < MealRateEffectiveDates.Count)
					{
						value1 = MealRateEffectiveDates[i];
					}

					MealPlanRatesEntityAssociation.Add(new MealPlansMealPlanRates( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class MealPlansMealBldgsRooms
	{
		public string MealBldgsAssocMember;	
		public string MealRoomsAssocMember;	
		public MealPlansMealBldgsRooms() {}
		public MealPlansMealBldgsRooms(
			string inMealBldgs,
			string inMealRooms)
		{
			MealBldgsAssocMember = inMealBldgs;
			MealRoomsAssocMember = inMealRooms;
		}
	}
	
	[Serializable]
	public class MealPlansMealPlanRates
	{
		public Decimal? MealRatesAssocMember;	
		public DateTime? MealRateEffectiveDatesAssocMember;	
		public MealPlansMealPlanRates() {}
		public MealPlansMealPlanRates(
			Decimal? inMealRates,
			DateTime? inMealRateEffectiveDates)
		{
			MealRatesAssocMember = inMealRates;
			MealRateEffectiveDatesAssocMember = inMealRateEffectiveDates;
		}
	}
}
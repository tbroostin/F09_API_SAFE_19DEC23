//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 3:14:50 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: REG.USERS
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "RegUsers")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 3:14:50 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "REG.USERS", EntityType = "PHYS")]
	public class RegUsers : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: RGU.REG.CONTROLS
		/// </summary>
		[DataMember(Order = 1, Name = "RGU.REG.CONTROLS")]
		public List<string> RguRegControls { get; set; }
		
		/// <summary>
		/// CDD Name: RGU.STAFF.IDS
		/// </summary>
		[DataMember(Order = 50, Name = "RGU.STAFF.IDS")]
		public List<string> RguStaffIds { get; set; }
		
		/// <summary>
		/// CDD Name: RGU.STAFF.REG.START.DATES
		/// </summary>
		[DataMember(Order = 51, Name = "RGU.STAFF.REG.START.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> RguStaffRegStartDates { get; set; }
		
		/// <summary>
		/// CDD Name: RGU.STAFF.REG.END.DATES
		/// </summary>
		[DataMember(Order = 52, Name = "RGU.STAFF.REG.END.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> RguStaffRegEndDates { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<RegUsersRguRegStaff> RguRegStaffEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: RGU.REG.STAFF
			
			RguRegStaffEntityAssociation = new List<RegUsersRguRegStaff>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(RguStaffIds != null)
			{
				int numRguRegStaff = RguStaffIds.Count;
				if (RguStaffRegStartDates !=null && RguStaffRegStartDates.Count > numRguRegStaff) numRguRegStaff = RguStaffRegStartDates.Count;
				if (RguStaffRegEndDates !=null && RguStaffRegEndDates.Count > numRguRegStaff) numRguRegStaff = RguStaffRegEndDates.Count;

				for (int i = 0; i < numRguRegStaff; i++)
				{

					string value0 = "";
					if (RguStaffIds != null && i < RguStaffIds.Count)
					{
						value0 = RguStaffIds[i];
					}


					DateTime? value1 = null;
					if (RguStaffRegStartDates != null && i < RguStaffRegStartDates.Count)
					{
						value1 = RguStaffRegStartDates[i];
					}


					DateTime? value2 = null;
					if (RguStaffRegEndDates != null && i < RguStaffRegEndDates.Count)
					{
						value2 = RguStaffRegEndDates[i];
					}

					RguRegStaffEntityAssociation.Add(new RegUsersRguRegStaff( value0, value1, value2));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class RegUsersRguRegStaff
	{
		public string RguStaffIdsAssocMember;	
		public DateTime? RguStaffRegStartDatesAssocMember;	
		public DateTime? RguStaffRegEndDatesAssocMember;	
		public RegUsersRguRegStaff() {}
		public RegUsersRguRegStaff(
			string inRguStaffIds,
			DateTime? inRguStaffRegStartDates,
			DateTime? inRguStaffRegEndDates)
		{
			RguStaffIdsAssocMember = inRguStaffIds;
			RguStaffRegStartDatesAssocMember = inRguStaffRegStartDates;
			RguStaffRegEndDatesAssocMember = inRguStaffRegEndDates;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 3:16:14 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: ROOM.RATE.TABLES
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "RoomRateTables")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 3:16:14 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "ROOM.RATE.TABLES", EntityType = "PHYS")]
	public class RoomRateTables : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: RRT.DESC
		/// </summary>
		[DataMember(Order = 0, Name = "RRT.DESC")]
		public string RrtDesc { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.AR.CODE
		/// </summary>
		[DataMember(Order = 1, Name = "RRT.AR.CODE")]
		public string RrtArCode { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.END.DATE
		/// </summary>
		[DataMember(Order = 2, Name = "RRT.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? RrtEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.EFFECTIVE.DATES
		/// </summary>
		[DataMember(Order = 3, Name = "RRT.EFFECTIVE.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> RrtEffectiveDates { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.DAY.RATES
		/// </summary>
		[DataMember(Order = 4, Name = "RRT.DAY.RATES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> RrtDayRates { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.WEEK.RATES
		/// </summary>
		[DataMember(Order = 5, Name = "RRT.WEEK.RATES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> RrtWeekRates { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.MONTH.RATES
		/// </summary>
		[DataMember(Order = 6, Name = "RRT.MONTH.RATES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> RrtMonthRates { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.TERM.RATES
		/// </summary>
		[DataMember(Order = 7, Name = "RRT.TERM.RATES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> RrtTermRates { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.YEAR.RATES
		/// </summary>
		[DataMember(Order = 8, Name = "RRT.YEAR.RATES")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> RrtYearRates { get; set; }
		
		/// <summary>
		/// CDD Name: RRT.CANCEL.AR.CODE
		/// </summary>
		[DataMember(Order = 14, Name = "RRT.CANCEL.AR.CODE")]
		public string RrtCancelArCode { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<RoomRateTablesRoomDateRates> RoomDateRatesEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: ROOM.DATE.RATES
			
			RoomDateRatesEntityAssociation = new List<RoomRateTablesRoomDateRates>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(RrtEffectiveDates != null)
			{
				int numRoomDateRates = RrtEffectiveDates.Count;
				if (RrtDayRates !=null && RrtDayRates.Count > numRoomDateRates) numRoomDateRates = RrtDayRates.Count;
				if (RrtWeekRates !=null && RrtWeekRates.Count > numRoomDateRates) numRoomDateRates = RrtWeekRates.Count;
				if (RrtMonthRates !=null && RrtMonthRates.Count > numRoomDateRates) numRoomDateRates = RrtMonthRates.Count;
				if (RrtTermRates !=null && RrtTermRates.Count > numRoomDateRates) numRoomDateRates = RrtTermRates.Count;
				if (RrtYearRates !=null && RrtYearRates.Count > numRoomDateRates) numRoomDateRates = RrtYearRates.Count;

				for (int i = 0; i < numRoomDateRates; i++)
				{

					DateTime? value0 = null;
					if (RrtEffectiveDates != null && i < RrtEffectiveDates.Count)
					{
						value0 = RrtEffectiveDates[i];
					}


					Decimal? value1 = null;
					if (RrtDayRates != null && i < RrtDayRates.Count)
					{
						value1 = RrtDayRates[i];
					}


					Decimal? value2 = null;
					if (RrtWeekRates != null && i < RrtWeekRates.Count)
					{
						value2 = RrtWeekRates[i];
					}


					Decimal? value3 = null;
					if (RrtMonthRates != null && i < RrtMonthRates.Count)
					{
						value3 = RrtMonthRates[i];
					}


					Decimal? value4 = null;
					if (RrtTermRates != null && i < RrtTermRates.Count)
					{
						value4 = RrtTermRates[i];
					}


					Decimal? value5 = null;
					if (RrtYearRates != null && i < RrtYearRates.Count)
					{
						value5 = RrtYearRates[i];
					}

					RoomDateRatesEntityAssociation.Add(new RoomRateTablesRoomDateRates( value0, value1, value2, value3, value4, value5));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class RoomRateTablesRoomDateRates
	{
		public DateTime? RrtEffectiveDatesAssocMember;	
		public Decimal? RrtDayRatesAssocMember;	
		public Decimal? RrtWeekRatesAssocMember;	
		public Decimal? RrtMonthRatesAssocMember;	
		public Decimal? RrtTermRatesAssocMember;	
		public Decimal? RrtYearRatesAssocMember;	
		public RoomRateTablesRoomDateRates() {}
		public RoomRateTablesRoomDateRates(
			DateTime? inRrtEffectiveDates,
			Decimal? inRrtDayRates,
			Decimal? inRrtWeekRates,
			Decimal? inRrtMonthRates,
			Decimal? inRrtTermRates,
			Decimal? inRrtYearRates)
		{
			RrtEffectiveDatesAssocMember = inRrtEffectiveDates;
			RrtDayRatesAssocMember = inRrtDayRates;
			RrtWeekRatesAssocMember = inRrtWeekRates;
			RrtMonthRatesAssocMember = inRrtMonthRates;
			RrtTermRatesAssocMember = inRrtTermRates;
			RrtYearRatesAssocMember = inRrtYearRates;
		}
	}
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.1
//     Last generated on 5/4/2017 3:59:13 PM by user sbhole1
//
//     Type: ENTITY
//     Entity: ROOM.REQUESTS.INTG
//     Application: ST
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.1")]
	[DataContract(Name = "RoomRequestsIntg")]
	[ColleagueDataContract(GeneratedDateTime = "5/4/2017 3:59:13 PM", User = "sbhole1")]
	[EntityDataContract(EntityName = "ROOM.REQUESTS.INTG", EntityType = "PHYS")]
	public class RoomRequestsIntg : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: RMRI.PERSON.ID
		/// </summary>
		[DataMember(Order = 0, Name = "RMRI.PERSON.ID")]
		public string RmriPersonId { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.TERM
		/// </summary>
		[DataMember(Order = 1, Name = "RMRI.TERM")]
		public string RmriTerm { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.START.DATE
		/// </summary>
		[DataMember(Order = 2, Name = "RMRI.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? RmriStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.END.DATE
		/// </summary>
		[DataMember(Order = 3, Name = "RMRI.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? RmriEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.LOTTERY.NO
		/// </summary>
		[DataMember(Order = 5, Name = "RMRI.LOTTERY.NO")]
		public string RmriLotteryNo { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.ROOM.PREFERENCES
		/// </summary>
		[DataMember(Order = 6, Name = "RMRI.ROOM.PREFERENCES")]
		public string RmriRoomPreferences { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.ROOM.ASSIGNMENT
		/// </summary>
		[DataMember(Order = 7, Name = "RMRI.ROOM.ASSIGNMENT")]
		public string RmriRoomAssignment { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.STATUS
		/// </summary>
		[DataMember(Order = 8, Name = "RMRI.STATUS")]
		public List<string> RmriStatus { get; set; }
		
		/// <summary>
		/// CDD Name: RMRI.STATUS.DATE
		/// </summary>
		[DataMember(Order = 9, Name = "RMRI.STATUS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> RmriStatusDate { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<RoomRequestsIntgRoomReqIntgStatuses> RoomReqIntgStatusesEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: ROOM.REQ.INTG.STATUSES
			
			RoomReqIntgStatusesEntityAssociation = new List< RoomRequestsIntgRoomReqIntgStatuses >();
			if( RmriStatus != null)
			{
				int numRoomReqIntgStatuses = RmriStatus.Count;
				for (int i = 0; i < numRoomReqIntgStatuses; i++)
				{
					string value0 = "";
					value0 = RmriStatus[i];

					DateTime? value1 = null;
					if (RmriStatusDate != null && i < RmriStatusDate.Count)
					{
						value1 = RmriStatusDate[i];
					}

					RoomReqIntgStatusesEntityAssociation.Add(new RoomRequestsIntgRoomReqIntgStatuses( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class RoomRequestsIntgRoomReqIntgStatuses
	{
		public string RmriStatusAssocMember;	
		public DateTime? RmriStatusDateAssocMember;	
		public RoomRequestsIntgRoomReqIntgStatuses() {}
		public RoomRequestsIntgRoomReqIntgStatuses(
			string inRmriStatus,
			DateTime? inRmriStatusDate)
		{
			RmriStatusAssocMember = inRmriStatus;
			RmriStatusDateAssocMember = inRmriStatusDate;
		}
	}
}
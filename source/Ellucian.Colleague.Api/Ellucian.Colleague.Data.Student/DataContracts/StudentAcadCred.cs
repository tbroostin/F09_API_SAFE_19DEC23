//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/17/2018 7:56:53 AM by user sbhole1
//
//     Type: ENTITY
//     Entity: STUDENT.ACAD.CRED
//     Application: ST
//     Environment: dvcoll_wstst01
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "StudentAcadCred")]
	[ColleagueDataContract(GeneratedDateTime = "10/17/2018 7:56:53 AM", User = "sbhole1")]
	[EntityDataContract(EntityName = "STUDENT.ACAD.CRED", EntityType = "PHYS")]
	public class StudentAcadCred : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: STC.PERSON.ID
		/// </summary>
		[DataMember(Order = 0, Name = "STC.PERSON.ID")]
		public string StcPersonId { get; set; }
		
		/// <summary>
		/// CDD Name: STC.TITLE
		/// </summary>
		[DataMember(Order = 1, Name = "STC.TITLE")]
		public string StcTitle { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ACAD.LEVEL
		/// </summary>
		[DataMember(Order = 2, Name = "STC.ACAD.LEVEL")]
		public string StcAcadLevel { get; set; }
		
		/// <summary>
		/// CDD Name: STC.COURSE.LEVEL
		/// </summary>
		[DataMember(Order = 3, Name = "STC.COURSE.LEVEL")]
		public string StcCourseLevel { get; set; }
		
		/// <summary>
		/// CDD Name: STC.DEPTS
		/// </summary>
		[DataMember(Order = 4, Name = "STC.DEPTS")]
		public List<string> StcDepts { get; set; }
		
		/// <summary>
		/// CDD Name: STC.SUBJECT
		/// </summary>
		[DataMember(Order = 5, Name = "STC.SUBJECT")]
		public string StcSubject { get; set; }
		
		/// <summary>
		/// CDD Name: STC.COURSE
		/// </summary>
		[DataMember(Order = 6, Name = "STC.COURSE")]
		public string StcCourse { get; set; }
		
		/// <summary>
		/// CDD Name: STC.STATUS.TIME
		/// </summary>
		[DataMember(Order = 7, Name = "STC.STATUS.TIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> StcStatusTime { get; set; }
		
		/// <summary>
		/// CDD Name: STC.STATUS
		/// </summary>
		[DataMember(Order = 8, Name = "STC.STATUS")]
		public List<string> StcStatus { get; set; }
		
		/// <summary>
		/// CDD Name: STC.STATUS.DATE
		/// </summary>
		[DataMember(Order = 9, Name = "STC.STATUS.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> StcStatusDate { get; set; }
		
		/// <summary>
		/// CDD Name: STC.STATUS.REASON
		/// </summary>
		[DataMember(Order = 10, Name = "STC.STATUS.REASON")]
		public List<string> StcStatusReason { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CRED
		/// </summary>
		[DataMember(Order = 11, Name = "STC.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CMPL.CRED
		/// </summary>
		[DataMember(Order = 12, Name = "STC.CMPL.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCmplCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.GPA.CRED
		/// </summary>
		[DataMember(Order = 13, Name = "STC.GPA.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcGpaCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CRED.TYPE
		/// </summary>
		[DataMember(Order = 14, Name = "STC.CRED.TYPE")]
		public string StcCredType { get; set; }
		
		/// <summary>
		/// CDD Name: STC.GRADE.SCHEME
		/// </summary>
		[DataMember(Order = 15, Name = "STC.GRADE.SCHEME")]
		public string StcGradeScheme { get; set; }
		
		/// <summary>
		/// CDD Name: STC.FINAL.GRADE
		/// </summary>
		[DataMember(Order = 16, Name = "STC.FINAL.GRADE")]
		public string StcFinalGrade { get; set; }
		
		/// <summary>
		/// CDD Name: STC.VERIFIED.GRADE
		/// </summary>
		[DataMember(Order = 17, Name = "STC.VERIFIED.GRADE")]
		public string StcVerifiedGrade { get; set; }
		
		/// <summary>
		/// CDD Name: STC.VERIFIED.GRADE.DATE
		/// </summary>
		[DataMember(Order = 18, Name = "STC.VERIFIED.GRADE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? StcVerifiedGradeDate { get; set; }
		
		/// <summary>
		/// CDD Name: STC.VERIFIED.GRADE.CHGOPR
		/// </summary>
		[DataMember(Order = 19, Name = "STC.VERIFIED.GRADE.CHGOPR")]
		public string StcVerifiedGradeChgopr { get; set; }
		
		/// <summary>
		/// CDD Name: STC.DIVISIONS
		/// </summary>
		[DataMember(Order = 20, Name = "STC.DIVISIONS")]
		public List<string> StcDivisions { get; set; }
		
		/// <summary>
		/// CDD Name: STC.SCHOOLS
		/// </summary>
		[DataMember(Order = 21, Name = "STC.SCHOOLS")]
		public List<string> StcSchools { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CEUS
		/// </summary>
		[DataMember(Order = 22, Name = "STC.CEUS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCeus { get; set; }
		
		/// <summary>
		/// CDD Name: STC.COURSE.NAME
		/// </summary>
		[DataMember(Order = 23, Name = "STC.COURSE.NAME")]
		public string StcCourseName { get; set; }
		
		/// <summary>
		/// CDD Name: STC.TERM
		/// </summary>
		[DataMember(Order = 24, Name = "STC.TERM")]
		public string StcTerm { get; set; }
		
		/// <summary>
		/// CDD Name: STC.STUDENT.COURSE.SEC
		/// </summary>
		[DataMember(Order = 25, Name = "STC.STUDENT.COURSE.SEC")]
		public string StcStudentCourseSec { get; set; }
		
		/// <summary>
		/// CDD Name: STC.STUDENT.EQUIV.EVAL
		/// </summary>
		[DataMember(Order = 26, Name = "STC.STUDENT.EQUIV.EVAL")]
		public string StcStudentEquivEval { get; set; }
		
		/// <summary>
		/// CDD Name: STC.GRADE.EXPIRE.DATE
		/// </summary>
		[DataMember(Order = 27, Name = "STC.GRADE.EXPIRE.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? StcGradeExpireDate { get; set; }
		
		/// <summary>
		/// CDD Name: STC.START.DATE
		/// </summary>
		[DataMember(Order = 28, Name = "STC.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? StcStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: STC.END.DATE
		/// </summary>
		[DataMember(Order = 29, Name = "STC.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? StcEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ATT.CEUS
		/// </summary>
		[DataMember(Order = 36, Name = "STC.ATT.CEUS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcAttCeus { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CMPL.CEUS
		/// </summary>
		[DataMember(Order = 37, Name = "STC.CMPL.CEUS")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCmplCeus { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ATT.CRED
		/// </summary>
		[DataMember(Order = 38, Name = "STC.ATT.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcAttCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CUM.CONTRIB.ATT.CRED
		/// </summary>
		[DataMember(Order = 40, Name = "STC.CUM.CONTRIB.ATT.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCumContribAttCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CUM.CONTRIB.CMPL.CRED
		/// </summary>
		[DataMember(Order = 41, Name = "STC.CUM.CONTRIB.CMPL.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCumContribCmplCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CUM.CONTRIB.GPA.CRED
		/// </summary>
		[DataMember(Order = 42, Name = "STC.CUM.CONTRIB.GPA.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCumContribGpaCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ALTCUM.CONTRIB.ATT.CRED
		/// </summary>
		[DataMember(Order = 43, Name = "STC.ALTCUM.CONTRIB.ATT.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcAltcumContribAttCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ALTCUM.CONTRIB.CMPL.CRED
		/// </summary>
		[DataMember(Order = 44, Name = "STC.ALTCUM.CONTRIB.CMPL.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcAltcumContribCmplCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ALTCUM.CONTRIB.GPA.CRED
		/// </summary>
		[DataMember(Order = 45, Name = "STC.ALTCUM.CONTRIB.GPA.CRED")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcAltcumContribGpaCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.GRADE.PTS
		/// </summary>
		[DataMember(Order = 46, Name = "STC.GRADE.PTS")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcGradePts { get; set; }
		
		/// <summary>
		/// CDD Name: STC.CUM.CONTRIB.GRADE.PTS
		/// </summary>
		[DataMember(Order = 47, Name = "STC.CUM.CONTRIB.GRADE.PTS")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcCumContribGradePts { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ALTCUM.CONTRIB.GRADE.PTS
		/// </summary>
		[DataMember(Order = 48, Name = "STC.ALTCUM.CONTRIB.GRADE.PTS")]
		[DisplayFormat(DataFormatString = "{0:N5}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public Decimal? StcAltcumContribGradePts { get; set; }
		
		/// <summary>
		/// CDD Name: STC.REPL.CODE
		/// </summary>
		[DataMember(Order = 49, Name = "STC.REPL.CODE")]
		public string StcReplCode { get; set; }
		
		/// <summary>
		/// CDD Name: STUDENT.ACAD.CRED.CHGOPR
		/// </summary>
		[DataMember(Order = 52, Name = "STUDENT.ACAD.CRED.CHGOPR")]
		public string StudentAcadCredChgopr { get; set; }
		
		/// <summary>
		/// CDD Name: STUDENT.ACAD.CRED.CHGDATE
		/// </summary>
		[DataMember(Order = 53, Name = "STUDENT.ACAD.CRED.CHGDATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? StudentAcadCredChgdate { get; set; }
		
		/// <summary>
		/// CDD Name: STC.REPEATED.ACAD.CRED
		/// </summary>
		[DataMember(Order = 54, Name = "STC.REPEATED.ACAD.CRED")]
		public List<string> StcRepeatedAcadCred { get; set; }
		
		/// <summary>
		/// CDD Name: STC.ALLOW.REPL.FLAG
		/// </summary>
		[DataMember(Order = 55, Name = "STC.ALLOW.REPL.FLAG")]
		public string StcAllowReplFlag { get; set; }
		
		/// <summary>
		/// CDD Name: STC.SECTION.NO
		/// </summary>
		[DataMember(Order = 56, Name = "STC.SECTION.NO")]
		public string StcSectionNo { get; set; }
		
		/// <summary>
		/// CDD Name: STC.GPA1.ACAD.PROGRAMS
		/// </summary>
		[DataMember(Order = 57, Name = "STC.GPA1.ACAD.PROGRAMS")]
		public List<string> StcGpa1AcadPrograms { get; set; }
		
		/// <summary>
		/// CDD Name: STC.GPA1.MAJORS
		/// </summary>
		[DataMember(Order = 58, Name = "STC.GPA1.MAJORS")]
		public List<string> StcGpa1Majors { get; set; }
		
		/// <summary>
		/// CDD Name: STC.MARK
		/// </summary>
		[DataMember(Order = 61, Name = "STC.MARK")]
		public string StcMark { get; set; }
		
		/// <summary>
		/// CDD Name: STC.MARK.ACAD.CREDENTIALS
		/// </summary>
		[DataMember(Order = 63, Name = "STC.MARK.ACAD.CREDENTIALS")]
		public List<string> StcMarkAcadCredentials { get; set; }
		
		/// <summary>
		/// CDD Name: STC.REPORTING.TERM
		/// </summary>
		[DataMember(Order = 75, Name = "STC.REPORTING.TERM")]
		public string StcReportingTerm { get; set; }
		
		/// <summary>
		/// CDD Name: STC.INTG.GRADE.TYPE
		/// </summary>
		[DataMember(Order = 82, Name = "STC.INTG.GRADE.TYPE")]
		public List<string> StcIntgGradeType { get; set; }
		
		/// <summary>
		/// CDD Name: STC.INTG.GRADE.SUBMIT.REASON
		/// </summary>
		[DataMember(Order = 83, Name = "STC.INTG.GRADE.SUBMIT.REASON")]
		public List<string> StcIntgGradeSubmitReason { get; set; }
		
		/// <summary>
		/// CDD Name: STC.INTG.KEY.IDX
		/// </summary>
		[DataMember(Order = 84, Name = "STC.INTG.KEY.IDX")]
		public string StcIntgKeyIdx { get; set; }
		
		/// <summary>
		/// CDD Name: STC.INTG.HIST.LOG.IDX
		/// </summary>
		[DataMember(Order = 85, Name = "STC.INTG.HIST.LOG.IDX")]
		public List<string> StcIntgHistLogIdx { get; set; }
		
		/// <summary>
		/// CDD Name: STC.INTG.HIST.LOG.REASON
		/// </summary>
		[DataMember(Order = 86, Name = "STC.INTG.HIST.LOG.REASON")]
		public List<string> StcIntgHistLogReason { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<StudentAcadCredStcStatuses> StcStatusesEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<StudentAcadCredStcGpa1Fields> StcGpa1FieldsEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<StudentAcadCredIntgGradeReasons> IntgGradeReasonsEntityAssociation { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<StudentAcadCredStcIntgHist> StcIntgHistEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: STC.STATUSES
			
			StcStatusesEntityAssociation = new List<StudentAcadCredStcStatuses>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(StcStatus != null)
			{
				int numStcStatuses = StcStatus.Count;
				if (StcStatusTime !=null && StcStatusTime.Count > numStcStatuses) numStcStatuses = StcStatusTime.Count;
				if (StcStatusDate !=null && StcStatusDate.Count > numStcStatuses) numStcStatuses = StcStatusDate.Count;
				if (StcStatusReason !=null && StcStatusReason.Count > numStcStatuses) numStcStatuses = StcStatusReason.Count;

				for (int i = 0; i < numStcStatuses; i++)
				{

					DateTime? value0 = null;
					if (StcStatusTime != null && i < StcStatusTime.Count)
					{
						value0 = StcStatusTime[i];
					}


					string value1 = "";
					if (StcStatus != null && i < StcStatus.Count)
					{
						value1 = StcStatus[i];
					}


					DateTime? value2 = null;
					if (StcStatusDate != null && i < StcStatusDate.Count)
					{
						value2 = StcStatusDate[i];
					}


					string value3 = "";
					if (StcStatusReason != null && i < StcStatusReason.Count)
					{
						value3 = StcStatusReason[i];
					}

					StcStatusesEntityAssociation.Add(new StudentAcadCredStcStatuses( value0, value1, value2, value3));
				}
			}
			// EntityAssociation Name: STC.GPA1.FIELDS
			
			StcGpa1FieldsEntityAssociation = new List<StudentAcadCredStcGpa1Fields>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(StcGpa1AcadPrograms != null)
			{
				int numStcGpa1Fields = StcGpa1AcadPrograms.Count;
				if (StcGpa1Majors !=null && StcGpa1Majors.Count > numStcGpa1Fields) numStcGpa1Fields = StcGpa1Majors.Count;

				for (int i = 0; i < numStcGpa1Fields; i++)
				{

					string value0 = "";
					if (StcGpa1AcadPrograms != null && i < StcGpa1AcadPrograms.Count)
					{
						value0 = StcGpa1AcadPrograms[i];
					}


					string value1 = "";
					if (StcGpa1Majors != null && i < StcGpa1Majors.Count)
					{
						value1 = StcGpa1Majors[i];
					}

					StcGpa1FieldsEntityAssociation.Add(new StudentAcadCredStcGpa1Fields( value0, value1));
				}
			}
			// EntityAssociation Name: INTG.GRADE.REASONS
			
			IntgGradeReasonsEntityAssociation = new List<StudentAcadCredIntgGradeReasons>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(StcIntgGradeType != null)
			{
				int numIntgGradeReasons = StcIntgGradeType.Count;
				if (StcIntgGradeSubmitReason !=null && StcIntgGradeSubmitReason.Count > numIntgGradeReasons) numIntgGradeReasons = StcIntgGradeSubmitReason.Count;

				for (int i = 0; i < numIntgGradeReasons; i++)
				{

					string value0 = "";
					if (StcIntgGradeType != null && i < StcIntgGradeType.Count)
					{
						value0 = StcIntgGradeType[i];
					}


					string value1 = "";
					if (StcIntgGradeSubmitReason != null && i < StcIntgGradeSubmitReason.Count)
					{
						value1 = StcIntgGradeSubmitReason[i];
					}

					IntgGradeReasonsEntityAssociation.Add(new StudentAcadCredIntgGradeReasons( value0, value1));
				}
			}
			// EntityAssociation Name: STC.INTG.HIST
			
			StcIntgHistEntityAssociation = new List<StudentAcadCredStcIntgHist>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(StcIntgHistLogIdx != null)
			{
				int numStcIntgHist = StcIntgHistLogIdx.Count;
				if (StcIntgHistLogReason !=null && StcIntgHistLogReason.Count > numStcIntgHist) numStcIntgHist = StcIntgHistLogReason.Count;

				for (int i = 0; i < numStcIntgHist; i++)
				{

					string value0 = "";
					if (StcIntgHistLogIdx != null && i < StcIntgHistLogIdx.Count)
					{
						value0 = StcIntgHistLogIdx[i];
					}


					string value1 = "";
					if (StcIntgHistLogReason != null && i < StcIntgHistLogReason.Count)
					{
						value1 = StcIntgHistLogReason[i];
					}

					StcIntgHistEntityAssociation.Add(new StudentAcadCredStcIntgHist( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class StudentAcadCredStcStatuses
	{
		public DateTime? StcStatusTimeAssocMember;	
		public string StcStatusAssocMember;	
		public DateTime? StcStatusDateAssocMember;	
		public string StcStatusReasonAssocMember;	
		public StudentAcadCredStcStatuses() {}
		public StudentAcadCredStcStatuses(
			DateTime? inStcStatusTime,
			string inStcStatus,
			DateTime? inStcStatusDate,
			string inStcStatusReason)
		{
			StcStatusTimeAssocMember = inStcStatusTime;
			StcStatusAssocMember = inStcStatus;
			StcStatusDateAssocMember = inStcStatusDate;
			StcStatusReasonAssocMember = inStcStatusReason;
		}
	}
	
	[Serializable]
	public class StudentAcadCredStcGpa1Fields
	{
		public string StcGpa1AcadProgramsAssocMember;	
		public string StcGpa1MajorsAssocMember;	
		public StudentAcadCredStcGpa1Fields() {}
		public StudentAcadCredStcGpa1Fields(
			string inStcGpa1AcadPrograms,
			string inStcGpa1Majors)
		{
			StcGpa1AcadProgramsAssocMember = inStcGpa1AcadPrograms;
			StcGpa1MajorsAssocMember = inStcGpa1Majors;
		}
	}
	
	[Serializable]
	public class StudentAcadCredIntgGradeReasons
	{
		public string StcIntgGradeTypeAssocMember;	
		public string StcIntgGradeSubmitReasonAssocMember;	
		public StudentAcadCredIntgGradeReasons() {}
		public StudentAcadCredIntgGradeReasons(
			string inStcIntgGradeType,
			string inStcIntgGradeSubmitReason)
		{
			StcIntgGradeTypeAssocMember = inStcIntgGradeType;
			StcIntgGradeSubmitReasonAssocMember = inStcIntgGradeSubmitReason;
		}
	}
	
	[Serializable]
	public class StudentAcadCredStcIntgHist
	{
		public string StcIntgHistLogIdxAssocMember;	
		public string StcIntgHistLogReasonAssocMember;	
		public StudentAcadCredStcIntgHist() {}
		public StudentAcadCredStcIntgHist(
			string inStcIntgHistLogIdx,
			string inStcIntgHistLogReason)
		{
			StcIntgHistLogIdxAssocMember = inStcIntgHistLogIdx;
			StcIntgHistLogReasonAssocMember = inStcIntgHistLogReason;
		}
	}
}
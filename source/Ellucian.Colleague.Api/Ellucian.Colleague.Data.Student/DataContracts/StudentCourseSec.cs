//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 8/13/2018 4:29:23 PM by user balvano3
//
//     Type: ENTITY
//     Entity: STUDENT.COURSE.SEC
//     Application: ST
//     Environment: dvcoll
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "StudentCourseSec")]
	[ColleagueDataContract(GeneratedDateTime = "8/13/2018 4:29:23 PM", User = "balvano3")]
	[EntityDataContract(EntityName = "STUDENT.COURSE.SEC", EntityType = "PHYS")]
	public class StudentCourseSec : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: SCS.COURSE.SECTION
		/// </summary>
		[DataMember(Order = 0, Name = "SCS.COURSE.SECTION")]
		public string ScsCourseSection { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.STUDENT
		/// </summary>
		[DataMember(Order = 1, Name = "SCS.STUDENT")]
		public string ScsStudent { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.PASS.AUDIT
		/// </summary>
		[DataMember(Order = 3, Name = "SCS.PASS.AUDIT")]
		public string ScsPassAudit { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ABSENT.DATES
		/// </summary>
		[DataMember(Order = 4, Name = "SCS.ABSENT.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ScsAbsentDates { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.LOCATION
		/// </summary>
		[DataMember(Order = 8, Name = "SCS.LOCATION")]
		public string ScsLocation { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.STUDENT.ACAD.CRED
		/// </summary>
		[DataMember(Order = 9, Name = "SCS.STUDENT.ACAD.CRED")]
		public string ScsStudentAcadCred { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.TERM.GRADE1
		/// </summary>
		[DataMember(Order = 10, Name = "SCS.MID.TERM.GRADE1")]
		public string ScsMidTermGrade1 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.GRADE.DATE1
		/// </summary>
		[DataMember(Order = 11, Name = "SCS.MID.GRADE.DATE1")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ScsMidGradeDate1 { get; set; }
		
		/// <summary>
		/// CDD Name: STUDENT.COURSE.SEC.CHGOPR
		/// </summary>
		[DataMember(Order = 13, Name = "STUDENT.COURSE.SEC.CHGOPR")]
		public string StudentCourseSecChgopr { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.LAST.ATTEND.DATE
		/// </summary>
		[DataMember(Order = 15, Name = "SCS.LAST.ATTEND.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ScsLastAttendDate { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ATTENDANCE.TYPES
		/// </summary>
		[DataMember(Order = 23, Name = "SCS.ATTENDANCE.TYPES")]
		public List<string> ScsAttendanceTypes { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ATTENDANCE.REASON
		/// </summary>
		[DataMember(Order = 24, Name = "SCS.ATTENDANCE.REASON")]
		public List<string> ScsAttendanceReason { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.TERM.GRADE2
		/// </summary>
		[DataMember(Order = 27, Name = "SCS.MID.TERM.GRADE2")]
		public string ScsMidTermGrade2 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.GRADE.DATE2
		/// </summary>
		[DataMember(Order = 28, Name = "SCS.MID.GRADE.DATE2")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ScsMidGradeDate2 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.TERM.GRADE3
		/// </summary>
		[DataMember(Order = 29, Name = "SCS.MID.TERM.GRADE3")]
		public string ScsMidTermGrade3 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.GRADE.DATE3
		/// </summary>
		[DataMember(Order = 30, Name = "SCS.MID.GRADE.DATE3")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ScsMidGradeDate3 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.TERM.GRADE4
		/// </summary>
		[DataMember(Order = 31, Name = "SCS.MID.TERM.GRADE4")]
		public string ScsMidTermGrade4 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.GRADE.DATE4
		/// </summary>
		[DataMember(Order = 32, Name = "SCS.MID.GRADE.DATE4")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ScsMidGradeDate4 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.TERM.GRADE5
		/// </summary>
		[DataMember(Order = 33, Name = "SCS.MID.TERM.GRADE5")]
		public string ScsMidTermGrade5 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.GRADE.DATE5
		/// </summary>
		[DataMember(Order = 34, Name = "SCS.MID.GRADE.DATE5")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ScsMidGradeDate5 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.TERM.GRADE6
		/// </summary>
		[DataMember(Order = 35, Name = "SCS.MID.TERM.GRADE6")]
		public string ScsMidTermGrade6 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.MID.GRADE.DATE6
		/// </summary>
		[DataMember(Order = 36, Name = "SCS.MID.GRADE.DATE6")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? ScsMidGradeDate6 { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.NEVER.ATTENDED.FLAG
		/// </summary>
		[DataMember(Order = 64, Name = "SCS.NEVER.ATTENDED.FLAG")]
		public string ScsNeverAttendedFlag { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ATTENDANCE.SCORE
		/// </summary>
		[DataMember(Order = 66, Name = "SCS.ATTENDANCE.SCORE")]
		[DisplayFormat(DataFormatString = "{0:N2}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<Decimal?> ScsAttendanceScore { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ATTENDANCE.START.TIMES
		/// </summary>
		[DataMember(Order = 72, Name = "SCS.ATTENDANCE.START.TIMES")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ScsAttendanceStartTimes { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ATTENDANCE.END.TIMES
		/// </summary>
		[DataMember(Order = 73, Name = "SCS.ATTENDANCE.END.TIMES")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> ScsAttendanceEndTimes { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ATTENDANCE.INSTR.METHODS
		/// </summary>
		[DataMember(Order = 74, Name = "SCS.ATTENDANCE.INSTR.METHODS")]
		public List<string> ScsAttendanceInstrMethods { get; set; }
		
		/// <summary>
		/// CDD Name: SCS.ATTENDANCE.MINUTES
		/// </summary>
		[DataMember(Order = 75, Name = "SCS.ATTENDANCE.MINUTES")]
		public List<int?> ScsAttendanceMinutes { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<StudentCourseSecScsAttendance> ScsAttendanceEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: SCS.ATTENDANCE
			
			ScsAttendanceEntityAssociation = new List<StudentCourseSecScsAttendance>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(ScsAttendanceTypes != null)
			{
				int numScsAttendance = ScsAttendanceTypes.Count;
				if (ScsAbsentDates !=null && ScsAbsentDates.Count > numScsAttendance) numScsAttendance = ScsAbsentDates.Count;
				if (ScsAttendanceReason !=null && ScsAttendanceReason.Count > numScsAttendance) numScsAttendance = ScsAttendanceReason.Count;
				if (ScsAttendanceScore !=null && ScsAttendanceScore.Count > numScsAttendance) numScsAttendance = ScsAttendanceScore.Count;
				if (ScsAttendanceStartTimes !=null && ScsAttendanceStartTimes.Count > numScsAttendance) numScsAttendance = ScsAttendanceStartTimes.Count;
				if (ScsAttendanceEndTimes !=null && ScsAttendanceEndTimes.Count > numScsAttendance) numScsAttendance = ScsAttendanceEndTimes.Count;
				if (ScsAttendanceInstrMethods !=null && ScsAttendanceInstrMethods.Count > numScsAttendance) numScsAttendance = ScsAttendanceInstrMethods.Count;
				if (ScsAttendanceMinutes !=null && ScsAttendanceMinutes.Count > numScsAttendance) numScsAttendance = ScsAttendanceMinutes.Count;

				for (int i = 0; i < numScsAttendance; i++)
				{

					DateTime? value0 = null;
					if (ScsAbsentDates != null && i < ScsAbsentDates.Count)
					{
						value0 = ScsAbsentDates[i];
					}


					string value1 = "";
					if (ScsAttendanceTypes != null && i < ScsAttendanceTypes.Count)
					{
						value1 = ScsAttendanceTypes[i];
					}


					string value2 = "";
					if (ScsAttendanceReason != null && i < ScsAttendanceReason.Count)
					{
						value2 = ScsAttendanceReason[i];
					}


					Decimal? value3 = null;
					if (ScsAttendanceScore != null && i < ScsAttendanceScore.Count)
					{
						value3 = ScsAttendanceScore[i];
					}


					DateTime? value4 = null;
					if (ScsAttendanceStartTimes != null && i < ScsAttendanceStartTimes.Count)
					{
						value4 = ScsAttendanceStartTimes[i];
					}


					DateTime? value5 = null;
					if (ScsAttendanceEndTimes != null && i < ScsAttendanceEndTimes.Count)
					{
						value5 = ScsAttendanceEndTimes[i];
					}


					string value6 = "";
					if (ScsAttendanceInstrMethods != null && i < ScsAttendanceInstrMethods.Count)
					{
						value6 = ScsAttendanceInstrMethods[i];
					}


					int? value7 = null;
					if (ScsAttendanceMinutes != null && i < ScsAttendanceMinutes.Count)
					{
						value7 = ScsAttendanceMinutes[i];
					}

					ScsAttendanceEntityAssociation.Add(new StudentCourseSecScsAttendance( value0, value1, value2, value3, value4, value5, value6, value7));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class StudentCourseSecScsAttendance
	{
		public DateTime? ScsAbsentDatesAssocMember;	
		public string ScsAttendanceTypesAssocMember;	
		public string ScsAttendanceReasonAssocMember;	
		public Decimal? ScsAttendanceScoreAssocMember;	
		public DateTime? ScsAttendanceStartTimesAssocMember;	
		public DateTime? ScsAttendanceEndTimesAssocMember;	
		public string ScsAttendanceInstrMethodsAssocMember;	
		public int? ScsAttendanceMinutesAssocMember;	
		public StudentCourseSecScsAttendance() {}
		public StudentCourseSecScsAttendance(
			DateTime? inScsAbsentDates,
			string inScsAttendanceTypes,
			string inScsAttendanceReason,
			Decimal? inScsAttendanceScore,
			DateTime? inScsAttendanceStartTimes,
			DateTime? inScsAttendanceEndTimes,
			string inScsAttendanceInstrMethods,
			int? inScsAttendanceMinutes)
		{
			ScsAbsentDatesAssocMember = inScsAbsentDates;
			ScsAttendanceTypesAssocMember = inScsAttendanceTypes;
			ScsAttendanceReasonAssocMember = inScsAttendanceReason;
			ScsAttendanceScoreAssocMember = inScsAttendanceScore;
			ScsAttendanceStartTimesAssocMember = inScsAttendanceStartTimes;
			ScsAttendanceEndTimesAssocMember = inScsAttendanceEndTimes;
			ScsAttendanceInstrMethodsAssocMember = inScsAttendanceInstrMethods;
			ScsAttendanceMinutesAssocMember = inScsAttendanceMinutes;
		}
	}
}
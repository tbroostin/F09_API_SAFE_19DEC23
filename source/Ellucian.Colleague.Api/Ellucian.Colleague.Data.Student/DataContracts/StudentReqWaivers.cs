//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 3:19:01 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: STUDENT.REQ.WAIVERS
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "StudentReqWaivers")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 3:19:01 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "STUDENT.REQ.WAIVERS", EntityType = "PHYS")]
	public class StudentReqWaivers : IColleagueEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
		
		/// <summary>
		/// CDD Name: STUDENT.REQ.WAIVERS.CHGDATE
		/// </summary>
		[DataMember(Order = 3, Name = "STUDENT.REQ.WAIVERS.CHGDATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? StudentReqWaiversChgdate { get; set; }
		
		/// <summary>
		/// CDD Name: STUDENT.REQ.WAIVERS.CHGOPR
		/// </summary>
		[DataMember(Order = 4, Name = "STUDENT.REQ.WAIVERS.CHGOPR")]
		public string StudentReqWaiversChgopr { get; set; }
		
		/// <summary>
		/// CDD Name: STUDENT.REQ.WAIVERS.CHGTIME
		/// </summary>
		[DataMember(Order = 5, Name = "STUDENT.REQ.WAIVERS.CHGTIME")]
		[DisplayFormat(DataFormatString = "{0:T}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? StudentReqWaiversChgtime { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.STUDENT
		/// </summary>
		[DataMember(Order = 6, Name = "SRWV.STUDENT")]
		public string SrwvStudent { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.TERM
		/// </summary>
		[DataMember(Order = 7, Name = "SRWV.TERM")]
		public string SrwvTerm { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.START.DATE
		/// </summary>
		[DataMember(Order = 8, Name = "SRWV.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? SrwvStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.END.DATE
		/// </summary>
		[DataMember(Order = 9, Name = "SRWV.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? SrwvEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.COURSE
		/// </summary>
		[DataMember(Order = 10, Name = "SRWV.COURSE")]
		public string SrwvCourse { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.SECTION
		/// </summary>
		[DataMember(Order = 11, Name = "SRWV.SECTION")]
		public string SrwvSection { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.WAIVER.PERSON.ID
		/// </summary>
		[DataMember(Order = 12, Name = "SRWV.WAIVER.PERSON.ID")]
		public string SrwvWaiverPersonId { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.COMMENTS
		/// </summary>
		[DataMember(Order = 13, Name = "SRWV.COMMENTS")]
		public string SrwvComments { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.REASON
		/// </summary>
		[DataMember(Order = 14, Name = "SRWV.REASON")]
		public string SrwvReason { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.ACAD.REQMTS
		/// </summary>
		[DataMember(Order = 15, Name = "SRWV.ACAD.REQMTS")]
		public List<string> SrwvAcadReqmts { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.WAIVE.REQMT.FLAG
		/// </summary>
		[DataMember(Order = 16, Name = "SRWV.WAIVE.REQMT.FLAG")]
		public List<string> SrwvWaiveReqmtFlag { get; set; }
		
		/// <summary>
		/// CDD Name: SRWV.REVOKED.FLAG
		/// </summary>
		[DataMember(Order = 21, Name = "SRWV.REVOKED.FLAG")]
		public string SrwvRevokedFlag { get; set; }
		
		/// <summary>
		/// Entity assocation member
		/// </summary>
		[DataMember]
		public List<StudentReqWaiversSrwvReqCourses> SrwvReqCoursesEntityAssociation { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			// EntityAssociation Name: SRWV.REQ.COURSES
			
			SrwvReqCoursesEntityAssociation = new List<StudentReqWaiversSrwvReqCourses>();
			// Set max length to the count of controller when initializing.
			//Update max length if any of the association members has higher length than controller length
			if(SrwvAcadReqmts != null)
			{
				int numSrwvReqCourses = SrwvAcadReqmts.Count;
				if (SrwvWaiveReqmtFlag !=null && SrwvWaiveReqmtFlag.Count > numSrwvReqCourses) numSrwvReqCourses = SrwvWaiveReqmtFlag.Count;

				for (int i = 0; i < numSrwvReqCourses; i++)
				{

					string value0 = "";
					if (SrwvAcadReqmts != null && i < SrwvAcadReqmts.Count)
					{
						value0 = SrwvAcadReqmts[i];
					}


					string value1 = "";
					if (SrwvWaiveReqmtFlag != null && i < SrwvWaiveReqmtFlag.Count)
					{
						value1 = SrwvWaiveReqmtFlag[i];
					}

					SrwvReqCoursesEntityAssociation.Add(new StudentReqWaiversSrwvReqCourses( value0, value1));
				}
			}
			   
		}
	}
	
	// EntityAssociation classes
	
	[Serializable]
	public class StudentReqWaiversSrwvReqCourses
	{
		public string SrwvAcadReqmtsAssocMember;	
		public string SrwvWaiveReqmtFlagAssocMember;	
		public StudentReqWaiversSrwvReqCourses() {}
		public StudentReqWaiversSrwvReqCourses(
			string inSrwvAcadReqmts,
			string inSrwvWaiveReqmtFlag)
		{
			SrwvAcadReqmtsAssocMember = inSrwvAcadReqmts;
			SrwvWaiveReqmtFlagAssocMember = inSrwvWaiveReqmtFlag;
		}
	}
}
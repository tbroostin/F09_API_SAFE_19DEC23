//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the DSL/T4 Generator - Version 1.2
//     Last generated on 10/4/2017 3:20:30 PM by user dvcoll-schandraseka
//
//     Type: ENTITY
//     Entity: TERMS
//     Application: ST
//     Environment: dvColl
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Web;
using System.Runtime.Serialization;
using System.CodeDom.Compiler;
using Ellucian.Dmi.Runtime;
using Ellucian.Data.Colleague;

namespace Ellucian.Colleague.Data.Student.DataContracts
{
	[GeneratedCodeAttribute("Colleague Data Contract Generator", "1.2")]
	[DataContract(Name = "Terms")]
	[ColleagueDataContract(GeneratedDateTime = "10/4/2017 3:20:30 PM", User = "dvcoll-schandraseka")]
	[EntityDataContract(EntityName = "TERMS", EntityType = "PHYS")]
	public class Terms : IColleagueGuidEntity
	{
		/// <summary>
		/// Version
		/// </summary>
		[DataMember]
		public int _AppServerVersion { get; set; }

		/// <summary>
		/// Record Key
		/// </summary>
		[DataMember]
		public string Recordkey { get; set; }
		
		public void setKey(string key)
		{
			Recordkey = key;
		}
	
		/// <summary>
		/// Record GUID
		/// </summary>
		[DataMember(Name = "RecordGuid")]
		public string RecordGuid { get; set; }

		/// <summary>
		/// Record Model Name
		/// </summary>
		[DataMember(Name = "RecordModelName")]
		public string RecordModelName { get; set; }	
		
		/// <summary>
		/// CDD Name: TERM.REPORTING.YEAR
		/// </summary>
		[DataMember(Order = 0, Name = "TERM.REPORTING.YEAR")]
		public int? TermReportingYear { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.DESC
		/// </summary>
		[DataMember(Order = 1, Name = "TERM.DESC")]
		public string TermDesc { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.PREREG.START.DATE
		/// </summary>
		[DataMember(Order = 2, Name = "TERM.PREREG.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermPreregStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.REG.START.DATE
		/// </summary>
		[DataMember(Order = 3, Name = "TERM.REG.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermRegStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.START.DATE
		/// </summary>
		[DataMember(Order = 4, Name = "TERM.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.END.DATE
		/// </summary>
		[DataMember(Order = 5, Name = "TERM.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.SESSION
		/// </summary>
		[DataMember(Order = 6, Name = "TERM.SESSION")]
		public string TermSession { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.REG.END.DATE
		/// </summary>
		[DataMember(Order = 7, Name = "TERM.REG.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermRegEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.PREREG.END.DATE
		/// </summary>
		[DataMember(Order = 8, Name = "TERM.PREREG.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermPreregEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.REPORTING.TERM
		/// </summary>
		[DataMember(Order = 9, Name = "TERM.REPORTING.TERM")]
		public string TermReportingTerm { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.ADD.START.DATE
		/// </summary>
		[DataMember(Order = 13, Name = "TERM.ADD.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermAddStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.ADD.END.DATE
		/// </summary>
		[DataMember(Order = 14, Name = "TERM.ADD.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermAddEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.DROP.GRADE.REQD.DATE
		/// </summary>
		[DataMember(Order = 15, Name = "TERM.DROP.GRADE.REQD.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermDropGradeReqdDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.DROP.START.DATE
		/// </summary>
		[DataMember(Order = 16, Name = "TERM.DROP.START.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermDropStartDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.DROP.END.DATE
		/// </summary>
		[DataMember(Order = 17, Name = "TERM.DROP.END.DATE")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public DateTime? TermDropEndDate { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.SEQUENCE.NO
		/// </summary>
		[DataMember(Order = 25, Name = "TERM.SEQUENCE.NO")]
		public int? TermSequenceNo { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.FA.YEARS
		/// </summary>
		[DataMember(Order = 26, Name = "TERM.FA.YEARS")]
		public List<int?> TermFaYears { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.ACAD.LEVELS
		/// </summary>
		[DataMember(Order = 27, Name = "TERM.ACAD.LEVELS")]
		public List<string> TermAcadLevels { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.CENSUS.DATES
		/// </summary>
		[DataMember(Order = 34, Name = "TERM.CENSUS.DATES")]
		[DisplayFormat(DataFormatString = "{0:d}")]
		[ColleagueDataMember(UseEnvisionInternalFormat = true)]
		public List<DateTime?> TermCensusDates { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.REG.PRIORITY.FLAG
		/// </summary>
		[DataMember(Order = 45, Name = "TERM.REG.PRIORITY.FLAG")]
		public string TermRegPriorityFlag { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.PCF.PERIOD
		/// </summary>
		[DataMember(Order = 48, Name = "TERM.PCF.PERIOD")]
		public string TermPcfPeriod { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.DEFAULT.ON.PLAN
		/// </summary>
		[DataMember(Order = 49, Name = "TERM.DEFAULT.ON.PLAN")]
		public string TermDefaultOnPlan { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.DEGREE.PLANNING
		/// </summary>
		[DataMember(Order = 50, Name = "TERM.DEGREE.PLANNING")]
		public string TermDegreePlanning { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.USE.IN.BEST.FIT.CALC
		/// </summary>
		[DataMember(Order = 51, Name = "TERM.USE.IN.BEST.FIT.CALC")]
		public string TermUseInBestFitCalc { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.SESSION.CYCLES
		/// </summary>
		[DataMember(Order = 52, Name = "TERM.SESSION.CYCLES")]
		public List<string> TermSessionCycles { get; set; }
		
		/// <summary>
		/// CDD Name: TERM.YEARLY.CYCLES
		/// </summary>
		[DataMember(Order = 53, Name = "TERM.YEARLY.CYCLES")]
		public List<string> TermYearlyCycles { get; set; }
		
	
		// build up all the Associated objects and add them to the properties
		public void buildAssociations()
		{	
			   
		}
	}
	
	// EntityAssociation classes
}
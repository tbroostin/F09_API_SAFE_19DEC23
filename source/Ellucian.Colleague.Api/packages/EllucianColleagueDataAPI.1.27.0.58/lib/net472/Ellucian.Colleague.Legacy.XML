<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ellucian.Colleague.Legacy</name>
    </assembly>
    <members>
        <member name="T:Ellucian.Colleague.Legacy.Logging.WebServiceLogger">
            <summary>
            The WebServiceLogger class uses a singleton pattern to provide various logging capabilities
            for the client and server.
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.LoggingCategory">
            <summary>
            Category constant - to be kept in sync with Ellucian.Web.Infrastructure.Logging.EnterpriseLogger().LoggingCategory
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Legacy.Logging.WebServiceLogger._instance">
            <summary>
            Singleton instance of WebServiceLogger
            </summary>
        </member>
        <member name="F:Ellucian.Colleague.Legacy.Logging.WebServiceLogger._loggingConfigured">
            <summary>
            Static, readonly logger bool.
            </summary>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.#ctor">
            <summary>
            Private Constructor
            </summary>
        </member>
        <member name="P:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.Instance">
            <summary>
            WebServiceLogger singleton instance property
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.AppendPropertySet(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Boolean)">
            <summary>
            This static utility method appends a Security Token and Control ID to logging event properties.
            </summary>
            <param name="properties">logging event properties</param>
            <param name="securityToken">client session security token</param>
            <param name="controlID">client session unique control identifier</param>
            <param name="serverLogging">if set to <c>true</c> [server logging].</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.AppendPropertySet(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String,System.Boolean)">
            <summary>
            This static utility method appends a Security Token, Control ID, and User ID to logging event properties.
            </summary>
            <param name="properties">logging event properties</param>
            <param name="securityToken">client session security token</param>
            <param name="controlID">client session unique control identifier</param>
            <param name="userID">client session user ID</param>
            <param name="serverLogging">if set to <c>true</c> [server logging].</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.ConvertStringToLogLevel(System.String)">
            <summary>
            This static utility method maps a string version of a log level to a TraceEventType level.
               "FATAL" to TraceEventType.Critical,
               "ERROR" to TraceEventType.Error,
               "WARN" to TraceEventType.Warning,
               "DEBUG" to TraceEventType.Verbose,
               "INFO" to TraceEventType.Information,
               Any other input is mapped to TraceEventType.Critical
            </summary>
            <param name="levelName">string representation of a log level</param>
            <returns>
            TraceEventType log level
            </returns>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.ConvertLogLevelToString(System.Diagnostics.TraceEventType)">
            <summary>
            This static utility method maps a TraceEventType log level to a string version of the log level.
              TraceEventType.Critical to "FATAL",
              TraceEventType.Error to "ERROR",
              TraceEventType.Warning to "WARN",
              TraceEventType.Verbose to "DEBUG",
              TraceEventType.Information to "INFO",
              Any other enum value is mapped to "FATAL"
            </summary>
            <param name="levelName">string representation of a log level</param>
            <returns>
            TraceEventType log level
            </returns>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.WriteLog(System.Diagnostics.TraceEventType,System.String,System.Exception,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Writes a log message and exception with the specified level with special logging properties to the specified client or server log.
            </summary>
            <param name="targetLevel">
            Level of the log entry:
               TraceEventType.Critical to "FATAL",
               TraceEventType.Error to "ERROR",
               TraceEventType.Warning to "WARN",
               TraceEventType.Verbose to "DEBUG",
               TraceEventType.Information to "INFO",
               Any other enum value is mapped to "FATAL"</param>
            <param name="message">Message to log or null</param>
            <param name="exception">Exception to log or null</param>
            <param name="properties">Logging properties for the log entry</param>
            <param name="serverLogger">true if written to server log</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.WriteClientLog(System.Diagnostics.TraceEventType,System.String,System.Exception,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Writes a client log message and exception with the specified level with special logging properties.
            </summary>
            <param name="targetLevel">
            Level of the log entry:
               TraceEventType.Critical to "FATAL",
               TraceEventType.Error to "ERROR",
               TraceEventType.Warning to "WARN",
               TraceEventType.Verbose to "DEBUG",
               TraceEventType.Information to "INFO",
               Any other enum value is mapped to "FATAL"</param>
            <param name="message">Message to log or null</param>
            <param name="exception">Exception to log or null</param>
            <param name="properties">Logging properties for the log entry</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.WriteServerLog(System.Diagnostics.TraceEventType,System.Exception,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Writes a server exception with the specified level with special logging properties.
            </summary>
            <param name="targetLevel">
            Level of the log entry:
               TraceEventType.Critical to "FATAL",
               TraceEventType.Error to "ERROR",
               TraceEventType.Warning to "WARN",
               TraceEventType.Verbose to "DEBUG",
               TraceEventType.Information to "INFO",
               Any other enum value is mapped to "FATAL"</param>
            <param name="exception">Exception to log or null</param>
            <param name="properties">Logging properties for the log entry</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.WriteServerLog(System.Diagnostics.TraceEventType,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Writes a server log message with the specified level with special logging properties.
            </summary>
            <param name="targetLevel">
            Level of the log entry:
               TraceEventType.Critical to "FATAL",
               TraceEventType.Error to "ERROR",
               TraceEventType.Warning to "WARN",
               TraceEventType.Verbose to "DEBUG",
               TraceEventType.Information to "INFO",
               Any other enum value is mapped to "FATAL"</param>
            <param name="message">Message to log or null</param>
            <param name="properties">Logging properties for the log entry</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.WriteServerLog(System.Diagnostics.TraceEventType,System.String,System.Exception,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Writes a server log message and exception with the specified level with special logging properties.
            </summary>
            <param name="targetLevel">
            Level of the log entry:
               TraceEventType.Critical to "FATAL",
               TraceEventType.Error to "ERROR",
               TraceEventType.Warning to "WARN",
               TraceEventType.Verbose to "DEBUG",
               TraceEventType.Information to "INFO",
               Any other enum value is mapped to "FATAL"</param>
            <param name="message">Message to log or null</param>
            <param name="exception">Exception to log or null</param>
            <param name="properties">Logging properties for the log entry</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.WriteServerLog(System.Diagnostics.TraceEventType,System.String,System.Exception)">
            <summary>
            Writes a server log message and exception with the specified level.
            </summary>
            <param name="targetLevel">
            Level of the log entry:
              TraceEventType.Critical to "FATAL",
              TraceEventType.Error to "ERROR",
              TraceEventType.Warning to "WARN",
              TraceEventType.Verbose to "DEBUG",
              TraceEventType.Information to "INFO",
              Any other enum value is mapped to "FATAL"</param>
            <param name="message">Message to log or null</param>
            <param name="exception">Exception to log or null</param>
        </member>
        <member name="M:Ellucian.Colleague.Legacy.Logging.WebServiceLogger.WriteServerLog(System.Diagnostics.TraceEventType,System.String)">
            <summary>
            Writes a server log message with the specified level.
            </summary>
            <param name="targetLevel">
            Level of the log entry:
              TraceEventType.Critical to "FATAL",
              TraceEventType.Error to "ERROR",
              TraceEventType.Warning to "WARN",
              TraceEventType.Verbose to "DEBUG",
              TraceEventType.Information to "INFO",
              Any other enum value is mapped to "FATAL"</param>
            <param name="message">Message to log or null</param>
        </member>
    </members>
</doc>
